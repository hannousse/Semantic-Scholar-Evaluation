%% This BibTeX bibliography file was created using BibDesk.
%% https://bibdesk.sourceforge.io/

%% Created for Salima Yahiouche at 2020-10-24 19:59:36 +0100 


%% Saved with string encoding Unicode (UTF-8) 



@article{Gamez:2013,
	Abstract = {Context
Ambient Intelligence systems domain is an outstanding example of modern systems that are in permanent evolution, as new devices, technologies or facilities are continuously appearing. This means it would be desirable to have a mechanism that helps with the propagation of evolution changes in deployed systems.

Objective
We present a software product line engineering process to manage the evolution of FamiWare, a family of middleware for ambient intelligence environments. This process drives the evolution of FamiWare middleware configurations using cardinality-based feature models, which are especially well suited to express the structural variability of ambient intelligence systems.

Method
FamiWare uses cardinality-based feature models and clonable features to model the structural variability present in ambient intelligence systems, composed of a large variety of heterogeneous devices. Since the management evolution of configurations with clonable features is manually untreatable due to the high number of features, our process automates it and propagates changes made at feature level to the architectural components of the FamiWare middleware. This is a model driven development process as the evolution management, the propagation of evolution changes and the code generation are performed using some kind of model mappings and transformations. Concretely we present a variability modelling language to map the selection of features to the corresponding FamiWare middleware architectural components.

Results
Our process is able to manage the evolution of cardinality-based feature models with thousands of features, something which is not possible to tackle manually. Thanks to the use of the variability language and the automatic code generation it is possible to propagate and maintain a correspondence between the FamiWare architectural model and the code. The process is then able to calculate the architectural differences between the evolved configuration and the previous one. Checking these differences, our process helps to calculate the effort needed to perform the evolution changes in the customized products. To perform those tasks we have defined two operators, one to calculate the differences between two feature model configurations and another to create a new configuration from a previous one.

Conclusion
Our process automatically propagates the evolution changes of the middleware family into the existing configurations where the middleware is already deployed and also helps us to calculate the effort in performing the changes in every configuration. Finally, we validated our approach, demonstrating the functioning of the defined operators and showing that by using our tool we can generate evolved configurations for FamiWare with thousands of cloned features, for several case studies.},
	Author = {Gamez, Nadia and Fuentes, Lidia},
	Date-Added = {2019-05-22 11:44:34 +0100},
	Date-Modified = {2020-10-12 23:16:02 +0100},
	Doi = {10.1016/j.infsof.2012.06.012},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Middleware family; Software Product Lines; Feature Models; Evolution},
	Number = {3},
	Pages = {563--580},
	Publisher = {Elsevier BV},
	Title = {Architectural evolution of FamiWare using cardinality-based feature models},
	Url = {http://dx.doi.org/10.1016/j.infsof.2012.06.012},
	Volume = {55},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.infsof.2012.06.012}}

@article{Ruiz_Lopez:2013,
	Abstract = {Recent technological advances are increasing the spread of Ubiquitous Computing, leading to the appearance of numerous software systems, which benefit from the features of this new paradigm. Nevertheless, there are a lack of methodologies to properly support the development process of these systems. An important part of the Software Engineering lifecycle is the Requirements Engineering stage, as it grounds the bases for system design for their success. In particular, systematically addressing Non-Functional Requirements such as dynamicity and adaptation, that are important features of ubiquitous systems, eventually leads to higher quality designs. In this paper, a Requirements Engineering Method for the analysis of Ubiquitous Systems, called REUBI, is introduced. It is a goal-based method that represents the influence of context and adverse situations, providing an evaluation procedure to help in the decision making about objectives satisfaction. The proposal is illustrated through the analysis of a Positioning Service of a real system. Additionally, the application of the method has been evaluated by a team of software engineers for the analysis of an Ambient Assisted Living (AAL) health care system.},
	Author = {Ruiz-L{\'o}pez, Tom{\'a}s and Noguera, Manuel and Rodr{\'\i}guez, Mar{\'\i}a Jos{\'e} and Garrido, Jos{\'e} Luis and Chung, Lawrence},
	Date-Added = {2019-05-22 11:43:56 +0100},
	Date-Modified = {2020-10-14 20:33:04 +0100},
	Doi = {10.1016/j.scico.2012.07.021},
	Issn = {0167-6423},
	Journal = {Science of Computer Programming},
	Keywords = {Non-functional requirements; Requirements engineering; Ubiquitous systems; Software design; Context-awareness; Positioning systems},
	Number = {10},
	Pages = {1895--1911},
	Publisher = {Elsevier BV},
	Title = {REUBI: A Requirements Engineering method for ubiquitous systems},
	Url = {http://dx.doi.org/10.1016/j.scico.2012.07.021},
	Volume = {78},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.scico.2012.07.021}}

@article{Moros:2013,
	Abstract = {Context
Model-Driven Software Development (MDSD) has emerged as a very promising approach to cope with the inherent complexity of modern software-based systems. Furthermore, it is well known that the Requirements Engineering (RE) stage is critical for a project's success. Despite the importance of RE, MDSD approaches commonly leave textual requirements specifications to one side.

Objective
Our aim is to integrate textual requirements specifications into the MDSD approach by using the MDSD techniques themselves, including metamodelling and model transformations. The proposal is based on the assumption that a reuse-based Model-Driven Requirements Engineering (MDRE) approach will improve the requirements engineering stage, the quality of the development models generated from requirements models, and will enable the traces from requirements to other development concepts (such as analysis or design) to be maintained.

Method
The approach revolves around the Requirements Engineering Metamodel, denominated as REMM, which supports the definition of the boilerplate based textual requirements specification languages needed for the definition of model transformation from application requirements models to platform-specific application models and code.

Results
The approach has been evaluated through its application to Home Automation (HA) systems. The HA Requirement Specification Language denominated as HAREL is used to define application requirements models which will be automatically transformed and traced to the application model conforming to the HA Domain Specific Language.

Conclusions
An anonymous online survey has been conducted to evaluate the degree of acceptance by both HA application developers and MDSD practitioners. The main conclusion is that 66.7% of the HA experts polled strongly agree that the automatic transformation of the requirements models to HA models improves the quality of the HA models. Moreover, 58.3% of the HA participants strongly agree with the usefulness of the traceability matrix which links requirements to HA functional units in order to discover which devices are related to a specific requirement. We can conclude that the experts we have consulted agree with the proposal we are presenting here, since the average mark given is 4 out of 5.},
	Author = {Moros, Bego{\~n}a and Toval, Ambrosio and Rosique, Francisca and S{\'a}nchez, Pedro},
	Date-Added = {2019-05-22 11:43:21 +0100},
	Date-Modified = {2020-10-14 19:50:16 +0100},
	Doi = {10.1016/j.infsof.2012.12.003},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Requirements metamodel; Requirements reuse; Requirements traceability; Models transformation; Model driven software development; Home automation models},
	Number = {6},
	Pages = {941--965},
	Publisher = {Elsevier BV},
	Title = {Transforming and tracing reused requirements models to home automation models},
	Url = {http://dx.doi.org/10.1016/j.infsof.2012.12.003},
	Volume = {55},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.infsof.2012.12.003}}

@article{Huang:2010,
	Abstract = {Real-time hybrid testing of civil structures, in which computational models and physical components must be integrated with high fidelity at run-time, represents a grand challenge in the emerging area of cyber-physical systems. Actuator dynamics, complex interactions among computers and physical components, and computation and communication delays all must be managed carefully to achieve accurate tests.
In this paper we present a case study of several fundamental interlocking challenges in developing and evaluating cyber-physical systems for real-time hybrid structural testing: (1) how physical and simulated components can be integrated flexibly and efficiently within a common reusable middleware architecture; (2) how predictable timing can be achieved atop commonly available hardware and software platforms; and (3) how physical vs. simulated versions of different components within a system can be interchanged with high fidelity between comparable configurations. Experimental results obtained through this case study give evidence of the feasibility and efficacy of these steps towards our overall goal: to develop a Cyber-physical Instrument for Real-time hybrid Structural Testing (CIRST).},
	Author = {Huang, Huang-Ming and Tidwell, Terry and Gill, Christopher and Lu, Chenyang and Gao, Xiuyu and Dyke, Shirley},
	Date-Added = {2019-05-22 11:42:26 +0100},
	Date-Modified = {2020-10-24 19:52:35 +0100},
	Doi = {10.1145/1795194.1795205},
	Isbn = {9781450300667},
	Journal = {Proceedings of the 1st ACM/IEEE International Conference on Cyber-Physical Systems - ICCPS '10},
	Keywords = {Real-time hybrid structural testing; cyber-physical systems; middleware},
	Pages = {10},
	Publisher = {ACM Press},
	Title = {Cyber-physical systems for real-time hybrid structural testing: a case study},
	Url = {http://dx.doi.org/10.1145/1795194.1795205},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/1795194.1795205}}

@article{Basanta_Val:2013,
	Abstract = {OSGi was designed with embedded systems in mind, its current support is insufficient for coping with one main characteristic of many embedded systems: real‐time performance. This article analyzes different key issues in providing OSGi with real‐time Java performance covering motivational issues, and different integration ways and challenges stemming from the integration. It also contributes a general framework for introducing real‐time performance in OSGi, which is called the real‐time for OSGi framework. The framework uses real‐time Java virtual machines and the real‐time specification for Java. The adoption of this framework allows cyber‐physical systems to experience real‐time Java performance in their applications. The framework introduces several integration levels for OSGi and real‐time specification for Java, and specific real‐time OSGi services. An empirical implementation was carried out using standard software, which was extended with the new defined services.},
	Author = {Basanta-Val, P. and Garc{\'\i}a-Valls, M. and Est{\'e}vez-Ayres, I.},
	Date-Added = {2019-05-22 11:41:04 +0100},
	Date-Modified = {2020-10-12 23:25:47 +0100},
	Doi = {10.1002/spe.2101},
	Issn = {0038-0644},
	Journal = {Software: Practice and Experience},
	Keywords = {OSGi; real-time; RTSJ; Java; real-time Java},
	Number = {1},
	Pages = {33--65},
	Publisher = {Wiley},
	Title = {Enhancing OSGi with real-time Java support},
	Url = {http://dx.doi.org/10.1002/spe.2101},
	Volume = {43},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1002/spe.2101}}

@article{Chuang:2011,
	Abstract = {User interface design plays an important role in software usability. In particular, the user human interaction in embedded systems and cyber-physical systems is a critical design challenge. GUI improves user experience for untrained users but, at the same time, brings great challenges to software testing. In 2002, Memon reported that up to 60% of the software testing are conducted against user interface. In the last decade, many automatic GUI testing approaches are proposed to address this challenge. In particular, model-based GUI testing mechanisms generate testing cases according to state transition diagram and software model. In this paper, we present the design and implementation for a user behavior augmented GUI test case generation mechanism. We define User Computer Interaction Hidden Markov Model (UCIHMM) to model user behaviors. With trained UCIHMMs, the developed algorithm generates test cases to emulate user computer interactions for various types of users. To evaluate the effectiveness and completeness of the developed mechanism, we conduct the experiments against an open source embedded software for hospital staffs. The results show that the developed mechanism allows the developers to discover the software flaws that model-based testing approaches fail to.},
	Author = {Chuang, Kuan-Chun and Shih, Chi-Sheng and Hung, Shih-Hao},
	Date-Added = {2019-05-22 11:40:22 +0100},
	Date-Modified = {2020-10-24 19:59:28 +0100},
	Doi = {10.1145/2103380.2103421},
	Isbn = {9781450310871},
	Journal = {Proceedings of the 2011 ACM Symposium on Research in Applied Computation - RACS '11},
	Keywords = {user computer interaction; cyber-physical systems; embedded systems},
	Pages = {9},
	Publisher = {ACM Press},
	Title = {User behavior augmented software testing for user-centered GUI},
	Url = {http://dx.doi.org/10.1145/2103380.2103421},
	Year = {2011},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2103380.2103421}}

@article{Baresi:2012,
	Abstract = {An operational example of controls in a smart home demonstrates the potential of a solution that combines the Common Variability Language and a dynamic extension of the Business Process Execution Language to address the need to manage software system variability at runtime.},
	Author = {Baresi, Luciano and Guinea, Sam and Pasquale, Liliana},
	Date-Added = {2019-05-22 11:39:51 +0100},
	Date-Modified = {2020-10-14 20:27:47 +0100},
	Doi = {10.1109/mc.2012.289},
	Issn = {0018-9162},
	Journal = {Computer},
	Keywords = {dynamic software product lines; service-oriented architectures; BPEL; self-adaptation},
	Number = {10},
	Pages = {42--48},
	Publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
	Title = {Service-Oriented Dynamic Software Product Lines},
	Url = {http://dx.doi.org/10.1109/MC.2012.289},
	Volume = {45},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/MC.2012.289},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/mc.2012.289}}

@article{Guo:2010a,
	Abstract = {This paper presents iPlumber, a user-oriented management system for ubiquitous computing environments. Different from previous low-benefit ``zero-configuration'' systems or high cognitive-cost ``end user programming'' tools, our work attempts to attain a better balance between user benefits and cost by exploring the meta-design approach. A set of typical management activities in ubicomp environments are supported, from basic-level software sharing, foraging, and low-cost software configuration to advanced-level cooperative software co-design and error handling. These activities are elaborated through a smart home control scenario. The usability of our system is validated through an initial user study with a total of 33 subjects to test the management activities from an open exhibition environment and a controlled university environment.},
	Author = {Guo, Bin and Zhang, Daqing and Imai, Michita},
	Date-Added = {2019-05-22 11:39:05 +0100},
	Date-Modified = {2020-10-14 21:10:24 +0100},
	Doi = {10.1016/j.comnet.2010.07.016},
	Issn = {1389-1286},
	Journal = {Computer Networks},
	Keywords = {Ubiquitous computing management; Meta-design; Cooperation; Semantic Web; End user development; Smart object; Wireless sensor network},
	Number = {16},
	Pages = {2840--2855},
	Publisher = {Elsevier BV},
	Title = {Enabling user-oriented management for ubiquitous computing: The meta-design approach},
	Url = {http://dx.doi.org/10.1016/j.comnet.2010.07.016},
	Volume = {54},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.comnet.2010.07.016}}

@article{Dalpiaz:2013,
	Abstract = {A socio-technical system (STS) consists of an interplay of humans, organizations, and technical systems. STSs are heterogeneous, dynamic, unpredictable, and weakly controllable. Their operational environment changes unexpectedly, actors join and leave the system at will, actors fail to meet their objectives and under-perform, and dependencies on other actors are violated. To deal with such situations, we propose an architecture for STSs that makes an STS self-reconfigurable, i.e., capable of switching autonomously from one configuration to a better one. Our architecture performs a Monitor-Diagnose-Reconcile-Compensate cycle: it monitors actor behaviors and context changes, diagnoses failures and under-performance by checking whether monitored behavior is compliant with actors goals, finds a possible way to address the problem, and enacts compensation actions to reconcile actual and desired behavior. Compensation actions take into account the autonomy of participants in an STS, which cannot be controlled. Our architecture is requirements driven: we use extended Tropos goal models to diagnose failures as well as to identify alternative strategies to meet requirements. After presenting our conceptual architecture and the algorithms, it is founded upon; we describe a prototype implementation applied to a case study concerning smart-homes. We also provide experimental results that suggest that our architecture scales well as the size of the STS grows.},
	Author = {Dalpiaz, Fabiano and Giorgini, Paolo and Mylopoulos, John},
	Date-Added = {2019-05-22 11:37:23 +0100},
	Date-Modified = {2020-10-13 11:05:13 +0100},
	Doi = {10.1007/s00766-011-0132-1},
	Issn = {1432-010X},
	Journal = {Requirements Engineering},
	Keywords = {Self-adaptive software; Socio-technical systems; Goal models; Requirements engineering},
	Number = {1},
	Pages = {1--24},
	Publisher = {Springer Nature},
	Title = {Adaptive socio-technical systems: a requirements-based approach},
	Url = {http://dx.doi.org/10.1007/s00766-011-0132-1},
	Volume = {18},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s00766-011-0132-1}}

@article{Inverardi:2013,
	Abstract = {Ubiquitous and pervasive computing promotes the creation of an environment where Networked Systems (NSs) eternally provide connectivity and services without requiring explicit awareness of the underlying communications and computing technologies. In this context, achieving interoperability among heterogeneous NSs represents an important issue. In order to mediate the NSs interaction protocol and solve possible mismatches, connectors are often built. However, connector development is a never-ending and error-prone task and prevents the eternality of NSs. For this reason, in the literature, many approaches propose the automatic synthesis of connectors. However, solving the connector synthesis problem in general is hard and, when possible, it results in a monolithic connector hence preventing its evolution. In this paper, we define a method for the automatic synthesis of modular connectors, each of them expressed as the composition of independent mediators. A modular connector, as synthesized by our method, supports connector evolution and performs correct mediation.},
	Author = {Inverardi, Paola and Tivoli, Massimo},
	Date-Added = {2019-05-22 11:36:32 +0100},
	Date-Modified = {2020-10-24 19:51:40 +0100},
	Doi = {10.1109/icse.2013.6606546},
	Isbn = {9781467330732},
	Journal = {2013 35th International Conference on Software Engineering (ICSE)},
	Pages = {3-12},
	Publisher = {IEEE},
	Title = {Automatic synthesis of modular connectors via composition of protocol mediation patterns},
	Url = {http://dx.doi.org/10.1109/ICSE.2013.6606546},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICSE.2013.6606546},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/icse.2013.6606546}}

@article{Thomas:2014,
	Abstract = {As mobile computing applications have become commonplace, it is increasingly important for them to address end-users' privacy requirements. Privacy requirements depend on a number of contextual socio-cultural factors to which mobility adds another level of contextual variation. However, traditional requirements elicitation methods do not sufficiently account for contextual factors and therefore cannot be used effectively to represent and analyse the privacy requirements of mobile end users. On the other hand, methods that do investigate contextual factors tend to produce data that does not lend itself to the process of requirements extraction. To address this problem we have developed a Privacy Requirements Distillation approach that employs a problem analysis framework to extract and refine privacy requirements for mobile applications from raw data gathered through empirical studies involving end users. Our approach introduces privacy facets that capture patterns of privacy concerns which are matched against the raw data. We demonstrate and evaluate our approach using qualitative data from an empirical study of a mobile social networking application.},
	Author = {Thomas, Keerthi and Bandara, Arosha K. and Price, Blaine A. and Nuseibeh, Bashar},
	Date-Added = {2019-05-22 11:35:43 +0100},
	Date-Modified = {2020-10-24 19:53:16 +0100},
	Doi = {10.1145/2568225.2568240},
	Isbn = {9781450327565},
	Journal = {Proceedings of the 36th International Conference on Software Engineering - ICSE 2014},
	Keywords = {mobile; requirements engineering; privacy},
	Pages = {12},
	Publisher = {ACM Press},
	Title = {Distilling privacy requirements for mobile applications},
	Url = {http://dx.doi.org/10.1145/2568225.2568240},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2568225.2568240}}

@article{Spinola:2012,
	Abstract = {Context
Ubiquitous Computing (or UbiComp) represents a paradigm in which information processing is thoroughly integrated into everyday objects and activities. From a Software Engineering point of view this development scenario brings new challenges in tailoring or building software processes, impacting current software technologies. However, it has not yet been explicitly shown how to characterize a software project with the perception of ubiquitous computing.

Objective
This paper presents a conceptual framework to support the characterization of ubiquitous software projects according to their ubiquity adherence level. It also intends to apply such characterization approach to some projects, aiming at observing their adherence with ubiquitous computing principles.

Method
To follow a research strategy based on systematic reviews and surveys to acquire UbiComp knowledge and organize a conceptual framework regarding ubiquitous computing, which can be used to characterize UbiComp software projects. Besides, to demonstrate its application by characterizing some software projects.

Results
Ubiquitous computing encapsulates at least 11 different high abstraction level characteristics represented by 123 functional and 45 restrictive factors. Based on this a checklist was organized to allow the characterization of ubiquitous software projects, which has been applied on 26 ubiquitous software projects from four different application domains (ambient intelligence, pervasive healthcare, U-learning, and urban space). No project demonstrated to support more than 65% of the characteristics set. Service omnipresence was observed in all of these projects. However, some characteristics, although identified as necessary in the checklist, were not identified in any of them.

Conclusion
There are characteristics that identify a software project as ubiquitous. However, a ubiquitous software project does not necessarily have to implement all of them. The application domain can influence the appearing of UbiComp characteristics in software projects, promoting an increase of their adherence to UbiComp and, thus, for additional software technologies to deal with these ubiquitous requirements.},
	Author = {Sp{\'\i}nola, Rodrigo Oliveira and Travassos, Guilherme Horta},
	Date-Added = {2019-05-22 11:35:09 +0100},
	Date-Modified = {2020-10-14 19:53:28 +0100},
	Doi = {10.1016/j.infsof.2012.01.009},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Ubiquitous computing; Software projects characterization; Systematic review; Experimental software engineering},
	Number = {7},
	Pages = {759--785},
	Publisher = {Elsevier BV},
	Title = {Towards a framework to characterize ubiquitous software projects},
	Url = {http://dx.doi.org/10.1016/j.infsof.2012.01.009},
	Volume = {54},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.infsof.2012.01.009}}

@article{Sethi:2014,
	Abstract = {Eventually, all printed signs and bulletins will be replaced by electronic displays, which are wirelessly connected to the Internet and cloud-based services. Deploying such ubiquitous displays can be cumbersome since they need to be correctly configured and authorized to access both the Internet and the necessary services, despite the fact that they have minimal input capabilities and may be in inaccessible locations. Our goal is to enable easy and secure configuration of ubiquitous displays such as digital signage and advertisements, which are managed by cloud services and show HTML5 content. In our solution, the display shows a QR code which, when scanned by the user with a camera phone, allows automatic configuration of the wireless network along with the content to be shown. This is accomplished by a long-term trust relation configured between the cloud service and the wireless access network. We build on existing technologies and standard protocols, including RADIUS and EAP, without requiring new software to be installed on the phone or changes to the network infrastructure.},
	Author = {Sethi, Mohit and Oat, Elena and Di Francesco, Mario and Aura, Tuomas},
	Date-Added = {2019-05-22 11:34:29 +0100},
	Date-Modified = {2020-10-24 19:57:47 +0100},
	Doi = {10.1145/2632048.2632049},
	Isbn = {9781450329682},
	Journal = {Proceedings of the 2014 ACM International Joint Conference on Pervasive and Ubiquitous Computing - UbiComp '14 Adjunct},
	Keywords = {cloud; configuration; EAP; WiFi; digital signage; bootstrapping; security; displays; smart phone; access-point; QR code},
	Pages = {12},
	Publisher = {ACM Press},
	Title = {Secure bootstrapping of cloud-managed ubiquitous displays},
	Url = {http://dx.doi.org/10.1145/2632048.2632049},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2632048.2632049}}

@article{Zisman:2013,
	Abstract = {The identification of services during the execution of service-based applications to replace services in them that are no longer available and/or fail to satisfy certain requirements is an important issue. In this paper, we present a framework to support runtime service discovery. This framework can execute service discovery queries in pull and push mode. In pull mode, it executes queries when a need for finding a replacement service arises. In push mode, queries are subscribed to the framework to be executed proactively and, in parallel with the operation of the application, to identify adequate services that could be used if the need for replacing a service arises. Hence, the proactive (push) mode of query execution makes it more likely to avoid interruptions in the operation of service-based applications when a service in them needs to be replaced at runtime. In both modes of query execution, the identification of services relies on distance-based matching of structural, behavioral, quality, and contextual characteristics of services and applications. A prototype implementation of the framework has been developed and an evaluation was carried out to assess the performance of the framework. This evaluation has shown positive results, which are discussed in the paper.},
	Author = {Zisman, Andrea and Spanoudakis, George and Dooley, James and Siveroni, Igor},
	Date-Added = {2019-05-22 11:33:55 +0100},
	Date-Modified = {2020-10-14 20:41:52 +0100},
	Doi = {10.1109/tse.2012.84},
	Issn = {1939-3520},
	Journal = {IEEE Transactions on Software Engineering},
	Keywords = {Web-services discovery; composite web services; context-aware QoS model; application development in services},
	Number = {7},
	Pages = {954--974},
	Publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
	Title = {Proactive and Reactive Runtime Service Discovery: A Framework and Its Evaluation},
	Url = {http://dx.doi.org/10.1109/TSE.2012.84},
	Volume = {39},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/TSE.2012.84},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/tse.2012.84}}

@article{Liogkas:2004,
	Abstract = {A major challenge facing ubiquitous computing R&D is the difficulty of writing software for complex, distributed applications. Automatic application partitioning can help development teams rapidly prototype distributed ubiquitous computing systems.},
	Author = {Liogkas, N. and MacIntyre, B. and Mynatt, E.D. and Smaragdakis, Y. and Tilevich, E. and Voida, S.},
	Date-Added = {2019-05-22 11:32:24 +0100},
	Date-Modified = {2020-10-13 11:16:03 +0100},
	Doi = {10.1109/mprv.2004.1321027},
	Issn = {1536-1268},
	Journal = {IEEE Pervasive Computing},
	Number = {03},
	Pages = {40--47},
	Publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
	Title = {Automatic Partitioning: Prototyping Ubiquitous-Computing Applications},
	Url = {http://dx.doi.org/10.1109/MPRV.2004.1321027},
	Volume = {03},
	Year = {2004},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/MPRV.2004.1321027},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/mprv.2004.1321027}}

@article{Cetina:2009,
	Abstract = {Our research shows that autonomic behavior can be achieved by leveraging variability models at runtime. In this way, the modeling effort made at design time is not only useful for producing the system but also provides a richer semantic base for autonomic behavior during execution. The use of variability models at runtime brings new opportunities for autonomic capabilities by reutilizing the efforts invested at design time. Our proposed approach has two aspects: reuse of design knowledge to achieve AC and reuse of existing model-management technologies at runtime. We developed the Model-Based Reconfiguration Engine (MoRE) to implement model-management operations. Our research demonstrates the approach's feasibility for smart homes, especially for self-healing and -configuring capabilities.},
	Author = {Cetina, Carlos and Giner, Pau and Fons, Joan and Pelechano, Vicente},
	Date-Added = {2019-05-22 11:31:27 +0100},
	Date-Modified = {2020-10-13 11:23:32 +0100},
	Doi = {10.1109/mc.2009.309},
	Issn = {0018-9162},
	Journal = {Computer},
	Keywords = {Software engineering; Variability modeling; Smart homes; Runtime modeling; Reusable software; Autonomic computing},
	Number = {10},
	Pages = {37--43},
	Publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
	Title = {Autonomic Computing through Reuse of Variability Models at Runtime: The Case of Smart Homes},
	Url = {http://dx.doi.org/10.1109/MC.2009.309},
	Volume = {42},
	Year = {2009},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/MC.2009.309},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/mc.2009.309}}

@article{Gamez:2011,
	Abstract = {Most of the middlewares currently available focus on one type of device (e.g., TinyOS sensors) and/or are designed with one requirement in mind (e.g., data management). This is an important limitation since most of the AmI applications work with several devices (such as sensors, smartphones or PDAs) and use a high diversity of low-level services. Ideally, the middleware should provide a single interface for accessing all those services able to work in heterogeneous devices. To address this issue, we propose a family of configurable middleware (FamiWare) with a really flexible architecture, instead of building a single version of a middleware with a rigid structure. In this work, we present the architecture of our middleware that can be configured, following a Software Product Line approach, in order to be instantiated in a particular device fulfilling specific application requirements. Furthermore, we evaluate that the decisions taken at architecture and implementation are the adequate ones for this kind of constrained devices.},
	Author = {G{\'a}mez, Nadia and Fuentes, Lidia},
	Date-Added = {2019-05-22 11:30:48 +0100},
	Date-Modified = {2020-10-14 21:05:42 +0100},
	Doi = {10.1007/s00779-010-0354-0},
	Issn = {1617-4917},
	Journal = {Personal and Ubiquitous Computing},
	Keywords = {Middleware; AmI; SPLs; Events; Publish/Subscribe},
	Number = {4},
	Pages = {329--339},
	Publisher = {Springer Nature},
	Title = {FamiWare: a family of event-based middleware for ambient intelligence},
	Url = {http://dx.doi.org/10.1007/s00779-010-0354-0},
	Volume = {15},
	Year = {2011},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s00779-010-0354-0}}

@article{Hoffmann:2014,
	Abstract = {Trust has been shown to be a key factor for technology adoption by users, that is, users prefer to use applications they trust. While existing literature on trust originating in computer science mostly revolves around aspects of information security, authentication, etc., research on trust in automation---originating from behavioral sciences---almost exclusively focuses on the sociotechnical context in which applications are embedded. The behavioral theory of trust in automation aims at explaining the formation of trust, helping to identify countermeasures for users' uncertainties that lead to lessened trust in an application. We hence propose an approach to augment the system development process of ubiquitous systems with insights into behavioral trust theory. Our approach enables developers to derive design elements that help foster trust in their application by performing four key activities: identifying users' uncertainties, linking them to trust antecedents from theory, deducting functional requirements and finally designing trust-supporting design elements (TSDEs). Evaluating user feedback on two recommender system prototypes, gathered in a study with over 160 participants, we show that by following our process, we were able to derive four TSDEs that helped to significantly increase the users' trust in the system.},
	Author = {Hoffmann, Holger and S{\"o}llner, Matthias},
	Date-Added = {2019-05-22 11:29:28 +0100},
	Date-Modified = {2020-10-14 20:59:31 +0100},
	Doi = {10.1007/s00779-012-0631-1},
	Issn = {1617-4917},
	Journal = {Personal and Ubiquitous Computing},
	Keywords = {Trust support; Uncertainty; Antecedent; Design elements; Sociotechnical system; Evaluation},
	Number = {1},
	Pages = {117--128},
	Publisher = {Springer Nature},
	Title = {Incorporating behavioral trust theory into system development for ubiquitous applications},
	Url = {http://dx.doi.org/10.1007/s00779-012-0631-1},
	Volume = {18},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s00779-012-0631-1}}

@article{Capra:2003,
	Abstract = {Mobile devices, such as mobile phones and personal digital assistants, have gained wide-spread popularity. These devices will increasingly be networked, thus enabling the construction of distributed applications that have to adapt to changes in context, such as variations in network bandwidth, battery power, connectivity, reachability of services and hosts, etc. In this paper, we describe CARISMA, a mobile computing middleware which exploits the principle of reflection to enhance the construction of adaptive and context-aware mobile applications. The middleware provides software engineers with primitives to describe how context changes should be handled using policies. These policies may conflict. We classify the different types of conflicts that may arise in mobile computing and argue that conflicts cannot be resolved statically at the time applications are designed, but, rather, need to be resolved at execution time. We demonstrate a method by which policy conflicts can be handled; this method uses a microeconomic approach that relies on a particular type of sealed-bid auction. We describe how this method is implemented in the CARISMA middleware architecture and sketch a distributed context-aware application for mobile devices to illustrate how the method works in practice. We show, by way of a systematic performance evaluation, that conflict resolution does not imply undue overheads, before comparing our research to related work and concluding the paper.},
	Author = {Capra, L. and Emmerich, W. and Mascolo, C.},
	Date-Added = {2019-05-22 11:28:43 +0100},
	Date-Modified = {2020-10-14 21:34:53 +0100},
	Doi = {10.1109/tse.2003.1237173},
	Issn = {0098-5589},
	Journal = {IEEE Transactions on Software Engineering},
	Keywords = {Middleware; mobile computing; reflection; context-awareness; conflict resolution; game theory; quality of service},
	Number = {10},
	Pages = {929--944},
	Publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
	Title = {CARISMA: Context-Aware Reflective mIddleware System for Mobile Applications},
	Url = {http://dx.doi.org/10.1109/TSE.2003.1237173},
	Volume = {29},
	Year = {2003},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/TSE.2003.1237173},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/tse.2003.1237173}}

@article{Siu_Nam_Chuang:2008,
	Abstract = {Computation and networking resources in mobile operating environments are much scarcer and more dynamic than in desktop operating environments. Mobile applications can leverage on the benefits of adaptive computing to optimize the QoS delivery based on contextual situations. Fuzzy control models have been successfully applied to various distributed network QoS management systems. However, existing models are either application-specific or limited to abstract modeling and simple conceptual scenarios which do not take into account overall model scalability. Specifically, the large number of QoS parameters in a mobile operating environment causes an exponential increase in the number of rules correspondingly increases the demand for processing power to infer the rules. Hierarchical fuzzy systems were introduced to reduce the number of rules using hierarchical fuzzy control, in which correlated linguistic variables are hierarchically inferred and grouped into abstract linguistic variables. In this paper, we propose a mobile QoS management framework that uses a hierarchical fuzzy control model to support a highly extensible and structured adaptation paradigm. The proposed framework integrates several levels of QoS abstractions derived from user-perceived requirements.},
	Author = {Siu-Nam Chuang and Chan, A.T.S.},
	Date-Added = {2019-05-22 11:27:48 +0100},
	Date-Modified = {2020-10-14 21:13:17 +0100},
	Doi = {10.1109/tse.2008.44},
	Issn = {0098-5589},
	Journal = {IEEE Transactions on Software Engineering},
	Keywords = {Mobile Computing; Domain-specific architectures},
	Number = {6},
	Pages = {738--752},
	Publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
	Title = {Dynamic QoS Adaptation for Mobile Middleware},
	Url = {http://dx.doi.org/10.1109/TSE.2008.44},
	Volume = {34},
	Year = {2008},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/TSE.2008.44},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/tse.2008.44}}

@article{Gui:2013,
	Abstract = {As software systems today increasingly operate in changing and complex environments, they are expected to dynamically adapt to the changing environments sometimes with multiple coexisting adaptation goals. In this paper, an adaptation framework to facilitate adaptation with multiple concerns by using reusable and composable adaptation modules is proposed. Rather than using one‐size‐fits‐all approach, in this framework, system global adaptation behavior is generated by contextually fusing adaptation plans from multiple adaptation modules. In order to handle possible conflicts from multiple adaptation plans, supports for conflict detection and resolution are provided. Following the framework design principles, a supporting middleware is implemented based on the service‐oriented component model. Adaptation behaviors are realized as individually deployable adaptation components. A strategy called normalized context matching degree is proposed to rate and select applicable adaptation components. Possible conflicts in dealing with multiple adaptation concerns are resolved by using the semantics of actuators and context conditions. This middleware is also designed to be readily reconfigurable to support new features. Case studies and experiment results show that our framework exhibits significant advantage over traditional approaches in light of flexibility and reusability of the adaptation modules, with little complexity and performance overhead.},
	Author = {Gui, Ning and De Florio, Vincenzo and Holvoet, Tom},
	Date-Added = {2019-05-22 11:25:21 +0100},
	Date-Modified = {2020-10-14 19:51:44 +0100},
	Doi = {10.1002/spe.2137},
	Issn = {0038-0644},
	Journal = {Software: Practice and Experience},
	Keywords = {dynamic behavior composition; architecture‐based adaptation; context‐awareness; service‐oriented middleware},
	Number = {8},
	Pages = {937--967},
	Publisher = {Wiley},
	Title = {Transformer: an adaptation framework supporting contextual adaptation behavior composition},
	Url = {http://dx.doi.org/10.1002/spe.2137},
	Volume = {43},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1002/spe.2137}}

@article{Morla:2004,
	Abstract = {Complex and expensive testing and evaluation can inhibit cost-effective development of ubiquitous computing applications. A new environment for testing and evaluating system- and network-related issues in location-based applications strives to evaluate these applications prior to deployment. We discuss a health-monitoring application and its simulation environment.},
	Author = {Morla, R. and Davies, N.},
	Date-Added = {2019-05-22 11:24:37 +0100},
	Date-Modified = {2020-10-14 21:07:04 +0100},
	Doi = {10.1109/mprv.2004.1321028},
	Issn = {1536-1268},
	Journal = {IEEE Pervasive Computing},
	Number = {03},
	Pages = {48--56},
	Publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
	Title = {Evaluating a Location-Based Application: A Hybrid Test and Simulation Environment},
	Url = {http://dx.doi.org/10.1109/MPRV.2004.1321028},
	Volume = {03},
	Year = {2004},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/MPRV.2004.1321028},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/mprv.2004.1321028}}

@article{Robinson:2008,
	Abstract = {The pervasive computing environment will be composed of heterogeneous services. In this work, we have explored how a domain specific language for service composition can be implemented to capture the common design patterns for service composition, yet still retain a comparable performance to other systems written in mainstream languages such as Java. In particular, we have proposed the use of the method delegation design pattern, the resolution of service bindings through the use of dynamically adjustable characteristics and the late binding of services as key features in simplifying the service composition task. These are realised through the Scooby language, and the approach is compared to the use of APIs to define adaptable services.},
	Author = {Robinson, Jon and Wakeman, Ian and Chalmers, Dan},
	Date-Added = {2019-05-22 11:23:54 +0100},
	Date-Modified = {2020-10-14 21:33:00 +0100},
	Doi = {10.1016/j.pmcj.2008.01.001},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {Pervasive computing; Programming languages; Performance evaluation},
	Number = {4},
	Pages = {481--505},
	Publisher = {Elsevier BV},
	Title = {Composing software services in the pervasive computing environment: Languages or APIs?},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2008.01.001},
	Volume = {4},
	Year = {2008},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2008.01.001}}

@article{Harrington:2011,
	Abstract = {This paper presents a model-driven approach to developing pervasive computing applications that exploits design-time information to support the engineering of planning and optimisation algorithms that reflect the presence of uncertainty, dynamism and complexity in the application domain. In particular, the task of generating code to implement planning and optimisation algorithms in pervasive computing domains is addressed.

We present a layered domain model that provides a set of object-oriented specifications for modelling physical and sensor/actuator infrastructure and state-space information. Our model-driven engineering approach is implemented in two transformation algorithms. The initial transformation parses the domain model and generates a planning model for the application being developed that encodes an application's states, actions and rewards. The second transformation parses the planning model and selects and seeds a planning or optimisation algorithm for use in the application.

We present an empirical evaluation of the impact of our approach on the development effort associated with two pervasive computing applications from the Intelligent Transportation Systems (ITS) domain, and provide a quantitative evaluation of the performance of the algorithms generated by the transformations.},
	Author = {Harrington, Anthony and Cahill, Vinny},
	Date-Added = {2019-05-22 11:23:19 +0100},
	Date-Modified = {2020-10-14 20:51:04 +0100},
	Doi = {10.1016/j.pmcj.2011.09.005},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {Model-driven engineering; Planning; Optimisation; Sensor Fusion; State Inference},
	Number = {6},
	Pages = {705--726},
	Publisher = {Elsevier BV},
	Title = {Model-driven engineering of planning and optimisation algorithms for pervasive computing environments},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2011.09.005},
	Volume = {7},
	Year = {2011},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2011.09.005}}

@article{Fuller:2012,
	Abstract = {Current mobile or pervasive systems possess ever increasing computing powers. A tight integration of those systems into business processes is therefore desirable. However, this requires consideration of the changing context of those systems especially when determining adequate processes for a system.

This paper introduces a novel context driven approach to select processes suitable for a system's context and to integrate the system into the chosen processes. An infrastructure to implement the context driven approach is proposed and a prototype is given. A flexible implementation is accomplished using a hybrid context model, rule engines and OSGi.},
	Author = {F{\"u}ller, Matthias and N{\"u}{\ss}er, Willi and Rustemeyer, Thomas},
	Date-Added = {2019-05-22 11:22:37 +0100},
	Date-Modified = {2020-10-14 21:32:07 +0100},
	Doi = {10.1016/j.pmcj.2011.03.002},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {Mobile systems; Context; Business processes; BPEL; Rule based systems; OSGi; Ontology},
	Number = {3},
	Pages = {467--482},
	Publisher = {Elsevier BV},
	Title = {Context driven process selection and integration of mobile and pervasive systems},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2011.03.002},
	Volume = {8},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2011.03.002}}

@article{Ali:2010,
	Abstract = {Requirements engineering (RE) research often ignores or presumes a uniform nature of the context in which the system operates. This assumption is no longer valid in emerging computing paradigms, such as ambient, pervasive and ubiquitous computing, where it is essential to monitor and adapt to an inherently varying context. Besides influencing the software, context may influence stakeholders' goals and their choices to meet them. In this paper, we propose a goal-oriented RE modeling and reasoning framework for systems operating in varying contexts. We introduce contextual goal models to relate goals and contexts; context analysis to refine contexts and identify ways to verify them; reasoning techniques to derive requirements reflecting the context and users priorities at runtime; and finally, design time reasoning techniques to derive requirements for a system to be developed at minimum cost and valid in all considered contexts. We illustrate and evaluate our approach through a case study about a museum-guide mobile information system.},
	Author = {Ali, Raian and Dalpiaz, Fabiano and Giorgini, Paolo},
	Date-Added = {2019-05-22 11:21:56 +0100},
	Date-Modified = {2020-10-13 10:55:52 +0100},
	Doi = {10.1007/s00766-010-0110-z},
	Issn = {1432-010X},
	Journal = {Requirements Engineering},
	Keywords = {Contextual requirements; Context analysis; Goal modeling; Requirements analysis},
	Number = {4},
	Pages = {439--458},
	Publisher = {Springer Nature},
	Title = {A goal-based framework for contextual requirements modeling and analysis},
	Url = {http://dx.doi.org/10.1007/s00766-010-0110-z},
	Volume = {15},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s00766-010-0110-z}}

@article{Ali:2013,
	Abstract = {Context
The environment in which the system operates, its context, is variable. The autonomous ability of a software to adapt to context has to be planned since the requirements analysis stage as a strong mutual influence between requirements and context does exist. On the one hand, context is a main factor to decide whether to activate a requirement, the applicable alternatives to meet an activated requirement as well as their qualities. On the other hand, the system actions to reach requirements could cause changes in the context.

Objectives
Modelling the relationship between requirements and context is a complex task and developing error-free models is hard to achieve without an automated support. The main objective of this paper is to develop a set of automated analysis mechanisms to support the requirements engineers to detect and analyze modelling errors in contextual requirements models.

Method
We study the analysis of the contextual goal model which is a requirements model that weaves together the variability of both context and requirements. Goal models are used during the early stages of software development and, thus, our analysis detects errors early in the development process. We develop two analysis mechanisms to detect two kinds of modelling errors. The first mechanism concerns the detection of inconsistent specification of contexts in a goal model. The second concerns the detection of conflicting context changes that arise as a consequence of the actions performed by the system to meet different requirements simultaneously. We support our analysis with a CASE tool and provide a systematic process that guides the construction and analysis of contextual goal models. We illustrate and evaluate our framework via a case study on a smart-home system for supporting the life of people having dementia problems.

Results
The evaluation showed a significant ability of our analysis mechanisms to detect errors which were not notable by requirements engineers. Moreover, the evaluation showed acceptable performance of these mechanisms when processing up to medium-sized contextual goal models. The modelling constructs which we proposed as an input to enable the analysis were found easy to understand and capture.

Conclusions
Our developed analysis for the detection of inconsistency and conflicts in contextual goal models is an essential step for the entire system correctness. It avoids us developing unusable and unwanted functionalities and functionalities which lead to conflicts when they operate together. Further research to improve our analysis to scale with large-sized models and to consider other kinds of errors is still needed.},
	Author = {Ali, Raian and Dalpiaz, Fabiano and Giorgini, Paolo},
	Date-Added = {2019-05-22 11:21:23 +0100},
	Date-Modified = {2020-10-14 20:34:07 +0100},
	Doi = {10.1016/j.infsof.2012.06.013},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Requirements engineering; Contextual requirements; Goal modelling; Consistency and conflicts analysis; Adaptive systems engineering},
	Number = {1},
	Pages = {35--57},
	Publisher = {Elsevier BV},
	Title = {Reasoning with contextual requirements: Detecting inconsistency and conflicts},
	Url = {http://dx.doi.org/10.1016/j.infsof.2012.06.013},
	Volume = {55},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.infsof.2012.06.013}}

@article{Xu:2012a,
	Abstract = {Applications in ubiquitous computing adapt their behavior based on contexts. The adaptation can be faulty if the contexts are subject to inconsistency. Various techniques have been proposed to identify key contexts from inconsistencies. By removing these contexts, an application is expected to run with inconsistencies resolved. However, existing practice largely overlooks an application's internal requirements on using these contexts for adaptation. It may lead to unexpected side effect from inconsistency resolution. This paper studies a novel way of resolving context inconsistency with the aim of minimizing such side effect for an application. We model and analyze the side effect for rule-based ubiquitous applications, and experimentally measure and compare it for various inconsistency resolution strategies. We confirm the significance of such side effect if not controlled, and present an efficient framework to minimize it during context inconsistency resolution.},
	Author = {Xu, Chang and Ma, Xiaoxing and Cao, Chun and Lu, Jian},
	Date-Added = {2019-05-22 11:20:38 +0100},
	Date-Modified = {2020-10-14 20:53:32 +0100},
	Doi = {10.1007/978-3-642-30973-1_29},
	Isbn = {9783642309731},
	Issn = {1867-822X},
	Journal = {Mobile and Ubiquitous Systems: Computing, Networking, and Services},
	Keywords = {Context inconsistency resolution; side effect; ubiquitous computing},
	Pages = {285--297},
	Publisher = {Springer Berlin Heidelberg},
	Title = {Minimizing the Side Effect of Context Inconsistency Resolution for Ubiquitous Computing},
	Url = {http://dx.doi.org/10.1007/978-3-642-30973-1_29},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/978-3-642-30973-1_29}}

@article{Chan:2003,
	Abstract = {Traditionally, middleware technologies, such as CORBA, Java RMI, and Microsoft's DCOM, have provided a set of distributed computing services that essentially abstract the underlying network services to a monolithic "black box." In a mobile operating environment, the fundamental assumption of middleware abstracting a unified distributed service for all types of applications operating over a static network infrastructure is no longer valid. In particular, mobile applications are not able to leverage the benefits of adaptive computing to optimize its computation based on current contextual situations. In this paper, we introduce the Mobile Platform for Actively Deployable Service (MobiPADS) system. MobiPADS is designed to support context-aware processing by providing an executing platform to enable active service deployment and reconfiguration of the service composition in response to environments of varying contexts. Unlike most mobile middleware, MobiPADS supports dynamic adaptation at both the middleware and application layers to provide flexible configuration of resources to optimize the operations of mobile applications. Within the MobiPADS system, services (known as mobilets) are configured as chained service objects to provide augmented services to the underlying mobile applications so as to alleviate the adverse conditions of a wireless environment.},
	Author = {Chan, A.T.S. and Siu-Nam Chuang},
	Date-Added = {2019-05-22 11:19:58 +0100},
	Date-Modified = {2020-10-14 21:43:38 +0100},
	Doi = {10.1109/tse.2003.1265522},
	Issn = {0098-5589},
	Journal = {IEEE Transactions on Software Engineering},
	Keywords = {Middleware; mobile applications; mobile computing support services; mobile environments},
	Number = {12},
	Pages = {1072--1085},
	Publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
	Title = {MobiPADS: a reflective middleware for context-aware mobile computing},
	Url = {http://dx.doi.org/10.1109/TSE.2003.1265522},
	Volume = {29},
	Year = {2003},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/TSE.2003.1265522},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/tse.2003.1265522}}

@article{Bettini:2008,
	Abstract = {There is a large consensus on the need for a middleware to efficiently support adaptation in pervasive and mobile computing. Advanced forms of adaptation require the aggregation of context data and the evaluation of policy rules that are typically provided by multiple sources. This paper addresses the problem of designing the reasoning core of a middleware that supports these tasks, while guaranteeing very low response times as required by mobile applications. Technically, the paper presents strategies to deal with conflicting rules, algorithms that implement the strategies, and algorithms that detect and solve potential rule cycles. A detailed experimental analysis supports the theoretical results and shows the applicability of the resulting middleware in large-scale applications.},
	Author = {Bettini, Claudio and Pareschi, Linda and Riboni, Daniele},
	Date-Added = {2019-05-22 11:19:00 +0100},
	Date-Modified = {2020-10-14 21:12:40 +0100},
	Doi = {10.1016/j.pmcj.2008.04.002},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {Context-awareness; Adaptation; Rule-based reasoning; Mobile middleware},
	Number = {5},
	Pages = {697--718},
	Publisher = {Elsevier BV},
	Title = {Efficient profile aggregation and policy evaluation in a middleware for adaptive mobile applications},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2008.04.002},
	Volume = {4},
	Year = {2008},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2008.04.002}}

@article{Roussaki:2010,
	Abstract = {Context management systems are expected to administrate large volumes of spatial and non-spatial information in geographical disperse domains. In particular, when these systems cover wide areas such as cities, countries or even the entire planet, the design of scalable storage, retrieval and propagation mechanisms is paramount. This paper elaborates on mechanisms that address advanced requirements, including support for distributed context databases management; efficient query handling; innovative management of mobile physical objects and optimization strategies for distributed context data dissemination. These mechanisms establish a robust spatially-enhanced distributed context management framework that has already been designed and carefully implemented and thoroughly evaluated.},
	Author = {Roussaki, Ioanna and Strimpakou, Maria and Pils, Carsten and Kalatzis, Nikos and Liampotis, Nicolas},
	Date-Added = {2019-05-22 11:18:26 +0100},
	Date-Modified = {2020-10-14 20:48:03 +0100},
	Doi = {10.1016/j.pmcj.2009.07.015},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {Context Distributed Database Management System; Context management and query languages; Mobile physical object handling; Context replication; Selective context data dissemination},
	Number = {2},
	Pages = {218--238},
	Publisher = {Elsevier BV},
	Title = {Optimising context data dissemination and storage in distributed pervasive computing systems},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2009.07.015},
	Volume = {6},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2009.07.015}}

@article{Seinturier:2012,
	Abstract = {The Service Component Architecture (SCA) is a technology-independent standard for developing distributed Service-oriented Architectures (SOA). The SCA standard promotes the use of components and architecture descriptors, and mostly covers the lifecycle steps of implementation and deployment. Unfortunately, SCA does not address the governance of SCA applications and provides no support for the maintenance of deployed components. This article covers this issue and introduces the FRASCATI platform, a run-time support for SCA with dynamic reconfiguration capabilities and run-time management features. This article presents the internal component-based architecture of the FRASCATI platform, and highlights its key features. The component-based design of the FRASCATI platform introduces many degrees of flexibility and configurability in the platform itself and it can host the SOA applications. This article reports on micro-benchmarks highlighting that run-time manageability in the FRASCATI platform does not decrease its performance when compared with the de facto reference SCA implementation: Apache TUSCANY. Finally, a smart home scenario illustrates the extension capabilities and the various reconfigurations of the FRASCATI platform.},
	Author = {Seinturier, Lionel and Merle, Philippe and Rouvoy, Romain and Romero, Daniel and Schiavoni, Valerio and Stefani, Jean-Bernard},
	Date-Added = {2019-05-22 11:17:12 +0100},
	Date-Modified = {2020-10-13 10:46:06 +0100},
	Doi = {10.1002/spe.1077},
	Issn = {0038-0644},
	Journal = {Software: Practice and Experience},
	Keywords = {middleware; SOA; reconfiguration; component; SCA},
	Number = {5},
	Pages = {559--583},
	Publisher = {Wiley},
	Title = {A component-based middleware platform for reconfigurable service-oriented architectures},
	Url = {http://dx.doi.org/10.1002/spe.1077},
	Volume = {42},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1002/spe.1077}}

@article{Schuhmann:2013,
	Abstract = {Complex pervasive applications need to be distributed for two main reasons: due to the typical resource restrictions of mobile devices, and to use local services to interact with the immediate environment. To set up such an application, the distributed components require spontaneous composition. Since dynamics in the environment and device failures may imply the unavailability of components and devices at any time, finding, maintaining, and adapting such a composition is a nontrivial task. Moreover, the speed of such a configuration process directly influences the user since in the event of a configuration, the user has to wait. In this article, we introduce configuration algorithms for homogeneous and heterogeneous environments. We discuss a comprehensive approach to pervasive application configuration that adapts to the characteristics of the environment: It chooses the most efficient configuration method for the given environment to minimize the configuration latency. Moreover, we propose a new scheme for caching and reusing partial application configurations. This scheme reduces the configuration latency even further such that a configuration can be executed without notable disturbance of the user.},
	Author = {Schuhmann, Stephan and Herrmann, Klaus and Rothermel, Kurt and Boshmaf, Yazan},
	Date-Added = {2019-05-22 11:16:33 +0100},
	Date-Modified = {2020-10-13 11:02:53 +0100},
	Doi = {10.1145/2491465.2491469},
	Issn = {1556-4665},
	Journal = {ACM Transactions on Autonomous and Adaptive Systems},
	Keywords = {partial configurations; pervasive applications; hybrid configuration; Adaptivity; middleware; components; heterogeneity; service composition; automation},
	Number = {2},
	Pages = {1--21},
	Publisher = {Association for Computing Machinery (ACM)},
	Title = {Adaptive Composition of Distributed Pervasive Applications in Heterogeneous Environments},
	Url = {http://dx.doi.org/10.1145/2491465.2491469},
	Volume = {8},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2491465.2491469}}

@article{Salvaneschi:2012,
	Abstract = {Self-adapting systems are becoming widespread in emerging fields such as autonomic, mobile and ubiquitous computing. Context-oriented programming (COP) is a promising language-level solution for the implementation of context-aware, self-adaptive software. However, current COP approaches struggle to effectively manage the asynchronous nature of context provisioning. We argue that, to solve these issues, COP features should be designed to fit nicely in the concurrency model supported by the language. This work presents the design rationale of ContextErlang, which introduces COP in the Actor Model. We provide evidence that ContextErlang constitutes a viable solution to implement context-aware software in a highly concurrent and distributed setting. We discuss a case study and an evaluation of run-time performance.},
	Author = {Salvaneschi, Guido and Ghezzi, Carlo and Pradella, Matteo},
	Date-Added = {2019-05-22 11:15:45 +0100},
	Date-Modified = {2020-10-24 19:52:15 +0100},
	Doi = {10.1145/2162049.2162072},
	Isbn = {9781450310925},
	Journal = {Proceedings of the 11th annual international conference on Aspect-oriented Software Development - AOSD '12},
	Keywords = {context-oriented programming; self-adaptive software; OTP platform; Erlang},
	Pages = {12},
	Publisher = {ACM Press},
	Title = {Contexterlang: introducing context-oriented programming in the actor model},
	Url = {http://dx.doi.org/10.1145/2162049.2162072},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2162049.2162072}}

@article{Malandrino:2010,
	Abstract = {The ubiquitous computing scenario is characterized by heterogeneity of devices used to access services, and by frequent changes in the user's context. Hence, adaptation according to the user's context and the used devices is necessary to allow mobile users to efficiently exploit Internet-based services. In this paper, we present a distributed framework, named MIMOSA, that couples a middleware for context-awareness with an intermediary-based architecture for content adaptation. MIMOSA provides an effective and efficient solution for the adaptation of Internet services on the basis of a comprehensive notion of context, by means of techniques for aggregating context data from distributed sources, deriving complex contextual situations from raw sensor data, evaluating adaptation policies, and solving possible conflicts. The middleware allows programmers to modularly build complex adaptive services starting from simple ones, and includes tools for assisting the user in declaring her preferences, as well as mechanisms for detecting incorrect system behaviors due to a wrong choice of adaptation policies. The effectiveness and efficiency of MIMOSA are shown through the development of a prototype adaptive service, and by extensive experimental evaluations.},
	Author = {Malandrino, Delfina and Mazzoni, Francesca and Riboni, Daniele and Bettini, Claudio and Colajanni, Michele and Scarano, Vittorio},
	Date-Added = {2019-05-22 11:13:58 +0100},
	Date-Modified = {2020-10-14 20:54:09 +0100},
	Doi = {10.1007/s00779-009-0232-9},
	Issn = {1617-4917},
	Journal = {Personal and Ubiquitous Computing},
	Keywords = {Context-awareness; Adaptation; Transcoding},
	Number = {4},
	Pages = {301--320},
	Publisher = {Springer Science and Business Media LLC},
	Title = {MIMOSA: context-aware adaptation for ubiquitous web access},
	Url = {http://dx.doi.org/10.1007/s00779-009-0232-9},
	Volume = {14},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s00779-009-0232-9}}

@article{Hess:2003,
	Abstract = {Ubiquitous computing environments stretch the requirements of traditional infrastructures used to facilitate the development of applications. Activities are often supported by collections of applications, some of which are automatically launched with little or no human intervention. This task-driven environment challenges existing application construction and data management techniques. In this paper, we describe a file system that organises application data based on contextual information, imports user data based on its physical presence, and supports format conversions to accommodate device context. We describe several applications that we have developed within our ubiquitous computing infrastructure and show how they leverage the novel features of our file system to simplify their complexity.},
	Author = {Hess, Christopher K. and Campbell, Roy H.},
	Date-Added = {2019-05-22 11:13:17 +0100},
	Date-Modified = {2020-10-13 11:08:33 +0100},
	Doi = {10.1007/s00779-003-0250-y},
	Issn = {1617-4917},
	Journal = {Personal and Ubiquitous Computing},
	Keywords = {Context; Data management; File systems; Operating systems; Ubiquitous computing spaces},
	Number = {6},
	Pages = {339--352},
	Publisher = {Springer Nature},
	Title = {An application of a context-aware file system},
	Url = {http://dx.doi.org/10.1007/s00779-003-0250-y},
	Volume = {7},
	Year = {2003},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s00779-003-0250-y}}

@article{Nahrstedt:2005,
	Abstract = {Pervasive environments with their ubiquitous multimedia devices such as video-enabled cell-phones, laptops, PC tablets, digital cameras, HDTV plasma displays are becoming integral part of our workplaces and homes. Furthermore, these digital multimedia devices make it easier and easier to create and view volumes of content that can be stored throughout the Internet. The big challenge is to organize the distributed content, get the distributed multimedia content composed, produced and distributed to users in customized fashion according to users' preference, and their resource availabilities in pervasive environments. Basically, the challenge is to create Internet Interactive Television where the user/interest group, residing in a pervasive environment, corresponds to the TV program director who decides and/or influences what content(s) will be viewed, how it will be composed, presented and delivered. In this paper, we present a vision how this challenge can be solved. We propose a novel hourglass-based system that delivers composite multimedia content to users in pervasive environments, which considers both users' interest in the content and the presentation capabilities of various display devices. This hourglass-based system relies on our content and service composition framework that allows for customized production, distribution and presentation of multimedia content for pervasive environments. We present the hourglass design, possible solutions for some content composition scenarios and validate the solutions via selected experiments.},
	Author = {Nahrstedt, Klara and Yu, Bin and Liang, Jin and Cui, Yi},
	Date-Added = {2019-05-22 11:12:44 +0100},
	Date-Modified = {2020-10-14 21:02:42 +0100},
	Doi = {10.1016/j.pmcj.2005.01.006},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Number = {1},
	Pages = {43--75},
	Publisher = {Elsevier BV},
	Title = {Hourglass multimedia content and service composition framework for smart room environments},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2005.01.006},
	Volume = {1},
	Year = {2005},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2005.01.006}}

@article{Holzmann:2010,
	Abstract = {With more and more everyday artifacts being equipped with networked embedded systems technology, their spatial situation or context--such as where they are located or whether two of them are near or far apart from each other--is becoming increasingly relevant. The emerging availability of sensor technologies for measuring properties of the physical space enables them to become aware of their spatial context and adapt to changes accordingly, which in turn contributes to the implementation of systems that operate autonomously in the background and interact with humans in a more unobtrusive way. In this article, we specifically address the use of spatial relations between technology-rich artifacts as well as their changes over time. A key aspect is the abstraction of spatial contexts in order to separate details which are not relevant for a certain application, and thereby save computational resources or provide spatial information in a way that is closer to human concepts of space. In this regard, our focus is on qualitatively represented spatial relations, which are used as the basic building blocks for the development of spatially aware applications. A novel software framework is presented for this purpose and evaluated with respect to its performance as well as its adequacy for building real-world applications.},
	Author = {Holzmann, Clemens and Ferscha, Alois},
	Date-Added = {2019-05-22 11:12:14 +0100},
	Date-Modified = {2020-10-13 10:53:35 +0100},
	Doi = {10.1016/j.pmcj.2010.03.001},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {Context awareness; Spontaneous interaction; Spatial and temporal relations; Qualitative representation; Rule-based reasoning},
	Number = {3},
	Pages = {362--381},
	Publisher = {Elsevier BV},
	Title = {A framework for utilizing qualitative spatial relations between networked embedded systems},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2010.03.001},
	Volume = {6},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2010.03.001}}

@article{Rashid:2012,
	Abstract = {The fields of ambient intelligence, distributed robotics and wireless sensor networks are converging toward a common vision, in which ubiquitous sensing and acting devices cooperate to provide useful services in the home. These devices can range from sophisticated mobile robots to simple sensor nodes and even simpler tagged everyday objects. In this vision, a milkbox left on the table after the user has left the home could ask the service of a mobile robot to be placed back in the refrigerator. A missing ingredient to realize this vision is a mechanism that enables the communication and interoperation among such highly heterogeneous entities. In this paper, we propose such a mechanism in the form of a middleware able to integrate robots, tiny devices and augmented everyday objects into one and the same system. The key moves to cope with heterogeneity are: the definition of a tiny, compatible version of the middleware, that can run on small devices; and the concept of object proxy, used to make everyday object accessible within the middleware. We describe the concepts and implementation of our middleware, and show a number of experiments that illustrate its performance.},
	Author = {Rashid, Jayedur and Broxvall, Mathias and Saffiotti, Alessandro},
	Date-Added = {2019-05-22 11:11:40 +0100},
	Date-Modified = {2020-10-13 10:56:51 +0100},
	Doi = {10.1016/j.pmcj.2012.06.003},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {Robotics; Smart objects; Wireless sensor networks; Ambient ecology; Robot ecology; Smart environments},
	Number = {4},
	Pages = {522--541},
	Publisher = {Elsevier BV},
	Title = {A middleware to integrate robots, simple devices and everyday objects into an ambient ecology},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2012.06.003},
	Volume = {8},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2012.06.003}}

@article{Schuhmann:2010,
	Abstract = {As the size and complexity of Pervasive Computing environments increases, configuration and adaptation of distributed applications gains importance. These tasks require automated system support, since users must not be distracted by the (re-)composition of applications. In homogeneous ad hoc scenarios, relying on decentralized configuration schemes is obviously mandatory, while centralized approaches may help to reduce latencies in weakly heterogeneous infrastructure-based environments. However, in case of strongly heterogeneous pervasive environments including several resource-rich and resource-weak devices, both approaches may lead to suboptimal results concerning configuration latencies: While the resource-weak devices represent bottlenecks for decentralized configuration, the centralized approach faces the problem of not utilizing parallelism. Instead, a hybrid approach that involves only the subset of resource-rich devices is capable of rendering configuration and adaptation processes more efficiently. In this paper, we present such a resource-aware hybrid scheme that effectively reduces the time required for configuration processes. This is accomplished by a balanced-load clustering scheme that exploits the computational power of resource-rich devices, while avoiding bottlenecks in (re-)configurations. We present real-world evaluations which confirm that our approach reduces configuration latencies in heterogeneous environments by more than 30% compared to totally centralized and totally decentralized approaches. This is an important step towards seamless application configuration.},
	Author = {Schuhmann, Stephan and Herrmann, Klaus and Rothermel, Kurt},
	Date-Added = {2019-05-22 11:11:07 +0100},
	Date-Modified = {2020-10-14 21:12:06 +0100},
	Doi = {10.1007/978-3-642-12654-3_22},
	Isbn = {9783642126543},
	Issn = {1611-3349},
	Journal = {Pervasive Computing},
	Keywords = {Cluster Head; Hybrid Approach; Smart Phone; Pervasive Computing; Centralize Approach},
	Pages = {373--390},
	Publisher = {Springer Berlin Heidelberg},
	Title = {Efficient Resource-Aware Hybrid Configuration of Distributed Pervasive Applications},
	Url = {http://dx.doi.org/10.1007/978-3-642-12654-3_22},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/978-3-642-12654-3_22}}

@article{Jaroucheh:2012,
	Abstract = {In pervasive environments, context management systems are expected to administrate large volume of contextual information that is captured from spatial to nonspatial elements. Research in context-aware computing produced a number of middleware systems for context management to intermediate the communications between applications and context providers. In particular, in pervasive environments, the design of distributed storage, retrieval and propagation mechanisms of context information across domains is vital. In this paper, we propose a domain-based approach to address the requirements of scalable distributed context management, cross-domain efficient context information dissemination and domain-based privacy policy enforcement. We propose infinitum, a middleware architecture that incorporates the management and communication benefits of the Google Wave Federation Protocol, while also taking advantage of the semantic and inference benefits of ontology-based context models. This architecture establishes a robust cross-domain scalable context management and collaboration framework, which has been implemented and evaluated in a real-life application of ``SMART University'' to support virtual team collaboration.},
	Author = {Jaroucheh, Zakwan and Liu, Xiaodong and Smith, Sally},
	Date-Added = {2019-05-22 11:09:24 +0100},
	Date-Modified = {2020-10-13 11:09:22 +0100},
	Doi = {10.1007/s00779-011-0422-0},
	Issn = {1617-4917},
	Journal = {Personal and Ubiquitous Computing},
	Keywords = {Domain-based context management; Pervasive computing; Google Wave Federation Protocol},
	Number = {6},
	Pages = {741--755},
	Publisher = {Springer Nature},
	Title = {An approach to domain-based scalable context management architecture in pervasive environments},
	Url = {http://dx.doi.org/10.1007/s00779-011-0422-0},
	Volume = {16},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s00779-011-0422-0}}

@article{Meier:2009,
	Abstract = {This article describes a standardised way to build context-aware global smart space applications using information that is distributed across independent (legacy, sensor-enabled, and embedded) systems by exploiting the overlapping spatial and temporal attributes of the information maintained by these systems. The framework supports a spatial programming model based on a topographical approach to modelling space that enables systems to independently define and use potentially overlapping spatial context in a consistent manner and in contrast to topological approaches, in which geographical relationships between objects are described explicitly. This approach is supported by an extensible data model that implicitly captures the relationships between information provided by separate underlying systems and facilitates the incremental construction of global smart spaces since the underlying systems to be incorporated are largely decoupled. The framework has been evaluated using a prototype that integrates legacy systems and context-aware services for multi-modal urban journey planning and for visualising traffic congestion.},
	Author = {Meier, Ren{\'e} and Harrington, Anthony and Beckmann, Kai and Cahill, Vinny},
	Date-Added = {2019-05-22 11:08:36 +0100},
	Date-Modified = {2020-10-13 10:52:24 +0100},
	Doi = {10.1016/j.pmcj.2008.11.001},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {Global smart spaces; Middleware; Spatial programming; Context-aware applications},
	Number = {4},
	Pages = {350--368},
	Publisher = {Elsevier BV},
	Title = {A framework for incremental construction of real global smart space applications},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2008.11.001},
	Volume = {5},
	Year = {2009},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2008.11.001}}

@article{Acharya:2009,
	Abstract = {Presence, broadly defined as an event publish-notification infrastructure for converged applications, has emerged as a key mechanism for collecting and disseminating context attributes for next-generation services in both enterprise and provider domains. Current presence-based solutions and products lack in the ability to a) support flexible user-defined queries over dynamic presence data and b) derive composite presence from multiple provider domains. Accordingly, current uses of context are limited to individual domains/organizations and do not provide a programmable mechanism for rapid creation of context-aware services. This paper describes a presence virtualization architecture, where a virtualized presence server receives customizable queries from multiple presence clients, retrieves the necessary data from the base presence servers, applies the required virtualization logic and notifies the presence clients. To support both query expressiveness and computational efficiency, virtualization queries are structured to separately identify both the XSLT-based transformation primitives and the presence sources over which the transformation occurs. For improved scalability, the proposed architecture offloads the XSLT-related processing to a high-performance XML processing engine. We describe our current implementation and present performance results that attest to the promise of this virtualization approach.},
	Author = {Acharya, Arup and Banerjee, Nilanjan and Chakraborty, Dipanjan and Dasgupta, Koustuv and Misra, Archan and Sharma, Shachi and Wang, Xiping and Wright, Charles P.},
	Date-Added = {2019-05-22 11:07:52 +0100},
	Date-Modified = {2020-10-24 19:57:04 +0100},
	Doi = {10.1109/percom.2009.4912747},
	Journal = {2009 IEEE International Conference on Pervasive Computing and Communications},
	Keywords = {Presence; context; virtualization; scalability; federation},
	Pages = {1-10},
	Publisher = {IEEE},
	Title = {Programmable presence virtualization for next-generation context-based applications},
	Url = {http://dx.doi.org/10.1109/PERCOM.2009.4912747},
	Year = {2009},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/PERCOM.2009.4912747},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/percom.2009.4912747}}

@article{Blackstock:2008,
	Abstract = {To support the deployment of ubicomp systems, the ubiquitous computing research community has developed a variety of middleware platforms, meta-operating systems and toolkits. While there is evidence that these systems share certain abstractions, it is not realistic to use the same platform in all environments; systems and applications specialized for specific environments and applications will always be required. In this paper we present a methodology for interoperability that allows developers to innovate and evolve their platforms while allowing others to build interoperable applications. Our approach is based on our design of the Ubicomp Common Model (UCM) and an implementation of this model called the Ubicomp Integration Framework (UIF). Our aim in this work is to provide clear evidence that the UCM unifies the capabilities of ubicomp systems based on an evaluation and analysis of its use in integrating several existing systems into a composite campus environment.},
	Author = {Blackstock, Michael and Lea, Rodger and Krasic, Charles},
	Date-Added = {2019-05-22 11:06:55 +0100},
	Date-Modified = {2020-10-14 21:06:44 +0100},
	Doi = {10.1007/978-3-540-79576-6_11},
	Isbn = {9783540795766},
	Issn = {1611-3349},
	Journal = {Pervasive Computing},
	Keywords = {Resource Description Framework; Ubiquitous Computing; Composite Service; Context Type; Smart Space},
	Pages = {180--196},
	Publisher = {Springer Berlin Heidelberg},
	Title = {Evaluation and Analysis of a Common Model for Ubiquitous Systems Interoperability},
	Url = {http://dx.doi.org/10.1007/978-3-540-79576-6_11},
	Year = {2008},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/978-3-540-79576-6_11}}

@article{Gehrke:2004,
	Abstract = {Smart sensors are small wireless computing devices that sense information such as light and humidity at extremely high resolutions. A smart sensor query-processing architecture using database technology can facilitate deployment of sensor networks. Smart-sensor technology enables a broad range of ubiquitous computing applications. Their low cost, small size, and untethered nature lets them sense information at previously unobtainable resolutions. We discuss about query processing in sensor networks.},
	Author = {Gehrke, J. and Madden, S.},
	Date-Added = {2019-05-22 11:05:24 +0100},
	Date-Modified = {2020-10-14 20:36:37 +0100},
	Doi = {10.1109/mprv.2004.1269131},
	Issn = {1536-1268},
	Journal = {IEEE Pervasive Computing},
	Number = {1},
	Pages = {46--55},
	Publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
	Title = {Query processing in sensor networks},
	Url = {http://dx.doi.org/10.1109/MPRV.2004.1269131},
	Volume = {3},
	Year = {2004},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/MPRV.2004.1269131},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/mprv.2004.1269131}}

@article{Cooray:2013,
	Abstract = {Embedded and mobile software systems are marked with a high degree of unpredictability and dynamism in the execution context. At the same time, such systems are often mission-critical, meaning that they need to satisfy strict reliability requirements. Most current software reliability analysis approaches are not suitable for these types of software systems, as they do not take the changes in the execution context of the system into account. We propose an approach geared to such systems which continuously furnishes refined reliability predictions at runtime by incorporating various sources of information, including the execution context of the system. The reliability predictions are leveraged to proactively place the software in the (near-)optimal configuration with respect to changing conditions. Our approach considers two representative architectural reconfiguration decisions that impact the system's reliability: reallocation of components to processes and changing the number of component replicas. We have realized the approach as part of a framework intended for mission-critical settings, called REsilient SItuated SofTware system (RESIST), and evaluated it using a mobile emergency response system.},
	Author = {Cooray, Deshan and Kouroshfar, Ehsan and Malek, Sam and Roshandel, Roshanak},
	Date-Added = {2019-05-22 11:03:13 +0100},
	Date-Modified = {2020-10-14 20:41:03 +0100},
	Doi = {10.1109/tse.2013.36},
	Issn = {1939-3520},
	Journal = {IEEE Transactions on Software Engineering},
	Keywords = {Context awareness; software architecture; self-adaptive systems; reliability; mobility},
	Number = {12},
	Pages = {1714--1735},
	Publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
	Title = {Proactive Self-Adaptation for Improving the Reliability of Mission-Critical, Embedded, and Mobile Software},
	Url = {http://dx.doi.org/10.1109/TSE.2013.36},
	Volume = {39},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/TSE.2013.36},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/tse.2013.36}}

@article{Gui:2011,
	Abstract = {Software systems are increasingly expected to dynamically self-adapt to the changing environments. One of the main adaptation mechanisms is dynamic recomposition of application components. This paper addresses the key issues that arise when context knowledge is used to steer the run-time (re)composition process so as to match the new environmental conditions. In order to integrate such knowledge into this process, A Continuous Context-Aware Deployment and Adaptation (ACCADA) framework is proposed. To support run-time component composition, the essential runtime abstractions of the underlying component model are studied. By using a layered modeling approach, our framework gradually incorporates design-time as well as run-time knowledge into the component composition process. Service orientation is employed to facilitate the changes of adaptation policy. Results show that our framework has significant advantages over traditional approaches in light of flexibility, resource usage and lines of code. Although our experience was based on the OSGi middleware, we believe our findings to be general to architecture-based management systems using reflective component models.},
	Author = {Gui, Ning and De Florio, Vincenzo and Sun, Hong and Blondia, Chris},
	Date-Added = {2019-05-22 11:02:27 +0100},
	Date-Modified = {2020-10-14 19:54:13 +0100},
	Doi = {10.1016/j.jss.2010.09.017},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Adaptive middleware; Context-specific knowledge; Run-time composition; Service-oriented architecture},
	Number = {2},
	Pages = {185--197},
	Publisher = {Elsevier BV},
	Title = {Toward architecture-based context-aware deployment and adaptation},
	Url = {http://dx.doi.org/10.1016/j.jss.2010.09.017},
	Volume = {84},
	Year = {2011},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.jss.2010.09.017}}

@article{Wang:2014,
	Abstract = {Context-aware pervasive software is responsive to various contexts and their changes. A faulty implementation of the context-aware features may lead to unpredictable behavior with adverse effects. In software testing, one of the most important research issues is to determine the sufficiency of a test suite to verify the software under test. Existing adequacy criteria for testing traditional software, however, have not explored the dimension of serial test inputs and have not considered context changes when constructing test suites. In this article, we define the concept of context diversity to capture the extent of context changes in serial inputs and propose three strategies to study how context diversity may improve the effectiveness of the data-flow testing criteria. Our case study shows that the strategy that uses test cases with higher context diversity can significantly improve the effectiveness of existing data-flow testing criteria for context-aware pervasive software. In addition, test suites with higher context diversity are found to execute significantly longer paths, which may provide a clue that reveals why context diversity can contribute to the improvement of effectiveness of test suites.},
	Author = {Wang, Huai and Chan, W. K. and Tse, T. H.},
	Date-Added = {2019-05-22 11:01:41 +0100},
	Date-Modified = {2020-10-14 21:01:37 +0100},
	Doi = {10.1145/2620000},
	Issn = {1556-4665},
	Journal = {ACM Transactions on Autonomous and Adaptive Systems},
	Keywords = {test adequacy; Context-aware program; context diversity},
	Number = {2},
	Pages = {1--28},
	Publisher = {Association for Computing Machinery (ACM)},
	Title = {Improving the Effectiveness of Testing Pervasive Software via Context Diversity},
	Url = {http://dx.doi.org/10.1145/2620000},
	Volume = {9},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2620000}}

@article{Castelli:2015,
	Abstract = {Emerging pervasive computing services will typically involve a large number of devices and service components cooperating together in an open and dynamic environment. This calls for suitable models and infrastructures promoting spontaneous, situated, and self-adaptive interactions between components. SAPERE (Self-Aware Pervasive Service Ecosystems) is a general coordination framework aimed at facilitating the decentralized and situated execution of self-organizing and self-adaptive pervasive computing services. SAPERE adopts a nature-inspired approach, in which pervasive services are modeled and deployed as autonomous individuals in an ecosystem of other services and devices, all of which interact in accord to a limited set of coordination laws, or eco-laws. In this article, we present the overall rationale underlying SAPERE and its reference architecture. We introduce the eco-laws--based coordination model and show how it can be used to express and easily enforce general-purpose self-organizing coordination patterns. The middleware infrastructure supporting the SAPERE model is presented and evaluated, and the overall advantages of SAPERE are discussed in the context of exemplary use cases.},
	Author = {Castelli, Gabriella and Mamei, Marco and Rosi, Alberto and Zambonelli, Franco},
	Date-Added = {2019-05-22 11:00:48 +0100},
	Date-Modified = {2020-10-14 21:09:23 +0100},
	Doi = {10.1145/2700321},
	Issn = {1556-4665},
	Journal = {ACM Transactions on Autonomous and Adaptive Systems},
	Keywords = {coordination; middleware; self-organization; Pervasive computing},
	Number = {1},
	Pages = {1--27},
	Publisher = {Association for Computing Machinery (ACM)},
	Title = {Engineering pervasive service ecosystems: the sapere approach},
	Url = {http://dx.doi.org/10.1145/2700321},
	Volume = {10},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2700321}}

@article{Wang:2013,
	Abstract = {As the complexity of Cyber-Physical Systems (CPS) increases, it becomes more and more challenging to ensure the reliability of CPS, especially in the presence of system failures. Simplex architecture is shown to be an efficient tool to address the software failure in such systems. However, when physical failures also appear, Simplex does not work any more because the physical dynamics change due to physical failures. The Simplex architecture designed for the original physical model may not be suitable for the new dynamics. To address both software and physical failures, this paper presents the L1Simplex architecture, which contains the safety monitor, the high-performance controller (HPC), the L1-based high-assurance controller (HAC), and the decision logic for controller switching. The safety monitor is used to monitor the system behavior. It leads to another controller switching rule besides the stability-envelope-based rule in the decision logic. The HAC is designed based on the L1 adaptive controller, with which the stability envelope is computed. We show that the L1Simplex architecture can efficiently handle a class of software and physical failures.},
	Author = {Wang, Xiaofhteng and Hovakimyan, Naira and Sha, Lui},
	Date-Added = {2019-05-22 10:59:45 +0100},
	Date-Modified = {2020-10-24 19:55:10 +0100},
	Doi = {10.1145/2502524.2502531},
	Isbn = {9781450319966},
	Journal = {Proceedings of the ACM/IEEE 4th International Conference on Cyber-Physical Systems - ICCPS '13},
	Keywords = {L1 adaptive control; simplex; fault-tolerance},
	Pages = {41--50},
	Publisher = {ACM Press},
	Title = {L1simplex: fault-tolerant control of cyber-physical systems},
	Url = {http://dx.doi.org/10.1145/2502524.2502531},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2502524.2502531}}

@article{Bak:2011,
	Abstract = {Cyber-physical systems bridge the gap between cyber components, typically written in software, and the physical world. Software written with traditional development practices, however, likely contains bugs or unintended interactions among components, which can result in uncontrolled and possibly disastrous physical-world interactions. Complete verification of cyber-physical systems, however, is often impractical due to outsourced development of software, cost, software created without formal models, or excessively large or complex models where the verification process becomes intractable. Rather than mandating complete modeling and verification, we advocate sandboxing of unverified cyber-physical system controllers by augmenting the system with a verified safety wrapper that can take control of the plant in order to avoid violations of formal safety properties. The focus of this work is an automatic method, based on reach ability and time-bounded reach ability of hybrid systems, to generate verified sandboxes. The method is shown to be both more general than previous work, and allows the trade-off of increased computation time for improved reach ability accuracy. We also present an end-to-end toolkit which performs the low-level computation to generate the sandbox source code from Simulink/State flow models of a cyber-physical system.},
	Author = {Bak, Stanley and Manamcheri, Karthik and Mitra, Sayan and Caccamo, Marco},
	Date-Added = {2019-05-22 10:58:12 +0100},
	Date-Modified = {2020-10-24 19:57:25 +0100},
	Doi = {10.1109/iccps.2011.25},
	Isbn = {9781612846408},
	Journal = {2011 IEEE/ACM Second International Conference on Cyber-Physical Systems},
	Keywords = {hybrid systems; cyber-physical systems; control; verification; abstraction},
	Pages = {3-12},
	Publisher = {IEEE},
	Title = {Sandboxing Controllers for Cyber-Physical Systems},
	Url = {http://dx.doi.org/10.1109/ICCPS.2011.25},
	Year = {2011},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICCPS.2011.25},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/iccps.2011.25}}

@article{Romero:2013,
	Abstract = {SUMMARY
Nowadays, the computational devices are everywhere. In malls, offices, streets, cars, and even homes, we can find devices providing and consuming functionality to improve the user satisfaction. These devices include sensors that provide information about the environment state (e.g., temperature, occupancy, light levels), service providers (e.g., Internet TVs, GPS), smartphones (that contain user preferences), and actuators that act on the environment (e.g., closing the blinds, activating the alarm, changing the temperature). Although these devices exhibit communication capabilities, their integration into a larger monitoring system remains a challenging task, partly because of the strong heterogeneity of technologies and protocols. Therefore, in this article, we focus on home environments and propose a middleware solution, called DigiHome, that applies the Service Component Architecture (SCA) component model to integrate data and events generated by heterogeneous devices in this kind of environments. DigiHome exploits the SCA extensibility to incorporate the REpresentational State Transfer (REST) architectural style and, in this way, leverages on the integration of multiscale systems‐of‐systems (from wireless sensor networks to the Internet). Additionally, the platform applies Complex Event Processing technology that detects application‐specific situations. We claim that the modularization of concerns fostered by DigiHome and materialized in a service‐oriented architecture, makes it easier to incorporate new services and devices in smart home environments. The benefits of the DigiHome platform are demonstrated on smart home scenarios covering home automation, emergency detection, and energy saving situations.},
	Author = {Romero, Daniel and Hermosillo, Gabriel and Taherkordi, Amirhosein and Nzekwa, Russel and Rouvoy, Romain and Eliassen, Frank},
	Date-Added = {2019-05-22 10:56:59 +0100},
	Date-Modified = {2020-10-14 19:58:55 +0100},
	Doi = {10.1002/spe.1125},
	Issn = {0038-0644},
	Journal = {Software: Practice and Experience},
	Keywords = {SCA; context‐awareness; smart homes},
	Number = {10},
	Pages = {1205--1218},
	Publisher = {Wiley},
	Title = {The DigiHome Service-Oriented Platform},
	Url = {http://dx.doi.org/10.1002/spe.1125},
	Volume = {43},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1002/spe.1125}}

@article{Yau:2006,
	Abstract = {Due to the dynamic and ephemeral nature of ubiquitous computing (ubicomp) environments, it is especially important that the application software in ubicomp environments is trustworthy. In order to have trustworthy application software in ubicomp environments, situation-awareness (SAW) in the application software is needed to enforce flexible security policies and detect violations of security policies. In this paper, an approach is presented to provide development and runtime support to incorporate SAW in trustworthy ubicomp application software. The development support is to provide SAW requirement specification and automated code generation to achieve SAW in trustworthy ubicomp application software, and the runtime support is for context acquisition, situation analysis and situation-aware communication. To realize our approach, the improved Reconfigurable Context-Sensitive Middleware (RCSM) is developed to provide the above development and runtime support.},
	Author = {Yau, Stephen S. and Huang, Dazhi and Gong, Haishan and Yao, Yisheng},
	Date-Added = {2019-05-22 10:55:38 +0100},
	Date-Modified = {2020-10-14 20:02:32 +0100},
	Doi = {10.1002/spe.736},
	Eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/spe.736},
	Journal = {Software: Practice and Experience},
	Keywords = {trustworthy ubiquitous application software; situation-awareness; Situation-Aware Interface Definition Language (SA-IDL); situation-aware middleware; situation-aware security policies; development and runtime support},
	Number = {9},
	Pages = {893-921},
	Title = {Support for situation awareness in trustworthy ubiquitous computing application software},
	Url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.736},
	Volume = {36},
	Year = {2006},
	Bdsk-Url-1 = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.736},
	Bdsk-Url-2 = {https://doi.org/10.1002/spe.736}}

@article{Geihs:2009,
	Abstract = {Driven by the emergence of mobile and pervasive computing there is a growing demand for context-aware software systems that can dynamically adapt to their run-time environment. We present the results of project MADAM that has delivered a comprehensive solution for the development and operation of context-aware, self-adaptive applications. The main contributions of MADAM are (a) a sophisticated middleware that supports the dynamic adaptation of component-based applications, and (b) an innovative model-driven development methodology that is based on abstract adaptation models and corresponding model-to-code transformations. MADAM has demonstrated the viability of a general, integrated approach to application-level adaptation. We discuss our experiences with two real-world case studies that were built using the MADAM approach. Copyright {\copyright} 2008 John Wiley \& Sons, Ltd.},
	Author = {Geihs, K. and Barone, P. and Eliassen, F. and Floch, J. and Fricke, R. and Gjorven, E. and Hallsteinsen, S. and Horn, G. and Khan, M. U. and Mamelli, A. and Papadopoulos, G. A. and Paspallis, N. and Reichle, R. and Stav, E.},
	Date-Added = {2019-05-22 10:52:56 +0100},
	Date-Modified = {2020-10-13 10:47:03 +0100},
	Doi = {10.1002/spe.900},
	Eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/spe.900},
	Journal = {Software: Practice and Experience},
	Keywords = {adaptive software; component framework; compositional adaptation; context awareness; model-driven development; utility function},
	Number = {4},
	Pages = {385-422},
	Title = {A comprehensive solution for application-level adaptation},
	Url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.900},
	Volume = {39},
	Year = {2009},
	Bdsk-Url-1 = {https://onlinelibrary.wiley.com/doi/abs/10.1002/spe.900},
	Bdsk-Url-2 = {https://doi.org/10.1002/spe.900}}

@article{Bruneau:2013,
	Abstract = {Pervasive computing applications involve both software concerns, such as any software system, and integration concerns, for the constituent networked devices of the pervasive computing environment. This situation is problematic for testing because it requires acquiring, testing, and interfacing a variety of software and hardware entities. This process can rapidly become costly and time‐consuming when the target environment involves many entities.

This paper introduces DiaSim, a simulator for pervasive computing applications. To cope with widely heterogeneous entities, DiaSim is parameterized with respect to a description of a target pervasive computing environment. This description is used to generate both a programming framework to develop the simulation logic and an emulation layer to execute applications. Furthermore, a simulation renderer is coupled to DiaSim to allow a simulated pervasive system to be visually monitored and debugged.

DiaSim has been implemented and used to simulate various pervasive computing systems in different application areas, demonstrating the generality of our parameterized approach.},
	Author = {Bruneau, Julien and Consel, Charles},
	Date-Added = {2019-05-22 10:50:57 +0100},
	Date-Modified = {2020-10-14 21:15:58 +0100},
	Doi = {10.1002/spe.2130},
	Issn = {0038-0644},
	Journal = {Software: Practice and Experience},
	Keywords = {simulation; testing; pervasive computing; hybrid simulation},
	Number = {8},
	Pages = {885--909},
	Publisher = {Wiley},
	Title = {DiaSim: a simulator for pervasive computing applications},
	Url = {http://dx.doi.org/10.1002/spe.2130},
	Volume = {43},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1002/spe.2130}}

@article{Soldatos:2006,
	Abstract = {We present an architectural framework along with a set of middleware elements, facilitating the integration of perceptual components, sensors, actuators, and context-modeling scripts, comprising sophisticated ubiquitous computing applications in smart spaces. The architecture puts special emphasis on the integration of perceptual components contributed by a variety of technology providers, which has not been adequately addressed in legacy architectures. Moreover, the introduced architecture allows for intelligent discovery and management of resources. Along with the description of this breadboard architecture, we present its non-functional features and assess its performance. We also outline a rich set of practical prototype pervasive services that have been built, based on this architecture. These services emphasize on providing non-obtrusive human-centric assistance (e.g., memory aids, meeting recordings, pertinent information) in the scope of meetings, lectures and presentation, Experiences from building these services manifest the benefits of the introduced architecture.},
	Author = {Soldatos, John and Dimakis, Nikolaos and Stamatis, Kostas and Polymenakos, Lazaros},
	Date-Added = {2019-05-22 10:49:36 +0100},
	Date-Modified = {2020-10-12 23:05:48 +0100},
	Doi = {10.1007/s00779-006-0102-7},
	Issn = {1617-4917},
	Journal = {Personal and Ubiquitous Computing},
	Keywords = {Smart spaces; Autonomic computing; Ubiquitous computing; Context-awareness; Architecture; Middleware},
	Number = {3},
	Pages = {193--212},
	Publisher = {Springer Nature},
	Title = {A breadboard architecture for pervasive context-aware services in smart spaces: middleware components and prototype applications},
	Url = {http://dx.doi.org/10.1007/s00779-006-0102-7},
	Volume = {11},
	Year = {2006},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s00779-006-0102-7}}

@article{Paspallis:2013,
	Abstract = {The proliferation of powerful smartphone devices provides a great opportunity for context-aware mobile applications becoming mainstream. However, we argue that conventional software development techniques suffer because of the added complexity required for collecting and managing context information. This paper presents a component-based middleware architecture which facilitates the development and deployment of context-aware applications via reusable components. The main contribution of this approach is the combination of a development methodology with the middleware architecture, which together bring significant value to developers of context-aware applications. Further contributions include the following: The methodology utilizes separation of concerns, thus decreasing the developmental cost and improving the productivity. The design and implementation of context-aware applications are also eased via the use of reusable components, called context plug-ins. Finally, the middleware architecture facilitates the deployment and management of the context plug-ins in a resource-aware manner. The proposed methodology and middleware architecture are evaluated both quantitatively and qualitatively.},
	Author = {Paspallis, Nearchos and Papadopoulos, George A.},
	Date-Added = {2019-05-22 10:49:00 +0100},
	Date-Modified = {2020-10-13 10:58:10 +0100},
	Doi = {10.1007/s00779-013-0722-7},
	Issn = {1617-4917},
	Journal = {Personal and Ubiquitous Computing},
	Keywords = {Context-awareness; Middleware; Reusability; Pluggability; Modularity; Mobile devices; Separation-of-concerns},
	Number = {5},
	Pages = {1099--1116},
	Publisher = {Springer Nature},
	Title = {A pluggable middleware architecture for developing context-aware mobile applications},
	Url = {http://dx.doi.org/10.1007/s00779-013-0722-7},
	Volume = {18},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s00779-013-0722-7}}

@article{Guo:2010,
	Abstract = {OPEN is an ontology-based programming framework for rapid prototyping, sharing, and personalization of context-aware applications. Unlike previous systems that provide programming support for single group of users, OPEN provides different programming support for users with diverse technical skills. According to the programming requirements of different users, several cooperation patterns are identified, and the mechanisms to facilitate resource sharing and reuse are built into the framework. Three corresponding programming modes are elaborated by showing how a context-aware game has been developed with the support of the OPEN framework, and the usability of our system is validated through an initial user study.},
	Author = {Guo, Bin and Zhang, Daqing and Imai, Michita},
	Date-Added = {2019-05-22 10:48:27 +0100},
	Date-Modified = {2020-10-14 19:55:27 +0100},
	Doi = {10.1007/s00779-010-0329-1},
	Issn = {1617-4917},
	Journal = {Personal and Ubiquitous Computing},
	Keywords = {Context-aware computing; Cooperation; End user programming; Semantic web},
	Number = {3},
	Pages = {221--233},
	Publisher = {Springer Nature},
	Title = {Toward a cooperative programming framework for context-aware applications},
	Url = {http://dx.doi.org/10.1007/s00779-010-0329-1},
	Volume = {15},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s00779-010-0329-1}}

@article{Lezoray:2011,
	Abstract = {In the next decades, the growth in population aging will cause important problems to most industrialized countries. To tackle this issue, Ambient Assistive Living (AAL) systems can reinforce the well-being of elderly people, by providing emergency, autonomy enhancement, and comfort services. These services will postpone the need of a medicalized environment and will allow the elderly to stay longer at home. However, each elderly has specific needs and a deployment environment of such services is likely unique. Furthermore, the needs evolve over time, and so does the deployment environment of the system. In this paper, we propose the use of a model-based development method, the adaptive medium approach, to enable dynamic adaptation of AAL systems. We also propose improvements to make it more suited to the AAL domain, such as considering heterogeneity and a composition model. The paper includes an evaluation of the prototype implementing the approach, and a comparison with related work.},
	Author = {L{\'e}zoray, Jean-Baptiste and Segarra, Maria-Teresa and Phung-Khac, An and Th{\'e}paut, Andr{\'e} and Gilliot, Jean-Marie and Beugnard, Antoine},
	Date-Added = {2019-05-22 10:47:52 +0100},
	Date-Modified = {2020-10-13 10:49:23 +0100},
	Doi = {10.1007/s00779-010-0356-y},
	Issn = {1617-4917},
	Journal = {Personal and Ubiquitous Computing},
	Keywords = {Dynamic adaptation; Model-driven engineering; Heterogeneity; AAL; Adaptive medium approach},
	Number = {4},
	Pages = {353--363},
	Publisher = {Springer Nature},
	Title = {A design process enabling adaptation in pervasive heterogeneous contexts},
	Url = {http://dx.doi.org/10.1007/s00779-010-0356-y},
	Volume = {15},
	Year = {2011},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s00779-010-0356-y}}

@article{Hoareau:2008,
	Abstract = {A number of emerging distributed platforms include fixed and robust workstations but, like dynamic and pervasive networks, are often built from mobile and resource-constrained devices. These networks are characterized by the volatility of their hosts and connections, which may lead to network fragmentation. Although increasingly common, they remain a challenging target for distributed applications. In this paper, we focus on component-based distributed applications by addressing the distribution and the deployment of software components on dynamic pervasive networks. We present a distribution scheme and some associated middleware mechanisms that allow a component to provide its services in an ubiquitous way. First, an architecture description language extension is proposed in order to specify a deployment, driven by constraints on the resources needed by components. Then, a propagative and autonomic deployment process is explained, which is based on a consensus algorithm adapted for dynamic networks. Lastly, implementation details and experiment results are given.},
	Author = {Hoareau, Didier and Mah{\'e}o, Yves},
	Date-Added = {2019-05-22 10:45:45 +0100},
	Date-Modified = {2020-10-14 20:54:56 +0100},
	Doi = {10.1007/s00779-006-0110-7},
	Issn = {1617-4917},
	Journal = {Personal and Ubiquitous Computing},
	Keywords = {Deployment; Distributed components; Ubiquitous applications; Dynamic networks; Pervasive networks; Middleware},
	Number = {2},
	Pages = {167--178},
	Publisher = {Springer Nature},
	Title = {Middleware support for the deployment of ubiquitous software components},
	Url = {http://dx.doi.org/10.1007/s00779-006-0110-7},
	Volume = {12},
	Year = {2008},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s00779-006-0110-7}}

@article{Xiaohui_Gu:2004,
	Abstract = {Delivering a complex application on a resource-constrained mobile device is challenging. An adaptive offloading system enables dynamic partitioning of the application and efficient offloading of part of its execution to a nearby surrogate. To deliver pervasive services without modifying the application or degrading its fidelity, we propose an adaptive offloading system that includes two key parts: a distributed offloading platform and an offloading inference engine. There are two important decision-making problems for adaptive offloading: adaptive offloading triggering and efficient application partitioning.},
	Author = {Xiaohui Gu and Messer, A. and Greenberg, I. and Milojicic, D. and Nahrstedt, K.},
	Date-Added = {2019-05-22 10:45:08 +0100},
	Date-Modified = {2020-10-13 11:03:15 +0100},
	Doi = {10.1109/mprv.2004.1321031},
	Issn = {1536-1268},
	Journal = {IEEE Pervasive Computing},
	Number = {03},
	Pages = {66--73},
	Publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
	Title = {Adaptive Offloading for Pervasive Computing},
	Url = {http://dx.doi.org/10.1109/MPRV.2004.1321031},
	Volume = {03},
	Year = {2004},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/MPRV.2004.1321031},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/mprv.2004.1321031}}

@article{Bannach:2008,
	Abstract = {The CRN Toolbox enables fast implementation of activity and context recognition systems, featuring mechanisms for distributed processing and support for mobile and wearable devices. CRN Toolbox is a tool set specifically optimized for implementing multimodal, distributed activity and context recognition systems running on Posix operating systems. Like conventional rapid- prototyping tools, the CRN Toolbox contains a collection of ready-to-use algorithms (signal processing, pattern classification, and so on). Unlike classic event detection in homogeneous sensor networks-for example, DSWare (Data Service Middleware)-it supports complex activity detection from heterogeneous sensors. Its implementation is particularly optimized for mobile devices. This includes the ability to execute algorithms, whether in floating-point or fixed-point arithmetic, without recoding. Moreover, with its mature functionality, the CRN Toolbox isn't likely to suffer from limited user acceptance as the Context toolkit framework did.},
	Author = {Bannach, David and Amft, Oliver and Lukowicz, Paul},
	Date-Added = {2019-05-22 10:44:07 +0100},
	Date-Modified = {2020-10-14 20:35:24 +0100},
	Doi = {10.1109/mprv.2008.36},
	Issn = {1536-1268},
	Journal = {IEEE Pervasive Computing},
	Keywords = {rapid prototyping; activity recognition; context recognition; CRN Toolbox; wearable devices; mobile devices; distributed processing; pattern recognition; gesture recognition},
	Number = {2},
	Pages = {22--31},
	Publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
	Title = {Rapid Prototyping of Activity Recognition Applications},
	Url = {http://dx.doi.org/10.1109/MPRV.2008.36},
	Volume = {7},
	Year = {2008},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/MPRV.2008.36},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/mprv.2008.36}}

@article{Weis:2007,
	Abstract = {VisualRDK is a high-level programming language for prototyping pervasive applications. Context is tightly integrated into the language itself, so developers can attach functionality to locations, persons, or situations instead of the device. Pervasive computing appliances range from consumer devices over embedded sensor boards to PCs and large-scale context servers. Because these devices vary tremendously in their capabilities, application developers must create different programming models for every class of device. This makes rapid prototyping infeasible as soon as more than one class of devices is involved. Rapid prototyping therefore requires a programming model that hides the environment's heterogeneity.},
	Author = {Weis, Torben and Knoll, Mirko and Ulbrich, Andreas and Muhl, Gero and Brandle, Alexander},
	Date-Added = {2019-05-22 10:43:23 +0100},
	Date-Modified = {2020-10-14 20:36:18 +0100},
	Doi = {10.1109/mprv.2007.41},
	Issn = {1536-1268},
	Journal = {IEEE Pervasive Computing},
	Keywords = {debugging; prototype; context-aware; application logic; programming logic},
	Number = {2},
	Pages = {76--84},
	Publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
	Title = {Rapid Prototyping for Pervasive Applications},
	Url = {http://dx.doi.org/10.1109/MPRV.2007.41},
	Volume = {6},
	Year = {2007},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/MPRV.2007.41},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/mprv.2007.41}}

@article{Kawsar:2008,
	Abstract = {This paper explores system issues for involving end users in constructing and enhancing a smart home. In support of this involvement we present an infrastructure and a tangible deployment tool. Active participation of users is essential in a domestic environment as it offers simplicity, greater usercentric control, lower deployment costs and better support for personalization. Our proposed infrastructure provides the foundation for end user deployment utilizing a loosely coupled framework to represent an artefact and its augmented functionalities. Pervasive applications are built independently and are expressed as a collection of functional tasks. A runtime component, FedNet maps these tasks to corresponding service provider artefacts. The tangible deployment tool uses FedNet and allows end users to deploy and control artefacts and applications only by manipulating RFID cards. Primary advantages of our approach are two-fold. Firstly, it allows end users to deploy ubicomp systems easily in a Do-it-Yourself fashion. Secondly, it allows developers to write applications and to build augmented artefacts in a generic way regardless of the constraints of the target environment. We describe an implemented prototype and illustrate its feasibility in a real life deployment session by the end users. Our study shows that the end users might be involved in deploying future ubicomp systems if appropriate tools and supporting infrastructure are provided.},
	Author = {Kawsar, Fahim and Nakajima, Tatsuo and Fujinami, Kaori},
	Date-Added = {2019-05-22 10:42:20 +0100},
	Date-Modified = {2020-10-24 19:52:57 +0100},
	Doi = {10.1145/1409635.1409673},
	Isbn = {9781605581361},
	Journal = {Proceedings of the 10th international conference on Ubiquitous computing - UbiComp '08},
	Keywords = {Augmented Artefact; Pervasive Application; System Infrastructure; End User Deployment},
	Pages = {282--291},
	Publisher = {ACM Press},
	Title = {Deploy spontaneously: supporting end-users in building and enhancing a smart home},
	Url = {http://dx.doi.org/10.1145/1409635.1409673},
	Year = {2008},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/1409635.1409673}}

@article{Nishikawa:2006,
	Abstract = {In this paper, we propose a simulator for facilitating reliable and inexpensive development of ubiquitous applications where each application software controls a lot of information appliances based on the state of external environment, user's contexts and preferences. The proposed simulator realistically reproduces behavior of application software on virtual devices in a virtual 3D space. For this purpose, the simulator provides functions to facilitate deployment of virtual devices in a 3D space, simulates communication among the devices from MAC level to application level, and reproduces the change of physical quantities (e.g., temperature) caused by devices (e.g., air conditioners). Also, we keep software portability between virtual devices and real devices. As the most prominent function of the simulator, we provide a systematic and visual testing method for testing whether a given application software satisfies specified requirements.},
	Author = {Nishikawa, Hiroshi and Yamamoto, Shinya and Tamai, Morihiko and Nishigaki, Kouji and Kitani, Tomoya and Shibata, Naoki and Yasumoto, Keiichi and Ito, Minoru},
	Date-Added = {2019-05-22 10:41:45 +0100},
	Date-Modified = {2020-10-14 19:48:07 +0100},
	Doi = {10.1007/11853565_27},
	Isbn = {9783540396352},
	Issn = {1611-3349},
	Journal = {UbiComp 2006: Ubiquitous Computing},
	Keywords = {Physical Quantity; Network Simulator; Ubiquitous Computing; Pervasive Computing; Virtual Space},
	Pages = {459--476},
	Publisher = {Springer Berlin Heidelberg},
	Title = {UbiREAL: Realistic Smartspace Simulator for Systematic Testing},
	Url = {http://dx.doi.org/10.1007/11853565_27},
	Year = {2006},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/11853565_27}}

@article{Athanasopoulos:2008,
	Abstract = {In this paper we present CoWSAMI, a middleware infrastructure that enables context awareness in open ambient intelligence environments, consisting of mobile users and context sources that become dynamically available as the users move from one location to another. A central requirement in such dynamic scenarios is to be able to integrate new context sources and users at run-time. CoWSAMI exploits a novel approach towards this goal. The proposed approach is based on utilizing Web services as interfaces to context sources and dynamically updatable relational views for storing, aggregating and interpreting context. Context rules are employed to provide mappings that specify how to populate context relations, with respect to the different context sources that become dynamically available. An underlying context sources discovery mechanism is utilized to maintain context information up to date as context sources, and users get dynamically involved.},
	Author = {Athanasopoulos, Dionysis and Zarras, Apostolos V. and Issarny, Valerie and Pitoura, Evaggelia and Vassiliadis, Panos},
	Date-Added = {2019-05-22 10:38:21 +0100},
	Date-Modified = {2020-10-14 21:20:09 +0100},
	Doi = {10.1016/j.pmcj.2007.12.004},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {Ambient intelligence environments; Context awareness; Middleware; Web services},
	Number = {3},
	Pages = {360--389},
	Publisher = {Elsevier BV},
	Title = {CoWSAMI: Interface-aware context gathering in ambient intelligence environments},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2007.12.004},
	Volume = {4},
	Year = {2008},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2007.12.004}}

@article{Mazzola_Paluska:2008,
	Abstract = {We describe an approach to automate certain high-level implementation decisions in a pervasive application, allowing them to be postponed until runtime. Our system enables a model in which an application programmer can specify the behavior of an adaptive application as a set of open-ended decision points. We formalize decision points as Goals, each of which may be satisfied by a set of scripts called Techniques. The set of Techniques vying to satisfy any Goal is additive and may be extended at runtime without needing to modify or remove any existing Techniques. Our system provides a framework in which Techniques may compete and interoperate at runtime in order to maintain an adaptive application. Technique development may be distributed and incremental, providing a path for the decentralized evolution of applications. Benchmarks show that our system imposes reasonable overhead during application startup and adaptation.},
	Author = {Mazzola Paluska, Justin and Pham, Hubert and Saif, Umar and Chau, Grace and Terman, Chris and Ward, Steve},
	Date-Added = {2019-05-22 10:37:16 +0100},
	Date-Modified = {2020-10-14 20:03:23 +0100},
	Doi = {10.1016/j.pmcj.2008.04.006},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {Middleware; Adaptivity; Goal-oriented programming; Planning; Goals; Techniques},
	Number = {6},
	Pages = {791--806},
	Publisher = {Elsevier BV},
	Title = {Structured decomposition of adaptive applications},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2008.04.006},
	Volume = {4},
	Year = {2008},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2008.04.006}}

@article{Driver:2008,
	Abstract = {In this paper we describe the design, implementation and evaluation of a software framework that supports the development of mobile, context-aware trails-based applications. A trail is a contextually scheduled collection of activities and represents a generic model that can be used to satisfy the activity management requirements of a wide range of context-based time management applications. Trails overcome limitations with traditional time management techniques based on static to-do lists by dynamically reordering activities based on emergent context.},
	Author = {Driver, Cormac and Clarke, Siobhan},
	Date-Added = {2019-05-22 10:36:34 +0100},
	Date-Modified = {2020-10-13 11:07:41 +0100},
	Doi = {10.1016/j.pmcj.2008.04.009},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {Trails; Context-aware scheduling; Pervasive computing; Software frameworks},
	Number = {5},
	Pages = {719--736},
	Publisher = {Elsevier BV},
	Title = {An application framework for mobile, context-aware trails},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2008.04.009},
	Volume = {4},
	Year = {2008},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2008.04.009}}

@article{Ou:2007,
	Abstract = {The practical success of pervasive services running in mobile wireless networks and devices relies on their ability to provide effective and efficient offloading support, so as to satisfy the increasing demand for mobile devices to run heavier applications (e.g. those running on desktop PCs). Offloading is an effective mechanism for leveraging the severity of resource constrained mobile devices by migrating some computing load to nearby resource-rich surrogates (e.g. desktop PCs, servers) on home networks or their extension. This paper proposes a light-weight and efficient offloading middleware, which provides runtime offloading services for resource constrained mobile devices. The middleware considers multiple types of resources (i.e. memory, CPU and bandwidth) and carries out application partitioning and partition offloading in an adaptive and efficient manner. The corresponding algorithms are presented. The evaluation outcomes indicate the effectiveness and efficiency of this service offloading solution.},
	Author = {Ou, Shumao and Yang, Kun and Zhang, Jie},
	Date-Added = {2019-05-22 10:35:57 +0100},
	Date-Modified = {2020-10-13 11:13:09 +0100},
	Doi = {10.1016/j.pmcj.2007.04.004},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {Middleware; Pervasive services; Offloading; Mobile devices; Resource constraint; Partitioning},
	Number = {4},
	Pages = {362--385},
	Publisher = {Elsevier BV},
	Title = {An effective offloading middleware for pervasive services on mobile devices},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2007.04.004},
	Volume = {3},
	Year = {2007},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2007.04.004}}

@article{Pham:2009,
	Abstract = {We present a middleware platform for assembling pervasive applications that demand fault-tolerance and adaptivity in distributed, dynamic environments. Unlike typical adaptive middleware approaches, in which sophisticated component model semantics are embedded into an existing, underlying platform (e.g., CORBA, COM, EJB), we propose a platform that imposes minimal constraints for greater flexibility. Such a tradeoff is advantageous when the platform is targeted by automatic code generators that inherently enforce correctness by construction.

Applications are written as simple, single-threaded programs that assemble and monitor a set of distributed components. The approach decomposes applications into two distinct layers: (1) a distributed network of interconnected modules performing computations, and (2) constructor logic that assembles that network via a simple block-diagram construction API. The constructor logic subsequently monitors the configured system via a stream of high-level events, such as notifications of resource availability or failures, and consequently provides a convenient, centralized location for reconfiguration and debugging. The component network is optimized for performance, while the construction API is optimized for ease of assembly. Microbenchmarks indicate that our runtime incurs minimal overhead.

In addition to describing the programming model, platform implementation, and a variety of pervasive applications built using our system, this paper also extends our previous work with a thorough analysis of remote objects and tracking techniques, new contributions in distributed component liveness-monitoring approaches, and expanded microbenchmarks.},
	Author = {Pham, Hubert and Paluska, Justin Mazzola and Saif, Umar and Stawarz, Chris and Terman, Chris and Ward, Steve},
	Date-Added = {2019-05-22 10:35:18 +0100},
	Date-Modified = {2020-10-13 10:51:34 +0100},
	Doi = {10.1016/j.pmcj.2009.07.003},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {Middleware platform; Adaptive/Dynamic applications; Block-diagram application construction; Distributed processing; Fault tolerance},
	Number = {6},
	Pages = {676--696},
	Publisher = {Elsevier BV},
	Title = {A dynamic platform for run-time adaptation},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2009.07.003},
	Volume = {5},
	Year = {2009},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2009.07.003}}

@article{VanSyckel:2014,
	Abstract = {Pervasive applications are designed to support users in their daily lives. In order to provide their services, these applications interact with the environment, i.e., their context. They either adapt themselves as a reaction to context changes, or adapt the context via actuators according to their needs. If multiple applications are executed in the same context, interferences are likely to occur. In this paper, we present COMITY---a framework for interference management in multi-platform pervasive systems. Based on contracts specifying an application's interaction with the context, the framework automatically detects interferences and resolves them through a coordinated application adaptation.},
	Author = {VanSyckel, Sebastian and Sch{\"a}fer, Dominik and Majuntke, Verena and Krupitzer, Christian and Schiele, Gregor and Becker, Christian},
	Date-Added = {2019-05-22 10:34:27 +0100},
	Date-Modified = {2020-10-14 21:33:41 +0100},
	Doi = {10.1016/j.pmcj.2013.10.006},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {Application coordination; Interference detection and resolution; Context-aware computing; Pervasive environments},
	Pages = {51--65},
	Publisher = {Elsevier BV},
	Title = {COMITY: A framework for adaptation coordination in multi-platform pervasive systems},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2013.10.006},
	Volume = {10},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2013.10.006}}

@article{Gopalan:2010,
	Abstract = {Realizing the potential of pervasive computing will be predicated upon the availability of a flexible, mobility-aware infrastructure and technologies to support seamless service management, provisioning and delivery. Despite advances in routing and media access control technologies, little progress has been made towards large-scale deployment of services and applications in pervasive and ubiquitous environments. The lack of a fixed infrastructure, coupled with the time-varying characteristics of the underlying network topology, makes service delivery challenging. This paper addresses these challenges and presents SARA, a unified, overlay-based service architecture to support large-scale service and application deployment in pervasive and ubiquitous environments. We discuss the main functionalities of SARA and present the algorithms for object registration and discovery. SARA also considers the mobility of the nodes in the network and provides a mechanism by which this can be incorporated into the framework. Finally, the proposed architecture was evaluated using simulations and the results show that the architecture performs well under different network conditions.},
	Author = {Gopalan, Anandha and Znati, Taieb},
	Date-Added = {2019-05-22 10:33:56 +0100},
	Date-Modified = {2020-10-14 20:30:44 +0100},
	Doi = {10.1016/j.pmcj.2009.04.004},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {Ubiquitous computing; Pervasive computing; Service architecture; Service registration; Service discovery; Location-based forwarding},
	Number = {1},
	Pages = {1--20},
	Publisher = {Elsevier BV},
	Title = {SARA: A service architecture for resource aware ubiquitous environments},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2009.04.004},
	Volume = {6},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2009.04.004}}

@article{Xue:2013,
	Abstract = {Context-aware computing is an exciting paradigm in which applications perceive and react to changing environments in an unattended manner. To enable behavioral adaptation, a context-aware application must dynamically acquire context data from different operating spaces in the real world, such as homes, shops and persons. Motivated by the sheer number and diversity of operating spaces, we propose a scalable context data management system in this paper to facilitate data acquisition from these spaces. In our system, we design a gateway framework for all operating spaces and develop matching algorithms to integrate the local context schemas of operating spaces into a global set of domain schemas upon which SQL-based context queries can be issued from applications. The system organizes the operating space gateways as peers in semantic overlay networks and employs distributed query processing techniques over these overlays. Evaluation results on a prototype implementation demonstrate the effectiveness of our system design.},
	Author = {Xue, Wenwei and Pung, Hung Keng and Sen, Shubhabrata},
	Date-Added = {2019-05-22 10:33:21 +0100},
	Date-Modified = {2020-10-14 20:55:49 +0100},
	Doi = {10.1016/j.pmcj.2011.11.001},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {Context-aware computing; Context data management; Operating spaces; Context domains; Schema matching; Query processing; Peer-to-peer},
	Number = {1},
	Pages = {57--75},
	Publisher = {Elsevier BV},
	Title = {Managing context data for diverse operating spaces},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2011.11.001},
	Volume = {9},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2011.11.001}}

@article{Arnaboldi:2014,
	Abstract = {Mobile systems are characterized by several dynamic components such as user mobility, device interoperability, and interactions among users and their devices. In this scenario, context-awareness and the emerging concept of social-awareness become a fundamental requirement to develop optimized systems and applications. In this paper we present CAMEO, a light-weight context-aware middleware platform for mobile devices designed to support the development of real-time mobile social network (MSN) applications. MSNs extend the paradigm of online social networks with additional interaction opportunities generated by user mobility and opportunistic wireless communications among users which share interests, habits, and needs. Specifically, CAMEO is designed to collect and reason upon multidimensional context information, derived by the local device, the local user, and their physical interactions with other devices and users. It provides a common application programming interface to MSN applications through which they can exploit context- and social-aware functionalities to optimize their features. CAMEO has been implemented on an Android platform together with a real example of an MSN application. Validation and performance evaluation have been conducted through an experimental testbed.},
	Author = {Arnaboldi, Valerio and Conti, Marco and Delmastro, Franca},
	Date-Added = {2019-05-22 10:32:28 +0100},
	Date-Modified = {2020-10-13 11:25:02 +0100},
	Doi = {10.1016/j.pmcj.2013.09.010},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {Mobile social networks; Middleware; Context-aware; Social-aware; Opportunistic networks},
	Pages = {148--167},
	Publisher = {Elsevier BV},
	Title = {CAMEO: A novel context-aware middleware for opportunistic mobile social networks},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2013.09.010},
	Volume = {11},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2013.09.010}}

@article{Hengfeng_Wei:2012,
	Abstract = {Formal specification and runtime detection of temporal properties for pervasive context is one of the primary approaches to achieving context-awareness. Though temporal logics have been widely used in specification of temporal properties, they are faced with severe challenges in Pervasive Computing (PvC) scenarios. First, temporal logics are traditionally defined over infinite traces of possible system behavior. However in PvC scenarios, applications observe finite prefixes of (potentially infinite) traces of environment state evolution, and adapt their behavior accordingly. Second, specification and detection of temporal properties are challenged by the intrinsic asynchrony of PvC environments. Discussions above necessitate a systematic approach to formal specification and runtime detection of temporal properties for asynchronous context. To this end, we propose CTL 3 (3-valued Computation Tree Logic), which i) adopts 3-valued semantics to capture the inconclusiveness when applications only observe finite prefixes of environment state evolution; ii) inherits the notion of branching time to capture the uncertainty resulting from the asynchrony of PvC environments. A case study is conducted to demonstrate how CTL 3 supports context-awareness in PvC scenarios. The runtime checking algorithm of CTL 3 is implemented and evaluated over MIPA - the open-source context-aware middle-ware we developed. The case study demonstrates the necessity of adopting CTL 3 in PvC scenarios, while the performance measurements show the cost-effectiveness of runtime checking contextual properties in CTL 3.},
	Author = {Hengfeng Wei and Huang, Yu and Cao, Jiannong and Ma, Xiaoxing and Lu, Jian},
	Date-Added = {2019-05-22 10:31:53 +0100},
	Date-Modified = {2020-10-24 19:53:45 +0100},
	Doi = {10.1109/percom.2012.6199846},
	Isbn = {9781467302579},
	Journal = {2012 IEEE International Conference on Pervasive Computing and Communications},
	Keywords = {contextual property; 3-valued semantics; branching time},
	Pages = {30-38},
	Publisher = {IEEE},
	Title = {Formal specification and runtime detection of temporal properties for asynchronous context},
	Url = {http://dx.doi.org/10.1109/PerCom.2012.6199846},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/PerCom.2012.6199846},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/percom.2012.6199846}}

@article{Pallapa:2014,
	Abstract = {In a pervasive system, users have very dynamic and rich interactions with the environment and its elements, including other users. To efficiently support users in such environments, a high-level representation of the system, called the context, is usually exploited. However, since pervasive environments are inherently people-centric, context might consist of sensitive information. As a consequence, privacy concerns arise, especially in terms of how to control information disclosure to other users and third parties. In this article, we propose context-aware approaches to privacy preservation in wireless and mobile pervasive environments. Specifically, we design two schemes: (i) to reduce the number of interactions between the user and the system; and (ii) to exploit the interactions between different users. Both solutions are adaptive and, thus, suitable for dynamic scenarios. In addition, our schemes require limited computational and storage resources. As a consequence, they can be easily implemented on resource-constrained personal communication and sensing devices. We apply our solutions to a smart workplace scenario and show that our schemes protect user privacy while significantly reducing the interactions with the system, thus improving the user experience.},
	Author = {Pallapa, Gautham and Das, Sajal K. and Di Francesco, Mario and Aura, Tuomas},
	Date-Added = {2019-05-22 10:31:16 +0100},
	Date-Modified = {2020-10-13 11:01:13 +0100},
	Doi = {10.1016/j.pmcj.2013.12.004},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {Pervasive systems; Context awareness; Privacy preservation; User interactions; Smart environments},
	Pages = {232--243},
	Publisher = {Elsevier BV},
	Title = {Adaptive and context-aware privacy preservation exploiting user interactions in smart environments},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2013.12.004},
	Volume = {12},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2013.12.004}}

@article{Achilleos:2010,
	Abstract = {Pervasive service creation entails a complex process that involves a diversity of development aspects. Context-awareness is an important facet of pervasive service creation, which deals with the acquisition, rendering, representation and utilisation of context information. In this paper we tackle context-awareness at the application level dealing with the representation and utilisation of context by services. We propose a model-driven approach that facilitates the creation of a context modelling framework and simplifies the design and implementation of pervasive services. To conclude, we demonstrate the benefits of our model-driven approach via the creation of a pervasive museum service and its evaluation using selected software metrics.},
	Author = {Achilleos, Achilleas and Yang, Kun and Georgalas, Nektarios},
	Date-Added = {2019-05-22 10:30:27 +0100},
	Date-Modified = {2020-10-14 21:27:29 +0100},
	Doi = {10.1016/j.pmcj.2009.07.014},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {Pervasive service creation; Context-aware framework; Context modelling; Model-driven development; Domain specific modelling},
	Number = {2},
	Pages = {281--296},
	Publisher = {Elsevier BV},
	Title = {Context modelling and a context-aware framework for pervasive service creation: A model-driven approach},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2009.07.014},
	Volume = {6},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2009.07.014}}

@article{O_Neill:2013,
	Abstract = {A challenge for designing pervasive computing systems, particularly for indoor sensor-rich environments, is the complexity of causal relationships between contextual inputs, exhibited system behaviour, and overall appropriateness of resulting outcomes. Two key challenges faced by designers when testing these systems lie in the difficulty of monitoring the deployment environment for inappropriate outcomes and subsequently tracing the physical and digital causal factors leading to specific situations. This paper presents InSitu, a situation-based testing approach that applies generalised situation specifications to a global representation of simulated environment state to detect instances of specified situations. An access control case study demonstrates the modelling capabilities of InSitu and notes the importance of the overlap, exclusivity, and subsumption relationships between situation specifications in order to achieve informative results.},
	Author = {O'Neill, Eleanor and Conlan, Owen and Lewis, David},
	Date-Added = {2019-05-22 10:29:49 +0100},
	Date-Modified = {2020-10-14 20:26:03 +0100},
	Doi = {10.1016/j.pmcj.2011.12.002},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {Pervasive computing systems; Pervasive environments; Ubiquitous computing; Sensor-driven systems; Physical--digital divide; Testing approaches; System design; Simulation-based test beds},
	Number = {1},
	Pages = {76--97},
	Publisher = {Elsevier BV},
	Title = {Situation-based testing for pervasive computing environments},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2011.12.002},
	Volume = {9},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2011.12.002}}

@article{McGlinn:2014,
	Abstract = {Smart Building Applications (SBAs) adapt their behaviour in response to context information generated by sensors present in the smart building. SBA developers must account for uncertainty in the accuracy of context information resulting from imperfection in the sensing technology and potentially complex interactions between the sensed phenomenon, the sensor and the physical environment. To address this challenge, context simulators which generate simulated context information have been developed. A number of key challenges must be addressed before such a simulation-based SBA prototyping approach can become widely used. First, any context simulator must be flexible in its approach to simulating context so that it supports evaluating different mixes of SBAs using a selection of methods most suitable to the evaluation task at hand. Second, the context simulator must support simulating uncertainty in context as uncertainty can cause an SBA to function incorrectly. Finally, the process of setting up a simulation should be efficient in use, satisfying to the developer and also, be effective in correctly evaluating the SBA behaviour. This paper presents the SimCon model which addresses these challenges by supporting simulation of context, in particular location context, with configurable levels of uncertainty for evaluating SBAs using visualisation. The SimCon model has been implemented in a simulation, configuration and visualisation tool set which has undergone a number of evaluations with SBA developers to determine and improve its level of usability, the most recent of which is presented here.},
	Author = {McGlinn, Kris and Hederman, Lucy and Lewis, Dave},
	Date-Added = {2019-05-22 10:29:16 +0100},
	Date-Modified = {2020-10-14 20:26:49 +0100},
	Doi = {10.1016/j.pmcj.2013.02.003},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {Context simulation; Uncertainty in context; Smart building application evaluation; Usability evaluation},
	Pages = {139--159},
	Publisher = {Elsevier BV},
	Title = {SimCon: A context simulator for supporting evaluation of smart building applications when faced with uncertainty},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2013.02.003},
	Volume = {12},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2013.02.003}}

@article{Serral:2010,
	Abstract = {In this work, we introduce a Model Driven Development method for developing context-aware pervasive systems. This method allows us to specify a context-aware pervasive system at a high level of abstraction by means of a set of models, which describes both the system functionality and the context information. From these models, an automated code generation strategy is applied. This strategy allows us to generate the system Java code that provides the system functionality and as well as an OWL specification that represents the context information and allows us to manage this information without additional burden. Furthermore, this specification is used by a reasoner at runtime to infer context knowledge that is not directly observable, and it is also used by machine learning algorithms to give support to the system adaptation according to the context information.},
	Author = {Serral, Estefan{\'\i}a and Valderas, Pedro and Pelechano, Vicente},
	Date-Added = {2019-05-22 10:28:23 +0100},
	Date-Modified = {2020-10-14 19:52:29 +0100},
	Doi = {10.1016/j.pmcj.2009.07.006},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {MDD; Pervasive systems; Context-aware; Ontology; OWL},
	Number = {2},
	Pages = {254--280},
	Publisher = {Elsevier BV},
	Title = {Towards the Model Driven Development of context-aware pervasive systems},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2009.07.006},
	Volume = {6},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2009.07.006}}

@article{Wei:2013,
	Abstract = {At present, in most context-aware systems, decisions on when and how to adapt an application are made a priori by developers during the compile time. While such approaches empower developers with sufficient flexibility to specify what they want in terms of adaptation rules, they inevitably place an immense load on developers, especially in an extremely dynamic environment, to anticipate and formulate all potential run-time situations during development time. These challenges motivated us to explore an approach to automating context-aware adaptation decisions by a middleware layer at run time. The resulting middleware, CAMPUS, exploits technologies from semantic computing to dynamically derive adaptation decisions according to run-time contextual information. The CAMPUS implementation has been evaluated with a number of case applications to validate the operation of the system in a realistic environment and to provide us with an opportunity to obtain experimental results for further analysis. The results are significant in that they show that CAMPUS can effectively free developers from the need to predict, formulate, and maintain adaptation rules, thereby greatly reducing the efforts required to develop context-aware applications.},
	Author = {Wei, Edwin J.Y. and Chan, Alvin T.S.},
	Date-Added = {2019-05-22 10:27:44 +0100},
	Date-Modified = {2020-10-13 11:26:03 +0100},
	Doi = {10.1016/j.pmcj.2011.10.002},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {Context-awareness; Decision support; Middleware; Ontology design; Software architecture; Support for adaptation},
	Number = {1},
	Pages = {35--56},
	Publisher = {Elsevier BV},
	Title = {CAMPUS: A middleware for automated context-aware adaptation decision making at run time},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2011.10.002},
	Volume = {9},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2011.10.002}}

@article{Aitenbichler:2007,
	Abstract = {MundoCore is a communication middleware specifically designed for the requirements of pervasive computing. To address the high degree of heterogeneity of platforms and networking technologies, it is based on a microkernel design, supports dynamic reconfiguration, and provides a common set of APIs for different programming languages (Java, C++, Python) on a wide range of different devices. The architectural model addresses the need for proper language bindings, different communication abstractions, peer-to-peer overlays, different transport protocols, different invocation protocols, and automatic peer discovery.},
	Author = {Aitenbichler, Erwin and Kangasharju, Jussi and M{\"u}hlh{\"a}user, Max},
	Date-Added = {2019-05-22 10:27:09 +0100},
	Date-Modified = {2020-10-14 20:50:20 +0100},
	Doi = {10.1016/j.pmcj.2007.04.002},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {Communication middleware; Protocol heap; Spontaneous networking; Publish/subscribe},
	Number = {4},
	Pages = {332--361},
	Publisher = {Elsevier BV},
	Title = {MundoCore: A light-weight infrastructure for pervasive computing},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2007.04.002},
	Volume = {3},
	Year = {2007},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2007.04.002}}

@article{Henricksen:2006,
	Abstract = {There is growing interest in the use of context-awareness as a technique for developing pervasive computing applications that are flexible, adaptable, and capable of acting autonomously on behalf of users. However, context-awareness introduces a variety of software engineering challenges. In this paper, we address these challenges by proposing a set of conceptual models designed to support the software engineering process, including context modelling techniques, a preference model for representing context-dependent requirements, and two programming models. We also present a software infrastructure and software engineering process that can be used in conjunction with our models. Finally, we discuss a case study that demonstrates the strengths of our models and software engineering approach with respect to a set of software quality metrics.},
	Author = {Henricksen, Karen and Indulska, Jadwiga},
	Date-Added = {2019-05-22 10:25:43 +0100},
	Date-Modified = {2020-10-14 21:16:57 +0100},
	Doi = {10.1016/j.pmcj.2005.07.003},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {Context-aware applications; Software engineering; Pervasive computing; infrastructure; Context modelling},
	Number = {1},
	Pages = {37--64},
	Publisher = {Elsevier BV},
	Title = {Developing context-aware pervasive computing applications: Models and approach},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2005.07.003},
	Volume = {2},
	Year = {2006},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2005.07.003}}

@article{Munnelly:2007,
	Abstract = {Handling context is required for applications to dynamically and appropriately adapt to their changing environment. Incorporating context into applications involves the consideration of a set of concerns related to the handling of various context types and the adaptation of the application behaviour relative to the current context. These concerns are usually heavily tangled with the base code of the applications, resulting in code that is badly modularised and therefore is hard to understand, manage and modify. We propose a modularised design for the handling of different kinds of context using aspect-oriented programming techniques. We demonstrate that a context-aware application built in this manner exhibits improved modularity, with corresponding improvements in comprehensibility, manageability and maintainability. The proposed aspect-oriented modularisation is evaluated against traditional object-oriented techniques, and also against a popular context framework, using metrics indicating coupling, cohesion and complexity. The results show the positive effect of modular code on context-aware applications by quantitatively illustrating the improvements in modularisation quality factors},
	Author = {Munnelly, Jennifer and Fritsch, Serena and Clarke, Siobhan},
	Date-Added = {2019-05-22 10:25:06 +0100},
	Date-Modified = {2020-10-24 19:50:27 +0100},
	Doi = {10.1109/percom.2007.7},
	Isbn = {0769527876},
	Journal = {Fifth Annual IEEE International Conference on Pervasive Computing and Communications (PerCom'07)},
	Pages = {114-124},
	Publisher = {IEEE},
	Title = {An Aspect-Oriented Approach to the Modularisation of Context},
	Url = {http://dx.doi.org/10.1109/PERCOM.2007.7},
	Year = {2007},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/PERCOM.2007.7},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/percom.2007.7}}

@article{Ballesteros:2006,
	Abstract = {The conventional approach for building pervasive environments relies on middleware to integrate different systems. Instead, we have built a system that can deal with these environments by exporting system resources through distributed virtual file systems. This requires no middleware, simplifies interoperation, and permits applying general purpose tools to any system resource. A constraint-based file system import mechanism allows the system to adapt to changes in the environment and permits users to customize the environment and tailor adaptation according to their needs. The system has been in use for over a year to carry out our daily work and is underlying the smart space that we built for our department.},
	Author = {Ballesteros, F.J. and Soriano, E. and Leal, K. and Guardiola, G.},
	Date-Added = {2019-05-22 10:23:40 +0100},
	Date-Modified = {2020-10-24 19:56:46 +0100},
	Doi = {10.1109/percom.2006.43},
	Isbn = {0769525180},
	Journal = {Fourth Annual IEEE International Conference on Pervasive Computing and Communications (PERCOM'06)},
	Pages = {10},
	Publisher = {IEEE},
	Title = {Plan B: An Operating System for Ubiquitous Computing Environments},
	Url = {http://dx.doi.org/10.1109/PERCOM.2006.43},
	Year = {2006},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/PERCOM.2006.43},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/percom.2006.43}}

@article{Hu:2008,
	Abstract = {Context-aware applications adapt to changing computing environments or changing user circumstances/tasks. Context information that supports such adaptations is provided by the underlying infrastructure, which gathers, pre-processes and provisions context information from a variety of context information sources. Such an infrastructure is prone to failures and disconnections that negatively impact on the ability of context-aware applications to adapt (and therefore dramatically impact on their usability). This paper describes a model-based autonomic context management system (ACoMS) that can dynamically configure and reconfigure its context information gathering and pre-processing functionality in order to provide fault tolerant provisioning of context information. The approach uses standards based descriptions of context information sources to increase openness, interoperability and scalability of context-aware systems.},
	Author = {Hu, Peizhao and Indulska, Jadwiga and Robinson, Ricky},
	Date-Added = {2019-05-22 10:22:44 +0100},
	Date-Modified = {2020-10-24 19:50:47 +0100},
	Doi = {10.1109/percom.2008.56},
	Isbn = {9780769531137},
	Journal = {2008 Sixth Annual IEEE International Conference on Pervasive Computing and Communications (PerCom)},
	Keywords = {Context Management System; Context Manager; Autonomic System; Pervasive Computing},
	Pages = {213-223},
	Publisher = {IEEE},
	Title = {An Autonomic Context Management System for Pervasive Computing},
	Url = {http://dx.doi.org/10.1109/PERCOM.2008.56},
	Year = {2008},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/PERCOM.2008.56},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/percom.2008.56}}

@article{Chenhua_Chen:2011,
	Abstract = {Context-aware applications automatically adapt their behavior according to environmental conditions, also known as contexts. However, in practice contexts are often inaccurate, noisy or even inconsistent (e.g., two RFID readers may report different numbers for the same set of goods processed). These kinds of problematic contexts may cause context-aware applications to behave abnormally or even fail. It is thus desirable to detect and resolve context inconsistency. In this paper, we propose a hybrid approach to detect problematic contexts and resolve resulting context inconsistencies with the help of context-aware application semantics. By combining low-level context inconsistency resolution with high-level application error recovery, our approach can resolve the inconsistent contexts more effectively. Moreover, error recovery cost for context-aware applications is reduced. Our experimental results show that our approach outperforms existing approaches in terms of more accurate inconsistency resolution and less error recovery cost.},
	Author = {Chenhua Chen and Ye, Chunyang and Jacobsen, Hans-Arno},
	Date-Added = {2019-05-22 10:21:41 +0100},
	Date-Modified = {2020-10-24 19:54:06 +0100},
	Doi = {10.1109/percom.2011.5767574},
	Isbn = {9781424495290},
	Journal = {2011 IEEE International Conference on Pervasive Computing and Communications (PerCom)},
	Keywords = {Context-awareness; Inconsistency Resolution; Error Recovery},
	Pages = {10-19},
	Publisher = {IEEE},
	Title = {Hybrid context inconsistency resolution for context-aware services},
	Url = {http://dx.doi.org/10.1109/PERCOM.2011.5767574},
	Year = {2011},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/PERCOM.2011.5767574},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/percom.2011.5767574}}

@inproceedings{Becker:2003,
	Abstract = {Pervasive computing environments add a multitude of additional devices to our current computing landscapes. Specialized embedded systems provide sensor information about the real world or offer a distinct functionality, e.g. presentation on a smart wall. Spontaneous networking leads to constantly changing availability of services. This requires middleware support to ease application development. Additionally, we argue that an extensible middleware platform covering small embedded systems to fill-fledged desktop computers is needed. Such a middleware should provide easy-to-use abstractions to access remote services and device-specific capabilities. We present a micro-broker-based approach which meets these requirements by allowing uniform access to device capabilities and services through proxies and the integration of different interoperability protocols. A minimum configuration of the middleware can be executed on embedded systems. Resource-rich execution environments are supported by the extensibility of the middleware.},
	Author = {C. {Becker} and G. {Schiele} and H. {Gubbels} and K. {Rothermel}},
	Booktitle = {Proceedings of the First IEEE International Conference on Pervasive Computing and Communications, 2003. (PerCom 2003).},
	Date-Added = {2019-05-22 10:20:27 +0100},
	Date-Modified = {2020-10-14 21:37:48 +0100},
	Doi = {10.1109/PERCOM.2003.1192769},
	Pages = {443-451},
	Title = {BASE - a micro-broker-based middleware for pervasive computing},
	Year = {2003},
	Bdsk-Url-1 = {https://doi.org/10.1109/PERCOM.2003.1192769}}

@inproceedings{Mamei:2004,
	Abstract = {Pervasive computing calls for suitable middleware and programming models to deal with large software systems dived in dynamic mobile network environments. Here we present the programming model of TOTA ("tuples on the air"), a middleware for supporting adaptive context-aware activities in pervasive computing scenarios. The key idea in TOTA is to rely on spatially distributed tuples, propagated across a network on the basis of application-specific rules, for both representing contextual information and supporting uncoupled interactions between application components. As shown with the help of a case study scenario, TOTA promotes a simple programming model and can effectively facilitate access to distributed information, navigation in complex networks, and achievement of complex coordination tasks in a fully distributed and adaptive way.},
	Author = {M. {Mamei} and F. {Zambonelli}},
	Booktitle = {Proceedings of the Second IEEE Annual Conference on Pervasive Computing and Communications, 2004.},
	Date-Added = {2019-05-22 10:18:49 +0100},
	Date-Modified = {2020-10-14 20:37:12 +0100},
	Doi = {10.1109/PERCOM.2004.1276864},
	Keywords = {middleware;mobile computing;programming;adaptive systems;pervasive computing programming;mobile computing programming;TOTA middleware;programming models;software systems;dynamic mobile network;adaptive context-aware activities;spatially distributed tuples;application-specific rules;contextual information representation;uncoupled interactions support;application components;distributed information;complex networks navigation;complex coordination tasks;Mobile computing;Computer applications;Pervasive computing;Middleware;Dynamic programming;Application software;Software systems;Context modeling;Navigation;Complex networks},
	Pages = {263-273},
	Title = {Programming pervasive and mobile computing applications with the TOTA middleware},
	Year = {2004},
	Bdsk-Url-1 = {https://doi.org/10.1109/PERCOM.2004.1276864}}

@inproceedings{Becker:2004,
	Abstract = {Applications in the pervasive computing domain are challenged by the dynamism in which their execution environment changes, e.g. due to user mobility. As a result, applications have to adapt to changes regarding their required resources. In this paper we present PCOM, a component system for pervasive computing. PCOM offers application programmers a high-level programming abstraction which captures the dependencies between components using contracts. The resulting application architecture is a tree formed by components and their dependencies. PCOM supports automatic adaptation in cases where the execution environment changes to the better or to the worse. User supplied as well as system provided strategies take users out of the control loop while offering flexible adaptation control.},
	Author = {C. {Becker} and M. {Handte} and G. {Schiele} and K. {Rothermel}},
	Booktitle = {Second IEEE Annual Conference on Pervasive Computing and Communications, 2004. Proceedings of the},
	Date-Added = {2019-05-22 10:16:37 +0100},
	Date-Modified = {2020-10-14 20:45:19 +0100},
	Doi = {10.1109/PERCOM.2004.1276846},
	Keywords = {ubiquitous computing;middleware;object-oriented programming;PCOM;component system;pervasive computing;user mobility;high-level programming abstraction;automatic adaptation;execution environment;flexible adaptation control;user supplied strategies;system provided strategies;Pervasive computing;Communication system control;Application software;Contracts;Automatic control;Control systems;Sensor phenomena and characterization;Communications technology;Programming profession;Computer architecture},
	Pages = {67-76},
	Title = {PCOM - a component system for pervasive computing},
	Year = {2004},
	Bdsk-Url-1 = {https://doi.org/10.1109/PERCOM.2004.1276846}}

@article{Payton:2010,
	Abstract = {Queries are convenient abstractions for the discovery of information and services, as they offer content-based information access. In distributed settings, query semantics are well-defined, for example, queries are often designed to satisfy ACID transactional properties. When query processing is introduced in a dynamic network setting, achieving transactional semantics becomes complex due to the open and unpredictable environment. In this article, we propose a query processing model for mobile ad hoc and sensor networks that is suitable for expressing a wide range of query semantics; the semantics differ in the degree of consistency with which query results reflect the state of the environment during query execution. We introduce several distinct notions of consistency and formally express them in our model. A practical and significant contribution of this article is a protocol for query processing that automatically assesses and adaptively provides an achievable degree of consistency given the operational environment throughout its execution. The protocol attaches an assessment of the achieved guarantee to returned query results, allowing precise reasoning about a query with a range of possible semantics. We evaluate the performance of this protocol and demonstrate the benefits accrued to applications through examples drawn from an industrial application.},
	Author = {Payton, Jamie and Julien, Christine and Roman, Gruia-Catalin and Rajamani, Vasanth},
	Date-Added = {2019-05-22 10:14:09 +0100},
	Date-Modified = {2020-10-14 20:28:41 +0100},
	Doi = {10.1145/1734229.1734231},
	Issn = {1049-331X},
	Journal = {ACM Transactions on Software Engineering and Methodology},
	Keywords = {Query processing; mobile computing; consistency},
	Number = {4},
	Pages = {1--33},
	Publisher = {Association for Computing Machinery (ACM)},
	Title = {Semantic self-assessment of query results in dynamic environments},
	Url = {http://dx.doi.org/10.1145/1734229.1734231},
	Volume = {19},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/1734229.1734231}}

@article{Morris:2015,
	Abstract = {Context
As the use of Domain-Specific Modeling Languages (DSMLs) continues to gain popularity, we have developed new ways to execute DSML models. The most popular approach is to execute code resulting from a model-to-code transformation. An alternative approach is to directly execute these models using a semantic-rich execution engine -- Domain-Specific Virtual Machine (DSVM). The DSVM includes a middleware layer responsible for the delivery of services in a given domain.

Objective
We will investigate an approach that performs the dynamic combination of constructs in the middleware layer of DSVMs to support the delivery of domain-specific services. This middleware should provide: (a) a model of execution (MoE) that dynamically integrates decoupled domain-specific knowledge (DSK) for service delivery, (b) runtime adaptability based on context and available resources, and (c) the same level of operational assurance as any DSVM middleware.

Method
Our approach will involve (1) defining a framework that supports the dynamic combination of MoE and DSK and (2) demonstrating the applicability of our framework in the DSVM middleware for user-centric communication. We will measure the overhead of our approach and provide a cost-benefit analysis factoring in its runtime adaptability using appropriate experimentation.

Results
Our experiments show that combining the DSK and MoE for a DSVM middleware allow us to realize efficient specialization while maintaining the required operability. We also show that the overhead introduced by adaptation is not necessarily deleterious to overall performance in a domain as it may result in more efficient operation selection.

Conclusion
The approach defined for the DSVM middleware allows for greater flexibility in service delivery while reducing the complexity of application development for the user. These benefits are achieved at the expense of increased execution times, however this increase may be negligible depending on the domain.},
	Author = {Morris, Karl A. and Allison, Mark and Costa, F{\'a}bio M. and Wei, Jinpeng and Clarke, Peter J.},
	Date-Added = {2019-05-22 10:13:16 +0100},
	Date-Modified = {2020-10-13 11:07:00 +0100},
	Doi = {10.1016/j.infsof.2015.02.003},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Models at runtime; Adaptable middleware; Domain independence; Domain specific classifier},
	Pages = {21--41},
	Publisher = {Elsevier BV},
	Title = {An adaptive middleware design to support the dynamic interpretation of domain-specific models},
	Url = {http://dx.doi.org/10.1016/j.infsof.2015.02.003},
	Volume = {62},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.infsof.2015.02.003}}

@article{Xu:2005,
	Abstract = {Context-awareness is a key feature of pervasive computing whose environments keep evolving. The support of context-awareness requires comprehensive management including detection and resolution of context inconsistency, which occurs naturally in pervasive computing. In this paper we present a framework for realizing dynamic context consistency management. The framework supports inconsistency detection based on a semantic matching and inconsistency triggering model, and inconsistency resolution with proactive actions to context sources. We further present an implementation based on the Cabot middleware. The feasibility of the framework and its performance are evaluated through a case study and a simulated experiment, respectively.},
	Author = {Xu, Chang and Cheung, S. C.},
	Date-Added = {2019-05-22 10:12:31 +0100},
	Date-Modified = {2020-10-24 19:54:34 +0100},
	Doi = {10.1145/1095430.1081759},
	Issn = {0163-5948},
	Journal = {ACM SIGSOFT Software Engineering Notes},
	Keywords = {proactive repairing; context consistency management; semantic matching; context modeling; pervasive computing},
	Number = {5},
	Pages = {10},
	Publisher = {Association for Computing Machinery (ACM)},
	Title = {Inconsistency detection and resolution for context-aware middleware support},
	Url = {http://dx.doi.org/10.1145/1095430.1081759},
	Volume = {30},
	Year = {2005},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/1095430.1081759}}

@article{Malek:2005,
	Abstract = {A recent emergence of small, resource-constrained, and highly mobile computing platforms presents numerous new challenges for software developers. We refer to development in this new setting as programming-in-the-small-and-many (Prism). This paper provides a description and evaluation of Prism-MW, a middleware platform intended to support software architecture-based development in the Prism setting. Prism-MW provides efficient and scalable implementation-level support for the key aspects of Prism application architectures, including their architectural styles. Additionally, Prism-MW is extensible to support different application requirements suitable for the Prism setting. Prism-MW has been applied in a number of applications and used as an educational tool in graduate-level software architecture and embedded systems courses. Recently, Prism-MW has been successfully evaluated by a major industrial organization for use in one of their key distributed embedded systems. Our experience with the middleware indicates that the principles of architecture-based software development can be successfully, and flexibly, applied in the Prism setting.},
	Author = {Malek, S. and Mikic-Rakic, M. and Medvidovic, N.},
	Date-Added = {2019-05-22 10:11:53 +0100},
	Date-Modified = {2020-10-13 10:59:27 +0100},
	Doi = {10.1109/tse.2005.29},
	Issn = {0098-5589},
	Journal = {IEEE Transactions on Software Engineering},
	Keywords = {Software architecture; architectural style; middleware; Prism-MW},
	Number = {3},
	Pages = {256--272},
	Publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
	Title = {A style-aware architectural middleware for resource-constrained, distributed systems},
	Url = {http://dx.doi.org/10.1109/TSE.2005.29},
	Volume = {31},
	Year = {2005},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/TSE.2005.29},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/tse.2005.29}}

@article{Esfahani:2011,
	Abstract = {Self-adaptation endows a software system with the ability to satisfy certain objectives by automatically modifying its behavior. While many promising approaches for the construction of self-adaptive software systems have been developed, the majority of them ignore the uncertainty underlying the adaptation decisions. This has been one of the key obstacles to wide-spread adoption of self-adaption techniques in risk-averse real-world settings. In this paper, we describe an approach, called POssIbilistic SElf-aDaptation (POISED), for tackling the challenge posed by uncertainty in making adaptation decisions. POISED builds on possibility theory to assess both the positive and negative consequences of uncertainty. It makes adaptation decisions that result in the best range of potential behavior. We demonstrate POISED's application to the problem of improving a software system's quality of service via runtime reconfiguration of its customizable software components. We have extensively evaluated POISED using a prototype of a robotic software system.},
	Author = {Esfahani, Naeem and Kouroshfar, Ehsan and Malek, Sam},
	Date-Added = {2019-05-22 10:11:14 +0100},
	Date-Modified = {2020-10-24 19:58:27 +0100},
	Doi = {10.1145/2025113.2025147},
	Isbn = {9781450304436},
	Journal = {Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering - SIGSOFT/FSE '11},
	Keywords = {software architecture; uncertainty; self-adaptation},
	Pages = {234--244},
	Publisher = {ACM Press},
	Title = {Taming uncertainty in self-adaptive software},
	Url = {http://dx.doi.org/10.1145/2025113.2025147},
	Year = {2011},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2025113.2025147}}

@article{Verbelen:2011,
	Abstract = {With the increasing popularity of smartphones and netbooks, more and more applications are developed for the mobile platform. Notwithstanding the recent advances in mobile hardware, most mobile devices still lack sufficient resources (e.g. CPU power and memory) to execute complex multimedia applications such as augmented reality. Application developers also have difficulties to cope with the changing device context (e.g. network connectivity and remaining battery life) and the many different hardware platforms and operating systems to run applications on. Therefore, we introduce the concept where the developer can provide different configurations of an application, each having different resource requirements and a different quality offered to the end user. The middleware framework presented in this paper will select and deploy the configuration offering the best quality possible for the current connectivity and available resources. As these change over time, the framework will dynamically adapt the configuration and deployment at runtime, enhancing the quality by offloading parts of the application when a remote server is discovered, or gracefully degrading the quality when the network connection is lost. Based on experimental results on the augmented reality use case the performance and effectiveness of our middleware has been characterized in different scenarios.},
	Author = {Verbelen, Tim and Stevens, Tim and Simoens, Pieter and De Turck, Filip and Dhoedt, Bart},
	Date-Added = {2019-05-22 10:10:41 +0100},
	Date-Modified = {2020-10-14 21:13:54 +0100},
	Doi = {10.1016/j.jss.2011.06.063},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Distributed systems; Cyber foraging; Deployment optimization; Mobile computing},
	Number = {11},
	Pages = {1871--1882},
	Publisher = {Elsevier BV},
	Title = {Dynamic deployment and quality adaptation for mobile augmented reality applications},
	Url = {http://dx.doi.org/10.1016/j.jss.2011.06.063},
	Volume = {84},
	Year = {2011},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.jss.2011.06.063}}

@article{Meier:2010,
	Abstract = {As mobile applications become more widespread, programming paradigms and middleware architectures designed to support their development are becoming increasingly important. The event-based programming paradigm is a strong candidate for the development of mobile applications due to its inherent support for the loose coupling between components required by mobile applications. However, existing middleware that supports the event-based programming paradigm is not well suited to supporting location-aware mobile applications in which highly mobile components come together dynamically to collaborate at some location. This paper presents a number of techniques including location-independent announcement and subscription coupled with location-dependent filtering and event delivery that can be used by event-based middleware to support such collaboration. We describe how these techniques have been implemented in STEAM, an event-based middleware with a fully decentralized architecture, which is particularly well suited to deployment in ad hoc network environments. The cost of such location-based event dissemination and the benefits of distributed event filtering are evaluated.},
	Author = {Meier, Rene and Cahill, Vinny},
	Date-Added = {2019-05-22 10:09:15 +0100},
	Date-Modified = {2020-10-14 20:49:02 +0100},
	Doi = {10.1109/tse.2009.90},
	Issn = {0098-5589},
	Journal = {IEEE Transactions on Software Engineering},
	Keywords = {Distributed systems; middleware; publish subscribe; event-based communication; mobile computing; collaborative and location-aware applications; wireless ad hoc networks},
	Number = {3},
	Pages = {409--430},
	Publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
	Title = {On Event-Based Middleware for Location-Aware Mobile Applications},
	Url = {http://dx.doi.org/10.1109/TSE.2009.90},
	Volume = {36},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/TSE.2009.90},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/tse.2009.90}}

@article{Murukannaiah:2015,
	Abstract = {We introduce a high-level abstraction of location called place. A place derives its meaning from a user's physical space, activities, or social context. In this manner, place can facilitate improved user experience compared to the traditional representation of location, which is spatial coordinates. We propose the Platys framework as a way to address the special challenges of place-aware application development. The core of Platys is a middleware that (1) learns a model of places specific to each user via active learning, a machine learning paradigm that seeks to reduce the user-effort required for training the middleware, and (2) exposes the learned user-specific model of places to applications at run time, insulating application developers from dealing with both low-level sensors and user idiosyncrasies in perceiving places.
We evaluated Platys via two studies. First, we collected place labels and Android phone sensor readings from 10 users. We applied Platys' active learning approach to learn each user's places and found that Platys (1) requires fewer place labels to learn a user's places with a desired accuracy than do two traditional supervised approaches, and (2) learns places with higher accuracy than two unsupervised approaches.
Second, we conducted a developer study to evaluate Platys' efficiency in assisting developers and its effectiveness in enabling usable applications. In this study, 46 developers employed either Platys or the Android location API to develop a place-aware application. Our results indicate that application developers employing Platys, when compared to those employing the Android API, (1) develop a place-aware application faster and perceive reduced difficulty and (2) produce applications that are easier to understand (for developers) and potentially more usable and privacy preserving (for application users).},
	Author = {Murukannaiah, Pradeep K. and Singh, Munindar P.},
	Date-Added = {2019-05-22 10:06:48 +0100},
	Date-Modified = {2020-10-14 20:43:11 +0100},
	Doi = {10.1145/2729976},
	Issn = {1049-331X},
	Journal = {ACM Transactions on Software Engineering and Methodology},
	Keywords = {semi-supervised learning; place-aware; usability; middleware; privacy; place recognition; context-aware; location-aware; active learning; Mobile application development},
	Number = {3},
	Pages = {1--32},
	Publisher = {Association for Computing Machinery (ACM)},
	Title = {Platys: an active learning framework for place-aware application development and its evaluation},
	Url = {http://dx.doi.org/10.1145/2729976},
	Volume = {24},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2729976}}

@article{Ballesteros:2012,
	Abstract = {As of today, there is no operating system suitable for pervasive computing. Such system must integrate and coordinate heterogeneous devices and systems but, at the same time, it should provide a single system image to let the user feel that there is only a single ``pervasive'' computing environment. Such illusion must consider the Internet as the system backbone, because users move. The challenge is providing a novel system while permitting the seamless integration of traditional legacy systems, which may be required to run on many computers and devices, if only to run their applications. We argue that to build such a system, we should abandon Middleware and use a different technology, that we call Upperware. To back up our claim, we have built an actual system using Upperware: the Octopus. The Octopus has been in use for several years both to build pervasive applications like smart spaces and to provide a general-purpose computing environment. We have been using it through wide area networks, on a daily basis. In this paper we discuss the Upperware approach and present the Octopus as an actual system built out of Upperware, including some evaluation results.},
	Author = {Ballesteros, Francisco J. and Soriano, Enrique and Guardiola, Gorka},
	Date-Added = {2019-05-22 10:06:13 +0100},
	Date-Modified = {2020-10-14 20:49:41 +0100},
	Doi = {10.1016/j.jss.2012.02.011},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Smart spaces; Operating systems; Pervasive computing},
	Number = {7},
	Pages = {1637--1649},
	Publisher = {Elsevier BV},
	Title = {Octopus: An Upperware based system for building personal pervasive environments},
	Url = {http://dx.doi.org/10.1016/j.jss.2012.02.011},
	Volume = {85},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.jss.2012.02.011}}

@article{Morin:2009,
	Abstract = {Since software systems need to be continuously available under varying conditions, their ability to evolve at runtime is increasingly seen as one key issue. Modern programming frameworks already provide support for dynamic adaptations. However the high-variability of features in Dynamic Adaptive Systems (DAS) introduces an explosion of possible runtime system configurations (often called modes) and mode transitions. Designing these configurations and their transitions is tedious and error-prone, making the system feature evolution difficult. While Aspect-Oriented Modeling (AOM) was introduced to improve the modularity of software, this paper presents how an AOM approach can be used to tame the combinatorial explosion of DAS modes. Using AOM techniques, we derive a wide range of modes by weaving aspects into an explicit model reflecting the runtime system. We use these generated modes to automatically adapt the system. We validate our approach on an adaptive middleware for home-automation currently deployed in Rennes metropolis.},
	Author = {Morin, Brice and Barais, Olivier and Nain, Gregory and Jezequel, Jean-Marc},
	Date-Added = {2019-05-22 10:05:38 +0100},
	Date-Modified = {2020-10-24 19:58:09 +0100},
	Doi = {10.1109/icse.2009.5070514},
	Isbn = {9781424434534},
	Journal = {2009 IEEE 31st International Conference on Software Engineering},
	Pages = {122-132},
	Publisher = {IEEE},
	Title = {Taming Dynamically Adaptive Systems using models and aspects},
	Url = {http://dx.doi.org/10.1109/ICSE.2009.5070514},
	Year = {2009},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICSE.2009.5070514},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/icse.2009.5070514}}

@article{Liu:2011,
	Abstract = {Context-aware reflective middleware (CARM), which supports application reconfiguration, has been an appealing technique for building distributed real-time and embedded (DRE) systems as it can adapt their behaviors to changing environments at run time. However, existing CARM frameworks impose dependence restrictions and reconfiguration overhead, which makes the reconfiguration time of these frameworks too long (normally in the range of seconds or more) to satisfy the stringent real-time requirements of DRE systems. To improve the reconfiguration efficiency for supporting DRE systems, we have designed a new CARM framework -- MARCHES (Middleware for Adaptive Robust Collaborations across Heterogeneous Environments and Systems), which offers an original structure of multiple component chains to reduce local behavior change time and a novel synchronization protocol using active messages to reduce distributed behavior synchronization time. MARCHES uses a layered architecture and provides both component-level and system-level reflection to incorporate standard components, a hierarchical event notification model to evaluate contexts, and a lightweight XML-based script language to describe and manage adaptation policies. The MARCHES framework and supported applications have been implemented on PC and PDA platforms. Based on a novel theoretical model, we have analyzed the reconfiguration efficiency of MARCHES and compared it with those of peer CARM frameworks: MobiPADS and CARISMA. Quantitative empirical results show that the reconfiguration time of MARCHES is reduced from seconds to hundreds of microseconds. Evaluations demonstrate that MARCHES is robust, scalable and generates a small memory footprint, which makes it suitable for supporting DRE systems.},
	Author = {Liu, Shengpu and Cheng, Liang},
	Date-Added = {2019-05-22 10:04:50 +0100},
	Date-Modified = {2020-10-13 10:48:13 +0100},
	Doi = {10.1016/j.jss.2010.09.049},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Reflective middleware; Distributed real-time and embedded systems; Reconfiguration; Synchronization},
	Number = {2},
	Pages = {205--218},
	Publisher = {Elsevier BV},
	Title = {A context-aware reflective middleware framework for distributed real-time and embedded systems},
	Url = {http://dx.doi.org/10.1016/j.jss.2010.09.049},
	Volume = {84},
	Year = {2011},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.jss.2010.09.049}}

@article{Kulkarni:2012,
	Abstract = {We present a programming framework based on the paradigm of generative application development for building context-aware collaborative applications. In this approach, context-aware applications are implemented using a domain-specific design model, and their execution environment is generated and maintained by the middleware. The key features of this design model include support for context-based service discovery and binding, context-based access control, context-based multiuser coordination, and context-triggered automated task executions. The middleware uses the technique of policy-based specialization for generating application-specific middleware components from the generic middleware components. Through a case-study example, we demonstrate this approach and present the evaluations of the design model and the middleware.},
	Author = {Kulkarni, Devdatta and Ahmed, Tanvir and Tripathi, Anand},
	Date-Added = {2019-05-22 10:03:59 +0100},
	Date-Modified = {2020-10-13 10:54:55 +0100},
	Doi = {10.1145/2089116.2089121},
	Issn = {1049-331X},
	Journal = {ACM Transactions on Software Engineering and Methodology},
	Keywords = {pervasive computing; Context-aware computing; generative middleware},
	Number = {2},
	Pages = {1--35},
	Publisher = {Association for Computing Machinery (ACM)},
	Title = {A Generative Programming Framework for Context-Aware CSCW Applications},
	Url = {http://dx.doi.org/10.1145/2089116.2089121},
	Volume = {21},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2089116.2089121}}

@article{Liu:2013,
	Abstract = {Context-aware adaptive applications continually sense and adapt to their changing environments. A large body of such applications relies on user-configured adaptation rules to customize their behavior. We call them rule-based context-aware applications (or RBAs for short). Due to the complexity required for adequately modeling environmental dynamics, adaptation faults are common in these RBAs. One promising approach to detecting such faults is to build a state transition model for an RBA, and exhaustively explore the model's state space. However, it can suffer from numerous false positives. For example, 78.6% of 784 reported faults for one popular RBA -- PhoneAdapter, turn out to be false in a real deployment. In this paper, we address this false positive problem by inferring a domain model and an environment model for an RBA. The two models capture the hidden features inside user-configured adaptation rules as well as the RBA's running environment. We formulate these features as deterministic constraints and probabilistic constraints to prune false positives and effectively prioritize remaining faults. Our experiments on two real RBAs report that this approach successfully removes 46.5% of false positives and ranks 86.2% of true positives to the top of the fault list.},
	Author = {Liu, Yepang and Xu, Chang and Cheung, S.C.},
	Date-Added = {2019-05-22 10:03:11 +0100},
	Date-Modified = {2020-10-13 11:06:14 +0100},
	Doi = {10.1016/j.jss.2012.11.055},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Adaptation fault; Deterministic constraint; Probabilistic constraint; False positive; Fault ranking},
	Number = {3},
	Pages = {854--867},
	Publisher = {Elsevier BV},
	Title = {AFChecker: Effective model checking for context-aware adaptive applications},
	Url = {http://dx.doi.org/10.1016/j.jss.2012.11.055},
	Volume = {86},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.jss.2012.11.055}}

@article{Riva:2007,
	Abstract = {To efficiently make use of information and services available in ubiquitous environments, mobile users need novel means for locating relevant content, where relevance has a user-specific definition. In the DYNAMOS project, we have investigated a hybrid approach that enhances context-aware service provisioning with peer-to-peer social functionalities. We have designed and implemented a system platform and application prototype running on smart phones to support this novel conception of service provisioning. To assess the feasibility of our approach in a real-world scenario, we conducted field trials in which the research subject was a community of recreational boaters.},
	Author = {Riva, Oriana and Toivonen, Santtu},
	Date-Added = {2019-05-22 10:02:34 +0100},
	Date-Modified = {2020-10-14 19:58:11 +0100},
	Doi = {10.1016/j.jss.2007.03.009},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Service provisioning; Context-awareness; Recommender systems; Mobile devices},
	Number = {12},
	Pages = {1956--1972},
	Publisher = {Elsevier BV},
	Title = {The DYNAMOS approach to support context-aware service provisioning in mobile environments},
	Url = {http://dx.doi.org/10.1016/j.jss.2007.03.009},
	Volume = {80},
	Year = {2007},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.jss.2007.03.009}}

@article{Payton:2012,
	Abstract = {This paper explores the fidelity of queries issued in pervasive computing networks. A query's fidelity, or how well its results reflect the state of the environment, can be significantly impacted by dynamics that occur during its distributed execution. We focus on continuous queries that can be built out of sequences of consecutive snapshot queries and show how the fidelity of snapshots can be used to determine the fidelity of continuous queries. This simple notion of continuous query fidelity can be used to adapt query processing to impact quality and cost tradeoffs given the current state of the environment.},
	Author = {Payton, Jamie and Julien, Christine and Rajamani, Vasanth and Roman, Gruia-Catalin},
	Date-Added = {2019-05-22 10:01:08 +0100},
	Date-Modified = {2020-10-14 19:44:29 +0100},
	Doi = {10.1016/j.pmcj.2012.02.005},
	Issn = {1574-1192},
	Journal = {Pervasive and Mobile Computing},
	Keywords = {Query fidelity; Adaptive query processing; Continuous query; Quality of information},
	Number = {3},
	Pages = {317--330},
	Publisher = {Elsevier BV},
	Title = {Using snapshot query fidelity to adapt continuous query execution},
	Url = {http://dx.doi.org/10.1016/j.pmcj.2012.02.005},
	Volume = {8},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.pmcj.2012.02.005}}

@article{Malek:2010,
	Abstract = {Software architecture has been shown to provide an appropriate level of granularity for assessing a software system's quality attributes (e.g., performance and dependability). Similarly, previous research has adopted an architecture-centric approach to reasoning about and managing the run-time adaptation of software systems. For mobile and pervasive software systems, which are known to be innately dynamic and unpredictable, the ability to assess a system's quality attributes and manage its dynamic run-time behavior is especially important. In the past, researchers have argued that a software architecture-based approach can be instrumental in facilitating mobile computing. In this paper, we present an integrated architecture-driven framework for modeling, analysis, implementation, deployment, and run-time migration of software systems executing on distributed, mobile, heterogeneous computing platforms. In particular, we describe the framework's support for dealing with the challenges posed by both logical and physical mobility. We also provide an overview of our experience with applying the framework to a family of distributed mobile robotics systems. This experience has verified our envisioned benefits of the approach, and has helped us to identify several avenues of future work.},
	Author = {Malek, Sam and Edwards, George and Brun, Yuriy and Tajalli, Hossein and Garcia, Joshua and Krka, Ivo and Medvidovic, Nenad and Mikic-Rakic, Marija and Sukhatme, Gaurav S.},
	Date-Added = {2019-05-22 10:00:15 +0100},
	Date-Modified = {2020-10-13 11:10:12 +0100},
	Doi = {10.1016/j.jss.2009.11.003},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Software architecture; Mobility; Quality of service analysis; Robotics},
	Number = {6},
	Pages = {972--989},
	Publisher = {Elsevier BV},
	Title = {An architecture-driven software mobility framework},
	Url = {http://dx.doi.org/10.1016/j.jss.2009.11.003},
	Volume = {83},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.jss.2009.11.003}}

@article{Lu:2008,
	Abstract = {Pervasive computing software adapts its behavior according to the changing contexts. Nevertheless, contexts are often noisy. Context inconsistency resolution provides a cleaner pervasive computing environment to context-aware applications. A faulty context-aware application may, however, mistakenly mix up inconsistent contexts and resolved ones, causing incorrect results. This paper studies how such faulty context-aware applications may be affected by these services. We model how programs should handle contexts that are continually checked and resolved by context inconsistency resolution, develop novel sets of data flow equations to analyze the potential impacts, and thus formulate a new family of test adequacy criteria for testing these applications. Experimentation shows that our approach is promising.},
	Author = {Lu, Heng and Chan, W.K. and Tse, T.H.},
	Date-Added = {2019-05-22 09:59:14 +0100},
	Date-Modified = {2020-10-24 19:59:05 +0100},
	Doi = {10.1145/1368088.1368098},
	Isbn = {9781605580791},
	Journal = {Proceedings of the 13th international conference on Software engineering - ICSE '08},
	Keywords = {test adequacy; context inconsistency resolution; pervasive computing},
	Pages = {10},
	Publisher = {ACM Press},
	Title = {Testing pervasive software in the presence of context inconsistency resolution services},
	Url = {http://dx.doi.org/10.1145/1368088.1368098},
	Year = {2008},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/1368088.1368098}}

@article{Xu:2010,
	Abstract = {Pervasive computing environments typically change frequently in terms of available resources and their properties. Applications in pervasive computing use contexts to capture these changes and adapt their behaviors accordingly. However, contexts available to these applications may be abnormal or imprecise due to environmental noises. This may result in context inconsistencies, which imply that contexts conflict with each other. The inconsistencies may set such an application into a wrong state or lead the application to misadjust its behavior. It is thus desirable to detect and resolve the context inconsistencies in a timely way. One popular approach is to detect context inconsistencies when contexts breach certain consistency constraints. Existing constraint checking techniques recheck the entire expression of each affected consistency constraint upon context changes. When a changed context affects only a constraint's subexpression, rechecking the entire expression can adversely delay the detection of other context inconsistencies. This article proposes a rigorous approach to identifying the parts of previous checking results that are reusable without entire rechecking. We evaluated our work on the Cabot middleware through both simulation experiments and a case study. The experimental results reported that our approach achieved over a fifteenfold performance improvement on context inconsistency detection than conventional approaches.},
	Author = {Xu, Chang and Cheung, S. C. and Chan, W. K. and Ye, Chunyang},
	Date-Added = {2019-05-22 09:58:34 +0100},
	Date-Modified = {2020-10-14 20:46:42 +0100},
	Doi = {10.1145/1656250.1656253},
	Issn = {1049-331X},
	Journal = {ACM Transactions on Software Engineering and Methodology},
	Keywords = {validation; pervasive computing; Constraints; performance},
	Number = {3},
	Pages = {1--61},
	Publisher = {Association for Computing Machinery (ACM)},
	Title = {Partial constraint checking for context consistency in pervasive computing},
	Url = {http://dx.doi.org/10.1145/1656250.1656253},
	Volume = {19},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/1656250.1656253}}

@article{Sama:2008,
	Abstract = {Applications running on mobile devices are heavily context-aware and adaptive, leading to new analysis and testing challenges as streams of context values drive these applications to undesired configurations that are not easily exposed by existing validation techniques. We address this challenge by employing a finite-state model of adaptive behavior to enable the detection of faults caused by (1) erroneous adaptation logic, and (2) asynchronous updating of context information, which leads to inconsistencies between the external physical context and its internal representation within an application. We identify a number of adaptation fault patterns, each describing a class of faulty behaviors that we detect automatically by analyzing the system's adaptation model. We illustrate our approach on a simple but realistic application in which a cellphone's configuration profile is changed automatically based on the user's location, speed and surrounding environment.},
	Author = {Sama, Michele and Rosenblum, David S. and Wang, Zhimin and Elbaum, Sebastian},
	Date-Added = {2019-05-22 09:58:01 +0100},
	Date-Modified = {2020-10-24 19:55:47 +0100},
	Doi = {10.1145/1453101.1453136},
	Isbn = {9781595939951},
	Journal = {Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering - SIGSOFT '08/FSE-16},
	Keywords = {model-based analysis; fault detection; mobile computing; ubiquitous computing; adaptation; context-awareness; hazards},
	Pages = {11},
	Publisher = {ACM Press},
	Title = {Model-based fault detection in context-aware adaptive applications},
	Url = {http://dx.doi.org/10.1145/1453101.1453136},
	Year = {2008},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/1453101.1453136}}

@article{Lu:2006,
	Abstract = {Pervasive context-aware software is an emerging kind of application. Many of these systems register parts of their context-aware logic in the middleware. On the other hand, most conventional testing techniques do not consider such kind of application logic. This paper proposes a novel family of testing criteria to measure the comprehensiveness of their test sets. It stems from context-aware data flow information. Firstly, it studies the evolution of contexts, which are environmental information relevant to an application program. It then proposes context-aware data flow associations and testing criteria. Corresponding algorithms are given. It uses a prototype testing tool to conduct experimentation on an RFID-based location sensing software running on top of context-aware middleware. The experimental results show that our approach is applicable, effective, and promising.},
	Author = {Lu, Heng and Chan, W. K. and Tse, T. H.},
	Date-Added = {2019-05-22 09:55:46 +0100},
	Date-Modified = {2020-10-24 19:58:48 +0100},
	Doi = {10.1145/1181775.1181805},
	Isbn = {1595934685},
	Journal = {Proceedings of the 14th ACM SIGSOFT international symposium on Foundations of software engineering - SIGSOFT '06/FSE-14},
	Keywords = {test adequacy; context-aware applications; RFID},
	Pages = {242--252},
	Publisher = {ACM Press},
	Title = {Testing context-aware middleware-centric programs: a data flow approach and an rfid-based experimentation},
	Url = {http://dx.doi.org/10.1145/1181775.1181805},
	Year = {2006},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/1181775.1181805}}

@article{Wang:2007,
	Abstract = {The incorporation of context-awareness capabilities into pervasive applications allows them to leverage contextual information to provide additional services while maintaining an acceptable quality of service. These added capabilities, however, introduce a distinct input space that can affect the behavior of these applications at any point during their execution, making their validation quite challenging. In this paper, we introduce an approach to improve the test suite of a context-aware application by identifying context-aware program points where context changes may affect the application's behavior, and by systematically manipulating the context data fed into the application to increase its exposure to potentially valuable context variations. Preliminary results indicate that the approach is more powerful than existing testing approaches used on this type of application.},
	Author = {Wang, Zhimin and Elbaum, Sebastian and Rosenblum, David S.},
	Date-Added = {2019-05-22 09:54:59 +0100},
	Date-Modified = {2020-10-24 19:51:19 +0100},
	Doi = {10.1109/icse.2007.18},
	Isbn = {0769528287},
	Journal = {29th International Conference on Software Engineering (ICSE'07)},
	Pages = {406-415},
	Publisher = {IEEE},
	Title = {Automated Generation of Context-Aware Tests},
	Url = {http://dx.doi.org/10.1109/ICSE.2007.18},
	Year = {2007},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICSE.2007.18},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/icse.2007.18}}

@article{Kiani:2013,
	Abstract = {Software systems that provide context-awareness related functions in pervasive computing environments are gaining momentum due to emerging applications, architectures and business models. In most context-aware systems, a central broker performs the functions of context acquisition, processing, reasoning and provisioning to facilitate context-consuming applications, but demonstrations of such prototypical systems are limited to small, focussed domains. In order to develop modern context-aware systems that are capable of accommodating emerging pervasive/ubiquitous computing scenarios, are easily manageable, administratively and geographically scalable, it is desirable to have multiple brokers in the system divided into administrative, network, geographic, contextual or load based domains. Context providers and consumers may be configured to interact only with their nearest, relevant or most convenient broker. This setup demands inter-broker federation so that providers and consumers attached to different brokers can interact seamlessly, but such a federation has not been proposed for context-aware systems. This article analyses the limiting factors in existing context-aware systems, postulates the design and functional requirements that modern context-aware systems need to accommodate, and presents a federated broker based architecture for provisioning of contextual information over large geographical and network spans.},
	Author = {Kiani, Saad Liaquat and Anjum, Ashiq and Knappmeyer, Michael and Bessis, Nik and Antonopoulos, Nikolaos},
	Date-Added = {2019-05-22 09:54:14 +0100},
	Date-Modified = {2020-10-14 21:05:00 +0100},
	Doi = {10.1016/j.jss.2012.11.050},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Context provisioning; Federated broker model; Distributed systems design},
	Number = {4},
	Pages = {1107--1123},
	Publisher = {Elsevier BV},
	Title = {Federated broker system for pervasive context provisioning},
	Url = {http://dx.doi.org/10.1016/j.jss.2012.11.050},
	Volume = {86},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.jss.2012.11.050}}

@article{Gonzalez_Boix:2014,
	Abstract = {In tuple space approaches to context-aware mobile systems, the notion of context is defined by the presence or absence of certain tuples in the tuple space. Existing approaches define such presence either by collocation of devices holding the tuples or by replication of tuples across all devices. We show that both approaches can lead to an erroneous perception of context. Collocation ties the perception of context to network connectivity which does not always yield the expected result. Tuple replication can cause that a certain context is perceived even if the device has left the context a long time ago. We propose a tuple space approach in which tuples themselves carry a predicate that determines whether they are in the right context or not. We present a practical API for our approach and show its use by means of the implementation of various mobile applications. Benchmarks show that our approach can lead to a significant increase in performance compared to other approaches.},
	Author = {Gonzalez Boix, Elisa and Scholliers, Christophe and De Meuter, Wolfgang and D'Hondt, Theo},
	Date-Added = {2019-05-22 09:53:24 +0100},
	Date-Modified = {2020-10-14 20:39:20 +0100},
	Doi = {10.1016/j.jss.2013.07.031},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Tuple spaces; Programming abstractions; Context-awareness},
	Pages = {3--19},
	Publisher = {Elsevier BV},
	Title = {Programming mobile context-aware applications with TOTAM},
	Url = {http://dx.doi.org/10.1016/j.jss.2013.07.031},
	Volume = {92},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.jss.2013.07.031}}

@article{Xu:2012,
	Abstract = {Context-aware applications, as a typical type of self-adaptive software systems, are receiving increasing attention. These applications continually adapt to environmental changes in an autonomic way. However, their adaptation may contain defects when the complexity of modeling all environmental changes is beyond a developer's ability. Such defects can cause failure to the adaptation and result in application crash or freezing. Relating these failures back to responsible defects is challenging. In this paper we propose a novel approach, called Adam, to assist identifying defects in the context-aware adaptation. Adam monitors runtime errors for an application, logs relevant error information, and relates them to responsible defects in this application. To make our Adam approach feasible, we investigate the error types that are commonly exhibited by various failures reported in context-aware applications. Adam detects these errors in order to identify responsible defects in context-aware applications. To detect these errors, Adam formally models the adaptation semantics for context-aware applications, and integrates into them a set of assertion checkers with respect to these error types. We experimentally evaluated Adam through three context-aware applications. The experiments reported promising results that Adam can effectively detect errors, identify their responsible defects in applications, and give useful hints on how these defects can be fixed.},
	Author = {Xu, Chang and Cheung, S.C. and Ma, Xiaoxing and Cao, Chun and Lu, Jian},
	Date-Added = {2019-05-22 09:52:44 +0100},
	Date-Modified = {2020-10-13 11:00:15 +0100},
	Doi = {10.1016/j.jss.2012.04.078},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Context-aware adaptation; Defect; Error detection; Failure},
	Number = {12},
	Pages = {2812--2828},
	Publisher = {Elsevier BV},
	Title = {Adam: Identifying defects in context-aware adaptation},
	Url = {http://dx.doi.org/10.1016/j.jss.2012.04.078},
	Volume = {85},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.jss.2012.04.078}}

@article{Hallsteinsen:2012,
	Abstract = {Today software is the main enabler of many of the appliances and devices omnipresent in our daily life and important for our well being and work satisfaction. It is expected that the software works as intended, and that the software always and everywhere provides us with the best possible utility. This paper discusses the motivation, technical approach, and innovative results of the MUSIC project. MUSIC provides a comprehensive software development framework for applications that operate in ubiquitous and dynamic computing environments and adapt to context changes. Context is understood as any information about the user needs and operating environment which vary dynamically and have an impact on design choices. MUSIC supports several adaptation mechanisms and offers a model-driven application development approach supported by a sophisticated middleware that facilitates the dynamic and automatic adaptation of applications and services based on a clear separation of business logic, context awareness and adaptation concerns. The main contribution of this paper is a holistic, coherent presentation of the motivation, design, implementation, and evaluation of the MUSIC development framework and methodology.},
	Author = {Hallsteinsen, S. and Geihs, K. and Paspallis, N. and Eliassen, F. and Horn, G. and Lorenzo, J. and Mamelli, A. and Papadopoulos, G.A.},
	Date-Added = {2019-05-22 09:52:01 +0100},
	Date-Modified = {2020-10-13 10:50:24 +0100},
	Doi = {10.1016/j.jss.2012.07.052},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Adaptive software; Ubiquitous computing; Model-driven development; Middleware; Mobile computing},
	Number = {12},
	Pages = {2840--2859},
	Publisher = {Elsevier BV},
	Title = {A development framework and methodology for self-adapting applications in ubiquitous computing environments},
	Url = {http://dx.doi.org/10.1016/j.jss.2012.07.052},
	Volume = {85},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.jss.2012.07.052}}

@article{Xu:2006,
	Abstract = {Applications in pervasive computing are typically required to interact seamlessly with their changing environments. To provide users with smart computational services, these applications must be aware of incessant context changes in their environments and adjust their behaviors accordingly. As these environments are highly dynamic and noisy, context changes thus acquired could be obsolete, corrupted or inaccurate. This gives rise to the problem of context inconsistency, which must be timely detected in order to prevent applications from behaving anomalously. In this paper, we propose a formal model of incremental consistency checking for pervasive contexts. Based on this model, we further propose an efficient checking algorithm to detect inconsistent contexts. The performance of the algorithm and its advantages over conventional checking techniques are evaluated experimentally using Cabot middleware.},
	Author = {Xu, Chang and Cheung, S. C. and Chan, W. K.},
	Date-Added = {2019-05-22 09:51:21 +0100},
	Date-Modified = {2020-10-24 19:54:53 +0100},
	Doi = {10.1145/1134285.1134327},
	Isbn = {1595933751},
	Journal = {Proceeding of the 28th international conference on Software engineering - ICSE '06},
	Keywords = {context management; incremental consistency checking; pervasive computing},
	Pages = {292--301},
	Publisher = {ACM Press},
	Title = {Incremental consistency checking for pervasive context},
	Url = {http://dx.doi.org/10.1145/1134285.1134327},
	Year = {2006},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/1134285.1134327}}

@inproceedings{Poladian:2004,
	Abstract = {An important emerging requirement for computing systems is the ability to adapt at run time, taking advantage of local computing devices, and coping with dynamically changing resources. Three specific technical challenges in satisfying this requirement are to (1) select an appropriate set of applications or services to carry out a user's task, (2) allocate (possibly scarce) resources among those applications, and (3) reconfigure the applications or resource assignments if the situation changes. In this paper, we show how to provide a shared infrastructure that automates configuration decisions given a specification of the user's task. The heart of the approach is an analytical model and an efficient algorithm that can be used at run time to make near-optimal (re)configuration decisions. We validate this approach both analytically and by applying it to a representative scenario.},
	Author = {V. {Poladian} and J. P. {Sousa} and D. {Garlan} and M. {Shaw}},
	Booktitle = {Proceedings. 26th International Conference on Software Engineering},
	Date-Added = {2019-05-22 09:50:24 +0100},
	Date-Modified = {2020-10-14 21:14:18 +0100},
	Doi = {10.1109/ICSE.2004.1317482},
	Issn = {0270-5257},
	Keywords = {configuration management;ubiquitous computing;formal specification;resource allocation;dynamic configuration;resource-aware services;computing systems;resource allocation;reconfiguration decisions;resource assignments;user specification;ubiquitous computing;Resource management;Availability;Heart;Analytical models;Bandwidth;Quality of service;Writing;Vehicle dynamics;Computer science;Ubiquitous computing},
	Pages = {604-613},
	Title = {Dynamic configuration of resource-aware services},
	Year = {2004},
	Bdsk-Url-1 = {https://doi.org/10.1109/ICSE.2004.1317482}}

@article{Forte:2008,
	Abstract = {The diversity of small mobile devices and networks enabling users to access the Internet expands every day. In this highly dynamic environment of Ubiquitous Computing, current programming paradigms do not offer the flexibility needed for software reuse. To improve this flexibility, this paper proposes the use of ontologies and Web services, within a framework of components for the content adaptation domain, to facilitate the development of software based on reuse. A case study illustrates the use of the proposed solution.},
	Author = {Forte, Marcos and de Souza, Wanderley Lopes and do Prado, Antonio Francisco},
	Date-Added = {2019-05-22 09:47:59 +0100},
	Date-Modified = {2020-10-14 19:45:08 +0100},
	Doi = {10.1016/j.jss.2007.04.044},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Content adaptation; Components reuse; Ontologies; Web services},
	Number = {3},
	Pages = {368--381},
	Publisher = {Elsevier BV},
	Title = {Using ontologies and Web services for content adaptation in Ubiquitous Computing},
	Url = {http://dx.doi.org/10.1016/j.jss.2007.04.044},
	Volume = {81},
	Year = {2008},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.jss.2007.04.044}}

@article{Sama:2010,
	Abstract = {Applications running on mobile devices are intensely context-aware and adaptive. Streams of context values continuously drive these applications, making them very powerful but, at the same time, susceptible to undesired configurations. Such configurations are not easily exposed by existing validation techniques, thereby leading to new analysis and testing challenges. In this paper, we address some of these challenges by defining and applying a new model of adaptive behavior called an Adaptation Finite-State Machine (A-FSM) to enable the detection of faults caused by both erroneous adaptation logic and asynchronous updating of context information, with the latter leading to inconsistencies between the external physical context and its internal representation within an application. We identify a number of adaptation fault patterns, each describing a class of faulty behaviors. Finally, we describe three classes of algorithms to detect such faults automatically via analysis of the A-FSM. We evaluate our approach and the trade-offs between the classes of algorithms on a set of synthetically generated Context-Aware Adaptive Applications (CAAAs) and on a simple but realistic application in which a cell phone's configuration profile changes automatically as a result of changes to the user's location, speed, and surrounding environment. Our evaluation describes the faults our algorithms are able to detect and compares the algorithms in terms of their performance and storage requirements.},
	Author = {Sama, Michele and Elbaum, Sebastian and Raimondi, Franco and Rosenblum, David S. and Wang, Zhimin},
	Date-Added = {2019-05-22 09:47:19 +0100},
	Date-Modified = {2020-10-14 21:23:58 +0100},
	Doi = {10.1109/tse.2010.35},
	Issn = {0098-5589},
	Journal = {IEEE Transactions on Software Engineering},
	Keywords = {Adaptation; context-awareness; fault detection; mobile computing; model-based analysis; model checking; ordered binary decision diagrams; symbolic verification; ubiquitous computing},
	Number = {5},
	Pages = {644--661},
	Publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
	Title = {Context-Aware Adaptive Applications: Fault Patterns and Their Automated Identification},
	Url = {http://dx.doi.org/10.1109/TSE.2010.35},
	Volume = {36},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/TSE.2010.35},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/tse.2010.35}}

@article{Schreiber:2012,
	Abstract = {A declarative SQL-like language and a middleware infrastructure are presented for collecting data from different nodes of a pervasive system. Data management is performed by hiding the complexity due to the large underlying heterogeneity of devices, which can span from passive RFID(s) to ad hoc sensor boards to portable computers. An important feature of the presented middleware is to make the integration of new device types in the system easy through the use of device self-description. Two case studies are described for PerLa usage, and a survey is made for comparing our approach with other projects in the area.},
	Author = {Schreiber, F. A. and Camplani, R. and Fortunato, M. and Marelli, M. and Rota, G.},
	Date-Added = {2019-05-22 09:46:03 +0100},
	Date-Modified = {2020-10-14 20:44:55 +0100},
	Doi = {10.1109/tse.2011.25},
	Issn = {0098-5589},
	Journal = {IEEE Transactions on Software Engineering},
	Keywords = {Declarative language; device heterogeneity; functionality proxy; middleware infrastructure; pervasive system; SQL; wireless sensor networks.},
	Number = {2},
	Pages = {478--496},
	Publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
	Title = {PerLa: A Language and Middleware Architecture for Data Management and Integration in Pervasive Information Systems},
	Url = {http://dx.doi.org/10.1109/TSE.2011.25},
	Volume = {38},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/TSE.2011.25},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/tse.2011.25}}

@article{Coronato:2012,
	Abstract = {Ambient Intelligence technologies have not yet been widely adopted in safety critical scenarios. This principally has been due to fact that acceptable degrees of dependability have not been reached for the applications that rely on such technologies. However, the new critical application domains, like Ambient Assisted Living and Smart Hospitals, which are currently emerging, are increasing the need for methodologies and tools that can improve the reliability of the final systems. This paper presents a middleware architecture for safety critical Ambient Intelligence applications which provides the developer with services for runtime verification. It is now possible to continuously monitor and check the running system against correctness properties defined at design time. Moreover, a visual tool which allows the formal design of several of the characteristics of an Ambient Intelligence application and the automatic generation of setting up parameters and code for the middleware infrastructure is also presented.},
	Author = {Coronato, A. and De Pietro, G.},
	Date-Added = {2019-05-22 09:45:07 +0100},
	Date-Modified = {2020-10-14 19:56:25 +0100},
	Doi = {10.1109/tse.2011.67},
	Issn = {0098-5589},
	Journal = {IEEE Transactions on Software Engineering},
	Keywords = {Safety critical ambient intelligence systems; middleware infrastructures; designing tools},
	Number = {4},
	Pages = {975--991},
	Publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
	Title = {Tools for the Rapid Prototyping of Provably Correct Ambient Intelligence Applications},
	Url = {http://dx.doi.org/10.1109/TSE.2011.67},
	Volume = {38},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/TSE.2011.67},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/tse.2011.67}}

@article{Julien:2006,
	Abstract = {Today's mobile applications require constant adaptation to their changing environments, or contexts. Technological advances have increased the pervasiveness of mobile computing devices such as laptops, handhelds, and embedded sensors. The sheer amount of context information available for adaptation places a heightened burden on application developers as they must manage and utilize vast amounts of data from diverse sources. Facilitating programming in this data-rich environment requires a middleware that provides context information to applications in an abstract form. In this paper, we demonstrate the feasibility of such a middleware that allows programmers to focus on high-level interactions among programs and to employ declarative abstract context specifications in settings that exhibit transient interactions with opportunistically encountered components. We also discuss the novel context-aware abstractions the middleware provides and the programming knowledge necessary to write applications using it. Finally, we provide examples demonstrating the infrastructure's ability to support differing tasks from a wide variety of application domains.},
	Author = {Julien, C. and Roman, G.-C.},
	Date-Added = {2019-05-22 09:44:15 +0100},
	Date-Modified = {2020-10-14 21:11:19 +0100},
	Doi = {10.1109/tse.2006.47},
	Issn = {0098-5589},
	Journal = {IEEE Transactions on Software Engineering},
	Keywords = {Context-awareness; middleware; mobile ad hoc networks; programming abstraction},
	Number = {5},
	Pages = {281--298},
	Publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
	Title = {EgoSpaces: facilitating rapid development of context-aware mobile applications},
	Url = {http://dx.doi.org/10.1109/TSE.2006.47},
	Volume = {32},
	Year = {2006},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/TSE.2006.47},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/tse.2006.47}}

@article{Zachariadis:2006,
	Abstract = {Mobile computing devices, such as personal digital assistants and mobile phones, are becoming increasingly popular, smaller, and more capable. We argue that mobile systems should be able to adapt to changing requirements and execution environments. Adaptation requires the ability-to reconfigure the deployed code base on a mobile device. Such reconfiguration is considerably simplified if mobile applications are component-oriented rather than monolithic blocks of code. We present the SATIN (system adaptation targeting integrated networks) component metamodel, a lightweight local component metamodel that offers the flexible use of logical mobility primitives to reconfigure the software system by dynamically transferring code. The metamodel is implemented in the SATIN middleware system, a component-based mobile computing middleware that uses the mobility primitives defined in the metamodel to reconfigure both itself and applications that it hosts. We demonstrate the suitability of SATIN in terms of lightweightedness, flexibility, and reusability for the creation of adaptable mobile systems by using it to implement, port, and evaluate a number of existing and new applications, including an active network platform developed for satellite communication at the European space agency. These applications exhibit different aspects of adaptation and demonstrate the flexibility of the approach and the advantages gained.},
	Author = {Zachariadis, Stefanos and Mascolo, Cecilia and Emmerich, Wolfgang},
	Date-Added = {2019-05-22 09:43:16 +0100},
	Date-Modified = {2020-10-14 19:57:33 +0100},
	Doi = {10.1109/tse.2006.115},
	Issn = {0098-5589},
	Journal = {IEEE Transactions on Software Engineering},
	Keywords = {Distributed objects; components; containers; mobile systems; middleware; pervasive computing; mobile code},
	Number = {11},
	Pages = {910--927},
	Publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
	Title = {The SATIN Component System-A Metamodel for Engineering Adaptable Mobile Systems},
	Url = {http://dx.doi.org/10.1109/TSE.2006.115},
	Volume = {32},
	Year = {2006},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/TSE.2006.115},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/tse.2006.115}}

@article{Mamei:2009,
	Abstract = {Pervasive and mobile computing call for suitable middleware and programming models to support the activities of complex software systems in dynamic network environments. In this article we present TOTA (``Tuples On The Air''), a novel middleware and programming approach for supporting adaptive context-aware activities in pervasive and mobile computing scenarios. The key idea in TOTA is to rely on spatially distributed tuples, adaptively propagated across a network on the basis of application-specific rules, for both representing contextual information and supporting uncoupled interactions between application components. TOTA promotes a simple way of programming that facilitates access to distributed information, navigation in complex environments, and the achievement of complex coordination tasks in a fully distributed and adaptive way, mostly freeing programmers and system managers from the need to take care of low-level issues related to network dynamics. This article includes both application examples to clarify concepts and performance figures to show the feasibility of the approach.},
	Author = {Mamei, Marco and Zambonelli, Franco},
	Date-Added = {2019-05-22 09:40:53 +0100},
	Date-Modified = {2020-10-14 20:38:41 +0100},
	Doi = {10.1145/1538942.1538945},
	Issn = {1049-331X},
	Journal = {ACM Transactions on Software Engineering and Methodology},
	Keywords = {Pervasive computing; mobile computing; middleware; tuple spaces; self-organization; self-adaptation; coordination},
	Number = {4},
	Pages = {1--56},
	Publisher = {Association for Computing Machinery (ACM)},
	Title = {Programming pervasive and mobile computing applications: The tota approach},
	Url = {http://dx.doi.org/10.1145/1538942.1538945},
	Volume = {18},
	Year = {2009},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/1538942.1538945}}

@article{Xu:2015,
	Abstract = {Context-aware applications adapt their behavior based on contexts. Contexts can, however, be incorrect. A popular means to build dependable applications is to augment them with a set of constraints to govern the consistency of context values. These constraints are evaluated upon context changes to detect inconsistencies so that they can be timely handled. However, we observe that many context inconsistencies are unstable. They vanish by themselves and do not require handling. Such inconsistencies are detected due to misaligned sensor sampling or improper inconsistency detection scheduling. We call them unstable context inconsistencies (or STINs). STINs should be avoided to prevent unnecessary inconsistency handling and unstable behavioral adaptation to applications. In this article, we study STINs systematically, from examples to theoretical analysis, and present algorithms to suppress their detection. Our key insight is that only certain patterns of context changes can make a consistency constraint subject to the detection of STINs. We derive such patterns and proactively use them to suppress the detection of STINs. We implemented our idea and applied it to real-world applications. Experimental results confirmed its effectiveness in suppressing the detection of numerous STINs with negligible overhead, while preserving the detection of stable context inconsistencies that require inconsistency handling.},
	Author = {Xu, Chang and Xi, Wang and Cheung, S.C. and Ma, Xiaoxing and Cao, Chun and Lu, Jian},
	Date-Added = {2019-05-22 09:40:05 +0100},
	Date-Modified = {2020-10-14 22:43:23 +0100},
	Doi = {10.1109/tse.2015.2418760},
	Issn = {1939-3520},
	Journal = {IEEE Transactions on Software Engineering},
	Keywords = {Constraint; context inconsistency; impact propagation; instability analysis; pervasive computing},
	Number = {9},
	Pages = {842--865},
	Publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
	Title = {Cina: Suppressing the Detection of Unstable Context Inconsistency},
	Url = {http://dx.doi.org/10.1109/TSE.2015.2418760},
	Volume = {41},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/TSE.2015.2418760},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/tse.2015.2418760}}

@article{Cassou:2011,
	Abstract = {A software architecture describes the structure of a computing system by specifying software components and their interactions. Mapping a software architecture to an implementation is a well known challenge. A key element of this mapping is the architecture's description of the data and control-flow interactions between components. The characterization of these interactions can be rather abstract or very concrete, providing more or less implementation guidance, programming support, and static verification.
In this paper, we explore one point in the design space between abstract and concrete component interaction specifications. We introduce a notion of interaction contract that expresses allowed interactions between components, describing both data and control-flow constraints. This declaration is part of the architecture description, allows generation of extensive programming support, and enables various verifications. We instantiate our approach in an architecture description language for Sense/Compute/Control applications, and describe associated compilation and verification strategies.},
	Author = {Cassou, Damien and Balland, Emilie and Consel, Charles and Lawall, Julia},
	Date-Added = {2019-05-22 09:38:35 +0100},
	Date-Modified = {2020-10-24 19:55:29 +0100},
	Doi = {10.1145/1985793.1985852},
	Isbn = {9781450304450},
	Journal = {Proceeding of the 33rd international conference on Software engineering - ICSE '11},
	Keywords = {generative programming; architectural conformance},
	Pages = {10},
	Publisher = {ACM Press},
	Title = {Leveraging software architectures to guide and verify the development of sense/compute/control applications},
	Url = {http://dx.doi.org/10.1145/1985793.1985852},
	Year = {2011},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/1985793.1985852}}

@article{Salifu:2012,
	Abstract = {In the field of pervasive and ubiquitous computing, context-aware adaptive systems need to monitor changes in their environment in order to detect violations of requirements and switch their behaviour in order to continue satisfying requirements. In a complex and rapidly changing environment, identifying what to monitor and deciding when and how to switch behaviours effectively is difficult and error prone. The goal of our research is to provide systematic and, where possible, automated support for the software engineer developing such adaptive systems.

In this paper, we investigate the necessary and sufficient conditions for both monitoring and switching in order to adapt the system behaviours as the problem context varies. Necessary and sufficient conditions provide complementary safeguards to ensure that not too much and not too little monitoring and switching are carried out. Our approach encodes monitoring and switching problems into propositional logic constraints in order for these conditions to be analysed automatically using a standard SAT solver.

We demonstrate our approach by analysing a mobile phone system problem. We analysed requirements violations caused by changes in the system's operating environment. By providing necessary and sufficient monitoring and switching capabilities to the system, particular requirements violations were avoided.},
	Author = {Salifu, Mohammed and Yu, Yijun and Bandara, Arosha K. and Nuseibeh, Bashar},
	Date-Added = {2019-05-22 09:37:57 +0100},
	Date-Modified = {2020-10-13 11:14:04 +0100},
	Doi = {10.1016/j.jss.2012.07.062},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Monitoring; Switching; Problem description; Requirements engineering; Self-adaptive systems},
	Number = {12},
	Pages = {2829--2839},
	Publisher = {Elsevier BV},
	Title = {Analysing monitoring and switching problems for adaptive systems},
	Url = {http://dx.doi.org/10.1016/j.jss.2012.07.062},
	Volume = {85},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.jss.2012.07.062}}

@article{Cassou:2012,
	Abstract = {Despite much progress, developing a pervasive computing application remains a challenge because of a lack of conceptual frameworks and supporting tools. This challenge involves coping with heterogeneous devices, overcoming the intricacies of distributed systems technologies, working out an architecture for the application, encoding it in a program, writing specific code to test the application, and finally deploying it. This paper presents a design language and a tool suite covering the development life-cycle of a pervasive computing application. The design language allows us to define a taxonomy of area-specific building-blocks, abstracting over their heterogeneity. This language also includes a layer to define the architecture of an application, following an architectural pattern commonly used in the pervasive computing domain. Our underlying methodology assigns roles to the stakeholders, providing separation of concerns. Our tool suite includes a compiler that takes design artifacts written in our language as input and generates a programming framework that supports the subsequent development stages, namely, implementation, testing, and deployment. Our methodology has been applied on a wide spectrum of areas. Based on these experiments, we assess our approach through three criteria: expressiveness, usability, and productivity.},
	Author = {Cassou, Damien and Bruneau, Julien and Consel, Charles and Balland, Emilie},
	Date-Added = {2019-05-22 09:37:13 +0100},
	Date-Modified = {2020-10-12 23:08:19 +0100},
	Doi = {10.1109/tse.2011.107},
	Issn = {0098-5589},
	Journal = {IEEE Transactions on Software Engineering},
	Keywords = {Pervasive computing; Taxonomy; Computer architecture; Programming; Domain specific languages; Computational modeling; Software architecture},
	Number = {6},
	Pages = {1445--1463},
	Publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
	Title = {Toward a Tool-Based Development Methodology for Pervasive Computing Applications},
	Url = {http://dx.doi.org/10.1109/TSE.2011.107},
	Volume = {38},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/TSE.2011.107},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/tse.2011.107}}
