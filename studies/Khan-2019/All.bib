%% This BibTeX bibliography file was created using BibDesk.
%% http://bibdesk.sourceforge.net/


%% Created for Hannousse Abdelhakim at 2020-02-11 10:46:50 +0100 


%% Saved with string encoding Unicode (UTF-8) 



@article{Ampatzoglou:2013,
	Abstract = {Design patterns are used in software development to provide reusable and documented solutions to common design problems. Although many studies have explored various aspects of design patterns, no research summarizing the state of research related to design patterns existed up to now. This paper presents the results of a mapping study of about 120 primary studies, to provide an overview of the research efforts on Gang of Four (GoF) design patterns. The research questions of this study deal with (a) if design pattern research can be further categorized in research subtopics, (b) which of the above subtopics are the most active ones and (c) what is the reported effect of GoF patterns on software quality attributes. The results suggest that design pattern research can be further categorized to research on GoF patterns formalization, detection and application and on the effect of GoF patterns on software quality attributes. Concerning the intensity of research activity of the abovementioned subtopics, research on pattern detection and on the effect of GoF patterns on software quality attributes appear to be the most active ones. Finally, the reported research to date on the effect of GoF patterns on software quality attributes are controversial; because some studies identify one pattern's effect as beneficial whereas others report the same pattern's effect as harmful.},
	Author = {Apostolos Ampatzoglou and Sofia Charalampidou and Ioannis Stamelos},
	Date-Added = {2019-04-29 09:45:55 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.jss.2013.03.063},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Design patterns, Mapping study, Software quality attributes},
	Number = {7},
	Pages = {1945 - 1964},
	Title = {Research state of the art on GoF design patterns: A mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0164121213000757},
	Volume = {86},
	Year = {2013},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0164121213000757},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.jss.2013.03.063}}

@article{Ouhbi:2014,
	Author = {Ouhbi, Sofia and Idri, Ali and Aleman, Jose Luis Fernandez and Toval, Ambrosio},
	Date-Added = {2019-04-29 09:45:30 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/iwsm.mensura.2014.30},
	Journal = {2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement},
	Publisher = {IEEE},
	Title = {Evaluating Software Product Quality: A Systematic Mapping Study},
	Url = {http://dx.doi.org/10.1109/IWSM.Mensura.2014.30},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/IWSM.Mensura.2014.30},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/iwsm.mensura.2014.30}}

@article{Barbosa:2011,
	Author = {Barbosa, Olavo and Alves, Carina},
	Date-Added = {2019-04-29 09:44:53 +0100},
	Date-Modified = {2020-01-28 14:16:03 +0100},
	Journal = {Proc. Int'l Workshop on Soft. Ecos},
	Title = {A Systematic Mapping Study on Software Ecosystems},
	Year = {2011}}

@article{Freddy:2016,
	Author = {Paz, Freddy and Antonio Pow-Sang, Jose},
	Date-Added = {2019-04-29 09:42:20 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.14257/ijseia.2016.10.1.16},
	Journal = {International Journal of Software Engineering and Its Applications},
	Number = {1},
	Pages = {165-178},
	Title = {A systematic mapping review of usability evaluation methods for software development process},
	Volume = {10},
	Year = {2016},
	Bdsk-Url-1 = {https://doi.org/10.14257/ijseia.2016.10.1.16}}

@article{Nascimento:2013,
	Author = {Nascimento, Debora Maria and Cox, Kenia and Almeida, Thiago and Sampaio, Wendell and Bittencourt, Roberto Almeida and Souza, Rodrigo and Chavez, Christina},
	Date-Added = {2019-04-29 09:39:23 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/fie.2013.6685155},
	Isbn = {9781467352611},
	Journal = {2013 IEEE Frontiers in Education Conference (FIE)},
	Publisher = {IEEE},
	Title = {Using Open Source Projects in software engineering education: A systematic mapping study},
	Url = {http://dx.doi.org/10.1109/FIE.2013.6685155},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/FIE.2013.6685155},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/fie.2013.6685155}}

@article{Fontao:2015,
	Author = {Fontao, Awdren de Lima and Santos, Rodrigo Pereira dos and Dias-Neto, Arilo Claudio},
	Date-Added = {2019-04-29 09:37:40 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/compsac.2015.121},
	Isbn = {9781467365642},
	Journal = {2015 IEEE 39th Annual Computer Software and Applications Conference},
	Publisher = {IEEE},
	Title = {Mobile Software Ecosystem (MSECO): A Systematic Mapping Study},
	Url = {http://dx.doi.org/10.1109/COMPSAC.2015.121},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/COMPSAC.2015.121},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/compsac.2015.121}}

@article{Pekar:2014,
	Author = {Pekar, Viktor and Felderer, Michael and Breu, Ruth},
	Date-Added = {2019-04-29 09:37:15 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/quatic.2014.40},
	Isbn = {9781479961320},
	Journal = {2014 9th International Conference on the Quality of Information and Communications Technology},
	Publisher = {IEEE},
	Title = {Improvement Methods for Software Requirement Specifications: A Mapping Study},
	Url = {http://dx.doi.org/10.1109/QUATIC.2014.40},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/QUATIC.2014.40},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/quatic.2014.40}}

@article{De_Lima_Salgado:2014,
	Author = {de Lima Salgado, Andr{\'e} and Freire, Andr{\'e} Pimenta},
	Date-Added = {2019-04-29 09:36:49 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1007/978-3-319-07227-2_18},
	Isbn = {9783319072272},
	Issn = {1611-3349},
	Journal = {Lecture Notes in Computer Science},
	Pages = {178--188},
	Publisher = {Springer International Publishing},
	Title = {Heuristic Evaluation of Mobile Usability: A Mapping Study},
	Url = {http://dx.doi.org/10.1007/978-3-319-07227-2_18},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/978-3-319-07227-2_18}}

@article{Farhoodi:2013,
	Author = {FARHOODI, ROSHANAK and GAROUSI, VAHID and PFAHL, DIETMAR and SILLITO, JONATHAN},
	Date-Added = {2019-04-29 09:36:26 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1142/s0218194013500137},
	Issn = {1793-6403},
	Journal = {International Journal of Software Engineering and Knowledge Engineering},
	Number = {04},
	Pages = {463--506},
	Publisher = {World Scientific Pub Co Pte Lt},
	Title = {DEVELOPMENT OF SCIENTIFIC SOFTWARE: A SYSTEMATIC MAPPING, A BIBLIOMETRICS STUDY, AND A PAPER REPOSITORY},
	Url = {http://dx.doi.org/10.1142/S0218194013500137},
	Volume = {23},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1142/S0218194013500137},
	Bdsk-Url-2 = {http://dx.doi.org/10.1142/s0218194013500137}}

@article{Hosseini:2015,
	Abstract = {Context: Crowdsourcing, or tapping into the power of the crowd for problem solving, has gained ever-increasing attraction since it was first introduced. Crowdsourcing has been used in different disciplines, and it is becoming well-accepted in the marketplace as a new business model which utilizes Human Intelligence Tasks (HITs). Objective: While both academia and industry have extensively delved into different aspects of crowdsourcing, there seems to be no common understanding of what crowdsourcing really means and what core and optional features it has. Also, we still lack information on the kinds and disciplines of studies conducted on crowdsourcing and how they defined it in the context of their application area. This paper will clarify this ambiguity by analysing the distribution and demographics of research in crowdsourcing and extracting taxonomy of the variability and commonality in the constructs defining the concept in the literature. Method: We conduct a systematic mapping study and analyse 113 papers, selected via a formal process, and report and discuss the results. The study is combined by a content analysis process to extract a taxonomy of features describing crowdsourcing. Results: We extract and describe the taxonomy of features which characterize crowdsourcing in its four constituents; the crowd, the crowdsourcer, the crowdsourced task and the crowdsourcing platform. In addition, we report on different mappings between these features and the characteristics of the studied papers. We also analyse the distribution of the research using multiple criteria and draw conclusions. For example, our results show a constantly increasing interest in the area, especially in North America and a significant interest from industry. Also, we illustrate that although crowdsourcing is shown to be useful in a variety of disciplines, the research in the field of computer science still seems to be dominant in investigating it. Conclusions: This study allows forming a clear picture of the research in crowdsourcing and understanding the different features of crowdsourcing and their popularity, what type of research was conducted, where and how and by whom. The study enables researchers and practitioners to estimate the current status of the research in this new field. Our taxonomy of extracted features provides a reference model which could be used to configure crowdsourcing and also define it precisely and make design decisions on which of its variation to adopt.},
	Author = {Mahmood Hosseini and Alimohammad Shahri and Keith Phalp and Jacqui Taylor and Raian Ali},
	Date-Added = {2019-04-29 09:35:40 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.cosrev.2015.05.001},
	Issn = {1574-0137},
	Journal = {Computer Science Review},
	Keywords = {Crowdsourcing, Crowdsourcing features, Systematic mapping, Taxonomy},
	Pages = {43 - 69},
	Title = {Crowdsourcing: A taxonomy and systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S1574013715000052},
	Volume = {17},
	Year = {2015},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S1574013715000052},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.cosrev.2015.05.001}}

@article{DaSilva:2011,
	Author = {da Silva, Ivonei Freitas and da Mota Silveira Neto, Paulo Anselmo and O'Leary, P{\'a}draig and de Almeida, Eduardo Santana and de Lemos Meira, Silvio Romero},
	Date-Added = {2019-04-29 09:28:07 +0100},
	Date-Modified = {2020-01-28 14:16:03 +0100},
	Doi = {10.1002/spe.1078},
	Issn = {0038-0644},
	Journal = {Software: Practice and Experience},
	Number = {8},
	Pages = {899--920},
	Publisher = {Wiley},
	Title = {Agile software product lines: a systematic mapping study},
	Url = {http://dx.doi.org/10.1002/spe.1078},
	Volume = {41},
	Year = {2011},
	Bdsk-Url-1 = {http://dx.doi.org/10.1002/spe.1078}}

@article{Novais:2013,
	Abstract = {Background
Software evolution is an important topic in software engineering. It generally deals with large amounts of data, as one must look at whole project histories as opposed to their current snapshot. Software visualization is the field of software engineering that aims to help people to understand software through the use of visual resources. It can be effectively used to analyze and understand the large amount of data produced during software evolution.
Objective
This study investigates Software Evolution Visualization (SEV) approaches, collecting evidence about how SEV research is structured, synthesizing current evidence on the goals of the proposed approaches and identifying key challenges for its use in practice.
Methods
A mapping study was conducted to analyze how the SEV area is structured. Selected primary studies were classified and analyzed with respect to nine research questions.
Results
SEV has been used for many different purposes, especially for change comprehension, change prediction and contribution analysis. The analysis identified gaps in the studies with respect to their goals, strategies and approaches. It also pointed out to a widespread lack of empirical studies in the area.
Conclusion
Researchers have proposed many SEV approaches during the past years, but some have failed to clearly state their goals, tie them back to concrete problems, or formally validate their usefulness. The identified gaps indicate that there still are many opportunities to be explored in the area.},
	Author = {Renato Lima Novais and Andr{\'e} Torres and Thiago Souto Mendes and Manoel Mendon{\c c}a and Nico Zazworka},
	Date-Added = {2019-04-29 09:27:36 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2013.05.008},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Systematic mapping study, Software visualization, Software evolution},
	Number = {11},
	Pages = {1860 - 1883},
	Title = {Software evolution visualization: A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584913001298},
	Volume = {55},
	Year = {2013},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584913001298},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2013.05.008}}

@article{Abdellatief:2013,
	Abstract = {A component-based software system (CBSS) is a software system that is developed by integrating components that have been deployed independently. In the last few years, many researchers have proposed metrics to evaluate CBSS attributes. However, the practical use of these metrics can be difficult. For example, some of the metrics have concepts that either overlap or are not well defined, which could hinder their implementation. The aim of this study is to understand, classify and analyze existing research in component-based metrics, focusing on approaches and elements that are used to evaluate the quality of CBSS and its components from a component consumer's point of view. This paper presents a systematic mapping study of several metrics that were proposed to measure the quality of CBSS and its components. We found 17 proposals that could be applied to evaluate CBSSs, while 14 proposals could be applied to evaluate individual components in isolation. Various elements of the software components that were measured are reviewed and discussed. Only a few of the proposed metrics are soundly defined. The quality assessment of the primary studies detected many limitations and suggested guidelines for possibilities for improving and increasing the acceptance of metrics. However, it remains a challenge to characterize and evaluate a CBSS and its components quantitatively. For this reason, much effort must be made to achieve a better evaluation approach in the future.},
	Author = {Majdi Abdellatief and Abu Bakar Md Sultan and Abdul Azim Abdul Ghani and Marzanah A. Jabar},
	Date-Added = {2019-04-29 09:27:16 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {https://doi.org/10.1016/j.jss.2012.10.001},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Systematic mapping study, Software metrics, Software components, Component-based software system, Software quality},
	Number = {3},
	Pages = {587 - 603},
	Title = {A mapping study to investigate component-based software system metrics},
	Url = {http://www.sciencedirect.com/science/article/pii/S0164121212002798},
	Volume = {86},
	Year = {2013},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0164121212002798},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.jss.2012.10.001}}

@article{Marques:2014,
	Author = {Marques, Maira R. and Quispe, Alcides and Ochoa, Sergio F.},
	Date-Added = {2019-04-29 09:26:49 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/fie.2014.7044277},
	Isbn = {9781479939220},
	Journal = {2014 IEEE Frontiers in Education Conference (FIE) Proceedings},
	Publisher = {IEEE},
	Title = {A systematic mapping study on practical approaches to teaching software engineering},
	Url = {http://dx.doi.org/10.1109/FIE.2014.7044277},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/FIE.2014.7044277},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/fie.2014.7044277}}

@inproceedings{Afzal:2008,
	Author = {Afzal, Wasif and Torkar, Richard and Feldt, Robert},
	Booktitle = {20th International Conference on Software Engineering and Knowledge Engineering},
	Date-Added = {2019-04-29 09:25:16 +0100},
	Date-Modified = {2020-01-28 14:16:03 +0100},
	Doi = {10.1.1.458.4999},
	Pages = {488-493},
	Title = {A Systematic Mapping Study on Non-Functional Search-Based Software Testing},
	Year = {2008},
	Bdsk-Url-1 = {https://doi.org/10.1.1.458.4999}}

@article{RuizRube:2012,
	Author = {Iv{\'a}n Ruiz-Rube and Juan Manuel Dodero and Manuel Palomo-Duarte and Mercedes Ruiz and David Gawn},
	Date-Added = {2019-04-29 09:21:10 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Journal = {Journal of Software Maintenance and Evolution: Research and Practice},
	Number = {1},
	Pages = {999-1025},
	Title = {Uses and Applications of SPEM Process Models . A Systematic Mapping Study},
	Volume = {32},
	Year = {2012}}

@article{Mehmood:2012,
	Author = {Mehmood, Abid and Jawawi, Dayang N.A.},
	Date-Added = {2019-04-29 09:19:10 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/icosst.2012.6472845},
	Isbn = {9781467330961},
	Journal = {2012 International Conference on Open Source Systems and Technologies},
	Publisher = {IEEE},
	Title = {A systematic map of integration of aspect orientation and model-driven engineering},
	Url = {http://dx.doi.org/10.1109/ICOSST.2012.6472845},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICOSST.2012.6472845},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/icosst.2012.6472845}}

@article{Giuffrida:2013,
	Abstract = {Background
In Global Software Development (GSD), informal communication and knowledge sharing play an important role. Social Software (SoSo) has the potential to support and foster this key responsibility. Research on the use of SoSo in GSD is still at an early stage: although a number of empirical studies on the usage of SoSo are available in related fields, there exists no comprehensive overview of what has been investigated to date across them.
Objective
The aim of this review is to map empirical studies on the usage of SoSo in Software Engineering projects and in distributed teams, and to highlight the findings of research works which could prove to be beneficial for GSD researchers and practitioners.
Method
A Systematic Mapping Study is conducted using a broad search string that allows identifying a variety of studies which can be beneficial for GSD. Papers have been retrieved through a combination of automatic search and snowballing, hence a wide quantitative map of the research area is provided. Additionally, text extracts from the studies are qualitatively synthesised to investigate benefits and challenges of the use of SoSo.
Results
SoSo is reported as being chiefly used as a support for collaborative work, fostering awareness, knowledge management and coordination among team members. Contrary to the evident high importance of the social aspects offered by SoSo, socialisation is not the most important usage reported.
Conclusions
This review reports how SoSo is used in GSD and how it is capable of supporting GSD teams. Four emerging themes in global software engineering were identified: the appropriation and development of usage structures; understanding how an ecology of communication channels and tools are used by teams; the role played by SoSo either as a subtext or as an explicit goal; and finally, the surprising low percentage of observational studies.},
	Author = {Rosalba Giuffrida and Yvonne Dittrich},
	Date-Added = {2019-04-29 09:18:36 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2013.01.004},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Systematic mapping study, Global software development, Distributed teams, Social media, Social software, Computer-supported cooperative work},
	Number = {7},
	Pages = {1143 - 1164},
	Title = {Empirical studies on the use of social software in global software development -- A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584913000153},
	Volume = {55},
	Year = {2013},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584913000153},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2013.01.004}}

@article{Da_Silva:2015,
	Author = {Silva da Silva, Tiago and Silveira, F{\'a}bio Fagundes and Silveira, Milene Selbach and Hellmann, Theodore and Maurer, Frank},
	Date-Added = {2019-04-29 09:18:14 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1007/978-3-319-21413-9_7},
	Isbn = {9783319214139},
	Issn = {1611-3349},
	Journal = {Lecture Notes in Computer Science},
	Pages = {86--100},
	Publisher = {Springer International Publishing},
	Title = {A Systematic Mapping on Agile UCD Across the Major Agile and HCI Conferences},
	Url = {http://dx.doi.org/10.1007/978-3-319-21413-9_7},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/978-3-319-21413-9_7}}

@article{Kuhrmann:2014,
	Author = {Kuhrmann, Marco and M{\'e}ndez Fern{\'a}ndez, Daniel and Tiessler, Michaela},
	Date-Added = {2019-04-29 09:17:45 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1002/smr.1642},
	Issn = {2047-7473},
	Journal = {Journal of Software: Evolution and Process},
	Number = {12},
	Pages = {1053--1073},
	Publisher = {Wiley},
	Title = {A mapping study on the feasibility of method engineering},
	Url = {http://dx.doi.org/10.1002/smr.1642},
	Volume = {26},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1002/smr.1642}}

@article{Fotrousi:2014,
	Author = {Fotrousi, Farnaz and Fricker, Samuel A. and Fiedler, Markus and Le-Gall, Franck},
	Date-Added = {2019-04-29 09:17:05 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1007/978-3-319-08738-2_14},
	Isbn = {9783319087382},
	Issn = {1865-1356},
	Journal = {Lecture Notes in Business Information Processing},
	Pages = {194--211},
	Publisher = {Springer International Publishing},
	Title = {KPIs for Software Ecosystems: A Systematic Mapping Study},
	Url = {http://dx.doi.org/10.1007/978-3-319-08738-2_14},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/978-3-319-08738-2_14}}

@article{Feyh:2013,
	Author = {Feyh, Markus and Petersen, Kai},
	Date-Added = {2019-04-29 09:16:35 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1007/978-3-642-44930-7_3},
	Isbn = {9783642449307},
	Issn = {1865-1356},
	Journal = {Lecture Notes in Business Information Processing},
	Pages = {32--47},
	Publisher = {Springer Berlin Heidelberg},
	Title = {Lean Software Development Measures and Indicators - A Systematic Mapping Study},
	Url = {http://dx.doi.org/10.1007/978-3-642-44930-7_3},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/978-3-642-44930-7_3}}

@article{Bjarnason:2013,
	Author = {Bjarnason, Elizabeth},
	Date-Added = {2019-04-29 09:16:01 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1007/978-3-642-37422-7_21},
	Isbn = {9783642374227},
	Issn = {1611-3349},
	Journal = {Lecture Notes in Computer Science},
	Pages = {292--307},
	Publisher = {Springer Berlin Heidelberg},
	Title = {Distances between Requirements Engineering and Later Software Development Activities: A Systematic Map},
	Url = {http://dx.doi.org/10.1007/978-3-642-37422-7_21},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/978-3-642-37422-7_21}}

@article{Izurieta:2007,
	Author = {Izurieta, Clemente and Bieman, James M.},
	Date-Added = {2019-04-29 09:15:31 +0100},
	Date-Modified = {2020-01-28 14:16:03 +0100},
	Doi = {10.1109/esem.2007.55},
	Isbn = {9780769528861},
	Journal = {First International Symposium on Empirical Software Engineering and Measurement (ESEM 2007)},
	Publisher = {IEEE},
	Title = {How Software Designs Decay: A Pilot Study of Pattern Evolution},
	Url = {http://dx.doi.org/10.1109/ESEM.2007.55},
	Year = {2007},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ESEM.2007.55},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/esem.2007.55}}

@article{Pretorius:2008,
	Author = {Pretorius, Rialette and Budgen, David},
	Date-Added = {2019-04-29 09:15:03 +0100},
	Date-Modified = {2020-01-28 14:16:03 +0100},
	Doi = {10.1145/1414004.1414076},
	Isbn = {9781595939715},
	Journal = {Proceedings of the Second ACM-IEEE international symposium on Empirical software engineering and measurement - ESEM '08},
	Publisher = {ACM Press},
	Title = {A mapping study on empirical evidence related to the models and forms used in the uml},
	Url = {http://dx.doi.org/10.1145/1414004.1414076},
	Year = {2008},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/1414004.1414076}}

@inproceedings{Mujtaba:2008,
	Author = {Shahid Mujtaba and Kai Petersen and Robert Feldt and Michael Mattsson},
	Date-Added = {2019-04-29 09:13:48 +0100},
	Date-Modified = {2020-01-28 14:16:03 +0100},
	Publisher = {School of Engineering, Blekinge Inst. of Technology},
	Title = {Software Product Line Variability : A Systematic Mapping Study},
	Year = {2008}}

@article{Fernandez:2009,
	Author = {Condori-Fernandez, Nelly and Daneva, Maya and Sikkel, Klaas and Wieringa, Roel and Dieste, Oscar and Pastor, Oscar},
	Date-Added = {2019-04-29 09:10:47 +0100},
	Date-Modified = {2020-01-28 14:16:03 +0100},
	Doi = {10.1109/esem.2009.5314232},
	Isbn = {9781424448425},
	Journal = {2009 3rd International Symposium on Empirical Software Engineering and Measurement},
	Publisher = {IEEE},
	Title = {A systematic mapping study on empirical evaluation of software requirements specifications techniques},
	Url = {http://dx.doi.org/10.1109/ESEM.2009.5314232},
	Year = {2009},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ESEM.2009.5314232},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/esem.2009.5314232}}

@article{Afzal:2009,
	Abstract = {Search-based software testing is the application of metaheuristic search techniques to generate software tests. The test adequacy criterion is transformed into a fitness function and a set of solutions in the search space are evaluated with respect to the fitness function using a metaheuristic search technique. The application of metaheuristic search techniques for testing is promising due to the fact that exhaustive testing is infeasible considering the size and complexity of software under test. Search-based software testing has been applied across the spectrum of test case design methods; this includes white-box (structural), black-box (functional) and grey-box (combination of structural and functional) testing. In addition, metaheuristic search techniques have also been applied to test non-functional properties. The overall objective of undertaking this systematic review is to examine existing work into non-functional search-based software testing (NFSBST). We are interested in types of non-functional testing targeted using metaheuristic search techniques, different fitness functions used in different types of search-based non-functional testing and challenges in the application of these techniques. The systematic review is based on a comprehensive set of 35 articles obtained after a multi-stage selection process and have been published in the time span 1996--2007. The results of the review show that metaheuristic search techniques have been applied for non-functional testing of execution time, quality of service, security, usability and safety. A variety of metaheuristic search techniques are found to be applicable for non-functional testing including simulated annealing, tabu search, genetic algorithms, ant colony methods, grammatical evolution, genetic programming (and its variants including linear genetic programming) and swarm intelligence methods. The review reports on different fitness functions used to guide the search for each of the categories of execution time, safety, usability, quality of service and security; along with a discussion of possible challenges in the application of metaheuristic search techniques.},
	Author = {Wasif Afzal and Richard Torkar and Robert Feldt},
	Date-Added = {2019-04-29 09:10:14 +0100},
	Date-Modified = {2020-01-28 14:16:03 +0100},
	Doi = {10.1016/j.infsof.2008.12.005},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Systematic review, Non-functional system properties, Search-based software testing},
	Number = {6},
	Pages = {957 - 976},
	Title = {A systematic review of search-based testing for non-functional system properties},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584908001833},
	Volume = {51},
	Year = {2009},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584908001833},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2008.12.005}}

@article{Nakagawa:2010,
	Author = {Nakagawa, Elisa Yumi and Feitosa, Daniel and Felizardo, Katia Romero},
	Date-Added = {2019-04-29 09:09:44 +0100},
	Date-Modified = {2020-01-28 14:16:03 +0100},
	Doi = {10.1145/1833335.1833340},
	Isbn = {9781605589671},
	Journal = {Proceedings of the 2010 ICSE Workshop on Sharing and Reusing Architectural Knowledge - SHARK '10},
	Publisher = {ACM Press},
	Title = {Using systematic mapping to explore software architecture knowledge},
	Url = {http://dx.doi.org/10.1145/1833335.1833340},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/1833335.1833340}}

@article{Jalali:2010,
	Author = {Jalali, Samireh and Wohlin, Claes},
	Date-Added = {2019-04-29 09:09:15 +0100},
	Date-Modified = {2020-01-28 14:16:03 +0100},
	Doi = {10.1109/icgse.2010.14},
	Isbn = {9781424476190},
	Journal = {2010 5th IEEE International Conference on Global Software Engineering},
	Publisher = {IEEE},
	Title = {Agile Practices in Global Software Engineering - A Systematic Map},
	Url = {http://dx.doi.org/10.1109/ICGSE.2010.14},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICGSE.2010.14},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/icgse.2010.14}}

@article{Fauzi:2010,
	Author = {Fauzi, Shukor Sanim Mohd and Bannerman, Paul L. and Staples, Mark},
	Date-Added = {2019-04-29 09:08:43 +0100},
	Date-Modified = {2020-01-28 14:16:03 +0100},
	Doi = {10.1109/apsec.2010.53},
	Isbn = {9781424488315},
	Journal = {2010 Asia Pacific Software Engineering Conference},
	Publisher = {IEEE},
	Title = {Software Configuration Management in Global Software Development: A Systematic Map},
	Url = {http://dx.doi.org/10.1109/APSEC.2010.53},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/APSEC.2010.53},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/apsec.2010.53}}

@article{Kitchenham:2010,
	Abstract = {Background
Many papers are published on the topic of software metrics but it is difficult to assess the current status of metrics research.
Aim
This paper aims to identify trends in influential software metrics papers and assess the possibility of using secondary studies to integrate research results.
Method
Search facilities in the SCOPUS tool were used to identify the most cited papers in the years 2000--2005 inclusive. Less cited papers were also selected from 2005. The selected papers were classified according factors such as to main topic, goal and type (empirical or theoretical or mixed). Papers classified as ``Evaluation studies'' were assessed to investigate the extent to which results could be synthesized.
Results
Compared with less cited papers, the most cited papers were more frequently journal papers, and empirical validation or data analysis studies. However, there were problems with some empirical validation studies. For example, they sometimes attempted to evaluate theoretically invalid metrics and fail to appreciate the importance of the context in which data are collected.
Conclusions
This paper, together with other similar papers, confirms that there is a large body of research related to software metrics. However, software metrics researchers may need to refine their empirical methodology before they can answer useful empirical questions.},
	Author = {Barbara Kitchenham},
	Date-Added = {2019-04-29 09:08:12 +0100},
	Date-Modified = {2020-01-28 14:16:03 +0100},
	Doi = {10.1016/j.jss.2009.06.041},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Software metrics, Secondary study, Literature survey, Mapping study, Influential papers, Empirical evaluation problems},
	Note = {SI: Top Scholars},
	Number = {1},
	Pages = {37 - 51},
	Title = {What's up with software metrics? -- A preliminary mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0164121209001599},
	Volume = {83},
	Year = {2010},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0164121209001599},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.jss.2009.06.041}}

@article{Barreiros:2011,
	Author = {Barreiros, Emanoel and Almeida, Adauto and Saraiva, Juliana and Soares, Sergio},
	Date-Added = {2019-04-29 09:07:45 +0100},
	Date-Modified = {2020-01-28 14:16:03 +0100},
	Doi = {10.1109/esem.2011.19},
	Isbn = {9780769546049},
	Journal = {2011 International Symposium on Empirical Software Engineering and Measurement},
	Publisher = {IEEE},
	Title = {A Systematic Mapping Study on Software Engineering Testbeds},
	Url = {http://dx.doi.org/10.1109/ESEM.2011.19},
	Year = {2011},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ESEM.2011.19},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/esem.2011.19}}

@article{Maglyas:2011,
	Author = {Maglyas, Andrey and Nikula, Uolevi and Smolander, Kari},
	Date-Added = {2019-04-29 09:07:11 +0100},
	Date-Modified = {2020-01-28 14:16:03 +0100},
	Doi = {10.1109/iwspm.2011.6046201},
	Isbn = {9781457711466},
	Journal = {2011 Fifth International Workshop on Software Product Management (IWSPM)},
	Publisher = {IEEE},
	Title = {What do we know about software product management? - a systematic mapping study},
	Url = {http://dx.doi.org/10.1109/IWSPM.2011.6046201},
	Year = {2011},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/IWSPM.2011.6046201},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/iwspm.2011.6046201}}

@article{Petersen:2011,
	Abstract = {Context
Software productivity measurement is essential in order to control and improve the performance of software development. For example, by identifying role models (e.g. projects, individuals, tasks) when comparing productivity data. The prediction is of relevance to determine whether corrective actions are needed, and to discover which alternative improvement action would yield the best results.
Objective
In this study we identify studies for software productivity prediction and measurement. Based on the identified studies we first create a classification scheme and map the studies into the scheme (systematic map). Thereafter, a detailed analysis and synthesis of the studies is conducted.
Method
As a research method for systematically identifying and aggregating the evidence of productivity measurement and prediction approaches systematic mapping and systematic review have been used.
Results
In total 38 studies have been identified, resulting in a classification scheme for empirical research on software productivity. The mapping allowed to identify the rigor of the evidence with respect to the different productivity approaches. In the detailed analysis the results were tabulated and synthesized to provide recommendations to practitioners.
Conclusion
Risks with simple ratio-based measurement approaches were shown. In response to the problems data envelopment analysis seems to be a strong approach to capture multivariate productivity measures, and allows to identify reference projects to which inefficient projects should be compared. Regarding simulation no general prediction model can be identified. Simulation and statistical process control are promising methods for software productivity prediction. Overall, further evidence is needed to make stronger claims and recommendations. In particular, the discussion of validity threats should become standard, and models need to be compared with each other.},
	Author = {Kai Petersen},
	Date-Added = {2019-04-29 09:06:38 +0100},
	Date-Modified = {2020-01-28 14:16:03 +0100},
	Doi = {10.1016/j.infsof.2010.12.001},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Software productivity, Software development, Efficiency, Performance, Measurement, Prediction},
	Note = {Special section: Software Engineering track of the 24th Annual Symposium on Applied Computing},
	Number = {4},
	Pages = {317 - 343},
	Title = {Measuring and predicting software productivity: A systematic map and review},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584910002156},
	Volume = {53},
	Year = {2011},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584910002156},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2010.12.001}}

@inproceedings{Kusumo:2011,
	Author = {Dana Kusumo and Liming Zhu and Mark Staples and He Zhang},
	Booktitle = {ACIS 2011},
	Date-Added = {2019-04-29 09:04:47 +0100},
	Date-Modified = {2020-01-28 14:16:03 +0100},
	Doi = {10.1.1.434.6935},
	Title = {A Systematic Mapping Study on Off-The-Shelf-based Software Acquisition},
	Url = {https://aisel.aisnet.org/acis2011/22},
	Year = {2011},
	Bdsk-Url-1 = {https://aisel.aisnet.org/acis2011/22}}

@article{Barmi:2011,
	Author = {Barmi, Zeinab Alizadeh and Ebrahimi, Amir Hossein and Feldt, Robert},
	Date-Added = {2019-04-29 09:03:31 +0100},
	Date-Modified = {2020-01-28 14:16:03 +0100},
	Doi = {10.1109/icstw.2011.58},
	Isbn = {9781457700194},
	Journal = {2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops},
	Publisher = {IEEE},
	Title = {Alignment of Requirements Specification and Testing: A Systematic Mapping Study},
	Url = {http://dx.doi.org/10.1109/ICSTW.2011.58},
	Year = {2011},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICSTW.2011.58},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/icstw.2011.58}}

@inproceedings{Silva:2011,
	Author = {F. Q. B. d. Silva and M. Suassuna and R. F. Lopes and T. B. Gouveia and A. C. A. Franca and J. P. N. d. Oliveira and L. F. M. d. Oliveira and A. L. M. Santos},
	Booktitle = {2011 Second International Workshop on Replication in Empirical Software Engineering Research},
	Date-Added = {2019-04-29 09:03:01 +0100},
	Date-Modified = {2020-01-28 14:16:03 +0100},
	Doi = {10.1109/RESER.2011.14},
	Keywords = {configuration management;program testing;software maintenance;software tools;software engineering;systematic mapping;empirical studies replication;internal replication;software construction;software testing;software maintenance;software design;configuration management;software tools;incentive;Software engineering;Sections;Data mining;Systematics;Manuals;Software;Knowledge engineering;replications;experiments;empirical studies;mapping study;literature review;software engineering},
	Pages = {61-70},
	Title = {Replication of Empirical Studies in Software Engineering: Preliminary Findings from a Systematic Mapping Study},
	Year = {2011},
	Bdsk-Url-1 = {https://doi.org/10.1109/RESER.2011.14}}

@article{Arshad:2011,
	Author = {Arshad, A. and Usman, M.},
	Date-Added = {2019-04-29 09:00:13 +0100},
	Date-Modified = {2020-01-28 14:16:03 +0100},
	Doi = {10.1049/ic.2011.0020},
	Isbn = {9781849195096},
	Journal = {15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011)},
	Publisher = {IET},
	Title = {Security at software architecture level: a systematic mapping study},
	Url = {http://dx.doi.org/10.1049/ic.2011.0020},
	Year = {2011},
	Bdsk-Url-1 = {http://dx.doi.org/10.1049/ic.2011.0020}}

@article{DaSilva:2011a,
	Author = {da Silva, Fabio Q. B. and Prikladnicki, Rafael and Fran{\c c}a, A. C{\'e}sar C. and Monteiro, Cleviton V. F. and Costa, Catarina and Rocha, Rodrigo},
	Date-Added = {2019-04-29 08:59:37 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1002/smr.563},
	Issn = {2047-7473},
	Journal = {Journal of Software: Evolution and Process},
	Number = {6},
	Pages = {625--642},
	Publisher = {Wiley},
	Title = {An evidence-based model of distributed software development project management: results from a systematic mapping study},
	Url = {http://dx.doi.org/10.1002/smr.563},
	Volume = {24},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1002/smr.563}}

@article{Engstrom:2011,
	Abstract = {Context
Software product lines (SPL) are used in industry to achieve more efficient software development. However, the testing side of SPL is underdeveloped.
Objective
This study aims at surveying existing research on SPL testing in order to identify useful approaches and needs for future research.
Method
A systematic mapping study is launched to find as much literature as possible, and the 64 papers found are classified with respect to focus, research type and contribution type.
Results
A majority of the papers are of proposal research types (64%). System testing is the largest group with respect to research focus (40%), followed by management (23%). Method contributions are in majority.
Conclusions
More validation and evaluation research is needed to provide a better foundation for SPL testing.},
	Author = {Emelie Engstr{\"o}m and Per Runeson},
	Date-Added = {2019-04-29 08:59:05 +0100},
	Date-Modified = {2020-01-28 14:16:03 +0100},
	Doi = {10.1016/j.infsof.2010.05.011},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Software product line testing, Testing, Systematic mapping, Systematic literature review},
	Number = {1},
	Pages = {2 - 13},
	Title = {Software product line testing -- A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584910001709},
	Volume = {53},
	Year = {2011},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584910001709},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2010.05.011}}

@article{DaMostaSilveiraNeto:2011,
	Abstract = {Context
In software development, Testing is an important mechanism both to identify defects and assure that completed products work as specified. This is a common practice in single-system development, and continues to hold in Software Product Lines (SPL). Even though extensive research has been done in the SPL Testing field, it is necessary to assess the current state of research and practice, in order to provide practitioners with evidence that enable fostering its further development.
Objective
This paper focuses on Testing in SPL and has the following goals: investigate state-of-the-art testing practices, synthesize available evidence, and identify gaps between required techniques and existing approaches, available in the literature.
Method
A systematic mapping study was conducted with a set of nine research questions, in which 120 studies, dated from 1993 to 2009, were evaluated.
Results
Although several aspects regarding testing have been covered by single-system development approaches, many cannot be directly applied in the SPL context due to specific issues. In addition, particular aspects regarding SPL are not covered by the existing SPL approaches, and when the aspects are covered, the literature just gives brief overviews. This scenario indicates that additional investigation, empirical and practical, should be performed.
Conclusion
The results can help to understand the needs in SPL Testing, by identifying points that still require additional investigation, since important aspects regarding particular points of software product lines have not been addressed yet.},
	Author = {Paulo Anselmo da Mota Silveira Neto and Ivan do Carmo Machado and John D. McGregor and Eduardo Santana de Almeida and Silvio Romero de Lemos Meira},
	Date-Added = {2019-04-29 08:58:45 +0100},
	Date-Modified = {2020-01-28 14:16:03 +0100},
	Doi = {10.1016/j.infsof.2010.12.003},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Software product lines, Software testing, Mapping study},
	Note = {Special Section on Best Papers from XP2010},
	Number = {5},
	Pages = {407 - 423},
	Title = {A systematic mapping study of software product lines testing},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584910002193},
	Volume = {53},
	Year = {2011},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584910002193},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2010.12.003}}

@article{Abdul:2011,
	Author = {Abdul, M. and Bilal, Qadoos and Ahmed, Shahbaz and Shahzad, Farrukh},
	Bdsk-Color = {4211148543},
	Date-Added = {2019-04-29 08:56:07 +0100},
	Date-Modified = {2019-05-15 09:40:18 +0100},
	Doi = {10.1.1.299.4119},
	Journal = {Journal of Theoretical and Applied Information Technology},
	Number = {1},
	Title = {A SYSTEMATIC MAPPING ON SELECTION OF OPEN SOURCE SOFTWARE LICENSE: ECONOMIC AND SOCIAL PERSPECTIVE},
	Url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.299.4119},
	Volume = {25},
	Year = {2011},
	Bdsk-Url-1 = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.299.4119},
	Bdsk-Url-2 = {https://doi.org/10.1.1.299.4119}}

@article{Fernandez:2011,
	Abstract = {Context
In recent years, many usability evaluation methods (UEMs) have been employed to evaluate Web applications. However, many of these applications still do not meet most customers' usability expectations and many companies have folded as a result of not considering Web usability issues. No studies currently exist with regard to either the use of usability evaluation methods for the Web or the benefits they bring.
Objective
The objective of this paper is to summarize the current knowledge that is available as regards the usability evaluation methods (UEMs) that have been employed to evaluate Web applications over the last 14years.
Method
A systematic mapping study was performed to assess the UEMs that have been used by researchers to evaluate Web applications and their relation to the Web development process. Systematic mapping studies are useful for categorizing and summarizing the existing information concerning a research question in an unbiased manner.
Results
The results show that around 39% of the papers reviewed reported the use of evaluation methods that had been specifically crafted for the Web. The results also show that the type of method most widely used was that of User Testing. The results identify several research gaps, such as the fact that around 90% of the studies applied evaluations during the implementation phase of the Web application development, which is the most costly phase in which to perform changes. A list of the UEMs that were found is also provided in order to guide novice usability practitioners.
Conclusions
From an initial set of 2703 papers, a total of 206 research papers were selected for the mapping study. The results obtained allowed us to reach conclusions concerning the state-of-the-art of UEMs for evaluating Web applications. This allowed us to identify several research gaps, which subsequently provided us with a framework in which new research activities can be more appropriately positioned, and from which useful information for novice usability practitioners can be extracted.},
	Author = {Adrian Fernandez and Emilio Insfran and Silvia Abrah{\~a}o},
	Date-Added = {2019-04-29 08:52:48 +0100},
	Date-Modified = {2020-01-28 14:16:03 +0100},
	Doi = {10.1016/j.infsof.2011.02.007},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Usability evaluation methods, Web development, Systematic mapping},
	Note = {Advances in functional size measurement and effort estimation - Extended best papers},
	Number = {8},
	Pages = {789 - 817},
	Title = {Usability evaluation methods for the web: A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584911000607},
	Volume = {53},
	Year = {2011},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584911000607},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2011.02.007}}

@inproceedings{Noppen:2007,
	Author = {Joost Noppen and Pim van den Broek and Mehmet Aksit},
	Booktitle = {Requirements Engineering: Foundation for Software Quality},
	Date-Added = {2019-04-29 08:51:11 +0100},
	Date-Modified = {2020-01-28 14:16:03 +0100},
	Doi = {10.1007/978-3-540-73031-6_18},
	Pages = {247-261},
	Publisher = {Springer, Berlin, Heidelberg},
	Title = {Imperfect Requirements in Software Development},
	Year = {2007},
	Bdsk-Url-1 = {https://doi.org/10.1007/978-3-540-73031-6}}

@article{Wendler:2012,
	Abstract = {Context
Maturity models offer organizations a simple but effective possibility to measure the quality of their processes. Emerged out of software engineering, the application fields have widened and maturity model research is becoming more important. During the last two decades the publication amount steadily rose as well. Until today, no studies have been available summarizing the activities and results of the field of maturity model research.
Objective
The objective of this paper is to structure and analyze the available literature of the field of maturity model research to identify the state-of-the-art research as well as research gaps.
Method
A systematic mapping study was conducted. It included relevant publications of journals and IS conferences. Mapping studies are a suitable method for structuring a broad research field concerning research questions about contents, methods, and trends in the available publications.
Results
The mapping of 237 articles showed that current maturity model research is applicable to more than 20 domains, heavily dominated by software development and software engineering. The study revealed that most publications deal with the development of maturity models and empirical studies. Theoretical reflective publications are scarce. Furthermore, the relation between conceptual and design-oriented maturity model development was analyzed, indicating that there is still a gap in evaluating and validating developed maturity models. Finally, a comprehensive research framework was derived from the study results and implications for further research are given.
Conclusion
The mapping study delivers the first systematic summary of maturity model research. The categorization of available publications helps researchers gain an overview of the state-of-the-art research and current research gaps. The proposed research framework supports researchers categorizing their own projects. In addition, practitioners planning to use a maturity model may use the study as starting point to identify which maturity models are suitable for their domain and where limitations exist.},
	Author = {Roy Wendler},
	Date-Added = {2019-04-29 08:45:28 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2012.07.007},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Maturity models, Software management, Design-oriented research, Systematic mapping study},
	Note = {Special Section on Software Reliability and Security},
	Number = {12},
	Pages = {1317 - 1339},
	Title = {The maturity of maturity model research: A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584912001334},
	Volume = {54},
	Year = {2012},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584912001334},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2012.07.007}}

@article{Tahir:2012,
	Author = {Tahir, Amjed and MacDonell, Stephen G.},
	Date-Added = {2019-04-29 08:45:02 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/icsm.2012.6405289},
	Isbn = {9781467323130},
	Journal = {2012 28th IEEE International Conference on Software Maintenance (ICSM)},
	Publisher = {IEEE},
	Title = {A systematic mapping study on dynamic metrics and software quality},
	Url = {http://dx.doi.org/10.1109/ICSM.2012.6405289},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICSM.2012.6405289},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/icsm.2012.6405289}}

@inproceedings{Nascimento:2012,
	Author = {Nascimento, Leandro and Viana, Daniel and A M Silveira Neto, Paulo and A O Martins, Dhiego and Garcia, Vinicius and Meira, Silvio},
	Booktitle = {Seventh International Conference on Software Engineering and Advances (ICSEA 2012)},
	Date-Added = {2019-04-29 08:44:32 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Pages = {179--187},
	Title = {A Systematic Mapping Study on Domain-Specific Languages},
	Year = {2012}}

@article{Shah:2012,
	Author = {Shah, Syed Muhammad Ali and Morisio, Maurizio and Torchiano, Marco},
	Date-Added = {2019-04-29 08:41:52 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/apsec.2012.93},
	Isbn = {9780769549224},
	Journal = {2012 19th Asia-Pacific Software Engineering Conference},
	Publisher = {IEEE},
	Title = {An Overview of Software Defect Density: A Scoping Study},
	Url = {http://dx.doi.org/10.1109/APSEC.2012.93},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/APSEC.2012.93},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/apsec.2012.93}}

@article{Portillo_Rodriguez:2012,
	Abstract = {Context
This systematic mapping review is set in a Global Software Engineering (GSE) context, characterized by a highly distributed environment in which project team members work separately in different countries. This geographic separation creates specific challenges associated with global communication, coordination and control.
Objective
The main goal of this study is to discover all the available communication and coordination tools that can support highly distributed teams, how these tools have been applied in GSE, and then to describe and classify the tools to allow both practitioners and researchers involved in GSE to make use of the available tool support in GSE.
Method
We performed a systematic mapping review through a search for studies that answered our research question, ``Which software tools (commercial, free or research based) are available to support Global Software Engineering?'' Applying a range of related search terms to key electronic databases, selected journals, and conferences and workshops enabled us to extract relevant papers. We then used a data extraction template to classify, extract and record important information about the GSD tools from each paper. This information was synthesized and presented as a general map of types of GSD tools, the tool's main features and how each tool was validated in practice.
Results
The main result is a list of 132 tools, which, according to the literature, have been, or are intended to be, used in global software projects. The classification of these tools includes lists of features for communication, coordination and control as well as how the tool has been validated in practice. We found that out the total of 132, the majority of tools were developed at research centers, and only a small percentage of tools (18.9%) are reported as having been tested outside the initial context in which they were developed.
Conclusion
The most common features in the GSE tools included in this study are: team activity and social awareness, support for informal communication, Support for Distributed Knowledge Management and Interoperability with other tools. Finally, there is the need for an evaluation of these tools to verify their external validity, or usefulness in a wider global environment.},
	Author = {Javier Portillo-Rodr{\'\i}guez and Aurora Vizca{\'\i}no and Mario Piattini and Sarah Beecham},
	Date-Added = {2019-04-29 08:41:29 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2012.02.006},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Global Software Development, Distributed Software Engineering, Tool, Systematic Mapping Study},
	Number = {7},
	Pages = {663 - 685},
	Title = {Tools used in Global Software Engineering: A systematic mapping review},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584912000493},
	Volume = {54},
	Year = {2012},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584912000493},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2012.02.006}}

@article{Kusumo:2012,
	Author = {Kusumo, D.S. and Staples, M. and Liming Zhu and He Zhang and Jeffery, R.},
	Date-Added = {2019-04-29 08:39:31 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1049/ic.2012.0031},
	Isbn = {9781849195416},
	Journal = {16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012)},
	Publisher = {IET},
	Title = {Risks of off-the-shelf-based software acquisition and development: a systematic mapping study and a survey},
	Url = {http://dx.doi.org/10.1049/ic.2012.0031},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1049/ic.2012.0031}}

@inproceedings{Mohebzada:2012,
	Acmid = {2664388},
	Address = {Piscataway, NJ, USA},
	Author = {Mohebzada, Jamshaid G. and Ruhe, Guenther and Eberlein, Armin},
	Booktitle = {Proceedings of the International Conference on Software and System Process},
	Date-Added = {2019-04-29 08:39:03 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/ICSSP.2012.6225965},
	Isbn = {978-1-4673-2352-9},
	Keywords = {recommendation systems, requirements engineering, systematic mapping study},
	Location = {Zurich, Switzerland},
	Numpages = {10},
	Pages = {200--209},
	Publisher = {IEEE Press},
	Series = {ICSSP '12},
	Title = {Systematic Mapping of Recommendation Systems for Requirements Engineering},
	Url = {http://dl.acm.org/citation.cfm?id=2664360.2664388},
	Year = {2012},
	Bdsk-Url-1 = {http://dl.acm.org/citation.cfm?id=2664360.2664388}}

@article{Barney:2012,
	Abstract = {Background
Software quality is complex with over investment, under investment and the interplay between aspects often being overlooked as many researchers aim to advance individual aspects of software quality.
Aim
This paper aims to provide a consolidated overview the literature that addresses trade-offs between aspects of software product quality.
Method
A systematic literature map is employed to provide an overview of software quality trade-off literature in general. Specific analysis is also done of empirical literature addressing the topic.
Results
The results show a wide range of solution proposals being considered. However, there is insufficient empirical evidence to adequately evaluate and compare these proposals. Further a very large vocabulary has been found to describe software quality.
Conclusion
Greater empirical research is required to sufficiently evaluate and compare the wide range of solution proposals. This will allow researchers to focus on the proposals showing greater signs of success and better support industrial practitioners.},
	Author = {Sebastian Barney and Kai Petersen and Mikael Svahnberg and Ayb{\"u}ke Aurum and Hamish Barney},
	Date-Added = {2019-04-29 08:38:18 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2012.01.008},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Software engineering, Software quality, Trade-off approaches},
	Number = {7},
	Pages = {651 - 662},
	Title = {Software quality trade-offs: A systematic map},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584912000195},
	Volume = {54},
	Year = {2012},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584912000195},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2012.01.008}}

@article{Acuna:2012,
	Author = {Acuna, S.T. and Castro, J.W. and Dieste, O. and Juristo, N.},
	Date-Added = {2019-04-29 08:37:29 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1049/ic.2012.0005},
	Isbn = {9781849195416},
	Journal = {16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012)},
	Publisher = {IET},
	Title = {A systematic mapping study on the open source software development process},
	Url = {http://dx.doi.org/10.1049/ic.2012.0005},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1049/ic.2012.0005}}

@inproceedings{Castro_Lopez:2012,
	Author = {Castro-Lopez, Oscar and Espinoza, Angelina and Mart{\'\i}nez, Alfonso},
	Booktitle = {Tendencias En Investigacion E Inovacion En Ingenieria de Software: Un Enfoque Practico},
	Date-Added = {2019-04-29 08:36:07 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Pages = {57-64},
	Title = {Findings based on a Systematic Mapping Study on Software Product Value Estimation},
	Year = {2012}}

@article{Elberzhager:2012a,
	Abstract = {Context
Quality assurance effort, especially testing effort, is often a major cost factor during software development, which sometimes consumes more than 50% of the overall development effort. Consequently, one major goal is often to reduce testing effort.
Objective
The main goal of the systematic mapping study is the identification of existing approaches that are able to reduce testing effort. Therefore, an overview should be presented both for researchers and practitioners in order to identify, on the one hand, future research directions and, on the other hand, potential for improvements in practical environments.
Method
Two researchers performed a systematic mapping study, focusing on four databases with an initial result set of 4020 articles.
Results
In total, we selected and categorized 144 articles. Five different areas were identified that exploit different ways to reduce testing effort: approaches that predict defect-prone parts or defect content, automation, test input reduction approaches, quality assurance techniques applied before testing, and test strategy approaches.
Conclusion
The results reflect an increased interest in this topic in recent years. A lot of different approaches have been developed, refined, and evaluated in different environments. The highest attention was found with respect to automation and prediction approaches. In addition, some input reduction approaches were found. However, in terms of combining early quality assurance activities with testing to reduce test effort, only a small number of approaches were found. Due to the continuous challenge of reducing test effort, future research in this area is expected.},
	Author = {Frank Elberzhager and Alla Rosbach and J{\"u}rgen M{\"u}nch and Robert Eschbach},
	Date-Added = {2019-04-29 08:34:21 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2012.04.007},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Efficiency improvement, Mapping study, Quality assurance, Software testing, Test effort reduction},
	Number = {10},
	Pages = {1092 - 1106},
	Title = {Reducing test effort: A systematic mapping study on existing approaches},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584912000894},
	Volume = {54},
	Year = {2012},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584912000894},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2012.04.007}}

@article{Anjum:2012,
	Author = {Anjum, M. and Budgen, D.},
	Bdsk-Color = {1082130687},
	Date-Added = {2019-04-29 08:33:16 +0100},
	Date-Modified = {2020-02-11 09:45:42 +0100},
	Doi = {10.1049/ic.2012.0008},
	Isbn = {9781849195416},
	Journal = {16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012)},
	Publisher = {IET},
	Title = {A mapping study of the definitions used for for service oriented architecture},
	Url = {http://dx.doi.org/10.1049/ic.2012.0008},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1049/ic.2012.0008}}

@article{Burns:2012,
	Author = {Burns, C. and Ferreira, J. and Hellmann, T. D. and Maurer, F.},
	Date-Added = {2019-04-29 08:31:10 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/vlhcc.2012.6344511},
	Isbn = {9781467308533},
	Journal = {2012 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)},
	Publisher = {IEEE},
	Title = {Usable results from the field of API usability: A systematic mapping and further analysis},
	Url = {http://dx.doi.org/10.1109/VLHCC.2012.6344511},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/VLHCC.2012.6344511},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/vlhcc.2012.6344511}}

@article{Saraiva:2012,
	Author = {Saraiva, J. and Barreiros, E. and Almeida, A. and Lima, F. and Alencar, A. and Lima, G. and Soares, S. and Castor, F.},
	Date-Added = {2019-04-29 08:27:30 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1049/ic.2012.0033},
	Isbn = {9781849195416},
	Journal = {16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012)},
	Publisher = {IET},
	Title = {Aspect-oriented software maintenance metrics: a systematic mapping study},
	Url = {http://dx.doi.org/10.1049/ic.2012.0033},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1049/ic.2012.0033}}

@inproceedings{Malik:2012,
	Author = {Bushra Malik and Saad Zafar},
	Booktitle = {The Seventh International Conference on Software Engineering Advances (ICSEA 2012)},
	Date-Added = {2019-04-29 08:24:11 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.5281/zenodo.1070813},
	Pages = {2061--2071},
	Title = {A Systematic Mapping Study on Software Engineering Education},
	Year = {2012},
	Bdsk-Url-1 = {https://doi.org/10.5281/zenodo.1070813}}

@inproceedings{Manteuffel:2012,
	Author = {Christian Manteuffel, S. I},
	Bdsk-Color = {4211148543},
	Booktitle = {9th SC RUG 2011--2012},
	Date-Added = {2019-04-29 08:21:11 +0100},
	Date-Modified = {2019-04-29 10:10:31 +0100},
	Pages = {35-39},
	Title = {A systematic mapping study on sustainable software engineering: A research preview},
	Year = {2012}}

@article{Lemos:2012,
	Author = {Lemos, Jo{\~a}o and Alves, Carina and Duboc, Leticia and Rodrigues, Genaina Nunes},
	Date-Added = {2019-04-29 08:10:38 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1145/2245276.2231945},
	Isbn = {9781450308571},
	Journal = {Proceedings of the 27th Annual ACM Symposium on Applied Computing - SAC '12},
	Publisher = {ACM Press},
	Title = {A systematic mapping study on creativity in requirements engineering},
	Url = {http://dx.doi.org/10.1145/2245276.2231945},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2245276.2231945}}

@article{Elberzhager:2012,
	Abstract = {Context
A lot of different quality assurance techniques exist to ensure high quality products. However, most often they are applied in isolation. A systematic combination of different static and dynamic quality assurance techniques promises to exploit synergy effects, such as higher defect detection rates or reduced quality assurance costs. However, a systematic overview of such combinations and reported evidence about achieving synergy effects with such kinds of combinations is missing.
Objective
The main goal of this article is the classification and thematic analysis of existing approaches that combine different static and dynamic quality assurance technique, including reported effects, characteristics, and constraints. The result is an overview of existing approaches and a suitable basis for identifying future research directions.
Method
A systematic mapping study was performed by two researchers, focusing on four databases with an initial result set of 2498 articles, covering articles published between 1985 and 2010.
Results
In total, 51 articles were selected and classified according to multiple criteria. The two main dimensions of a combination are integration (i.e., the output of one quality assurance technique is used for the second one) and compilation (i.e., different quality assurance techniques are applied to ensure a common goal, but in isolation). The combination of static and dynamic analyses is one of the most common approaches and usually conducted in an integrated manner. With respect to the combination of inspection and testing techniques, this is done more often in a compiled way than in an integrated way.
Conclusion
The results show an increased interest in this topic in recent years, especially with respect to the integration of static and dynamic analyses. Inspection and testing techniques are currently mostly performed in an isolated manner. The integration of inspection and testing techniques is a promising research direction for the exploitation of additional synergy effects.},
	Author = {Frank Elberzhager and J{\"u}rgen M{\"u}nch and Vi Tran Ngoc Nha},
	Date-Added = {2019-04-29 08:10:13 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2011.06.003},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Combination, Dynamic quality assurance, Inspection, Static quality assurance, Systematic mapping study, Testing},
	Number = {1},
	Pages = {1 - 15},
	Title = {A systematic mapping study on the combination of static and dynamic quality assurance techniques},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584911001388},
	Volume = {54},
	Year = {2012},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584911001388},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2011.06.003}}

@article{Hellmann:2012,
	Author = {Hellmann, Theodore D. and Sharma, Abhishek and Ferreira, Jennifer and Maurer, Frank},
	Date-Added = {2019-04-29 08:09:46 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/agile.2012.8},
	Isbn = {9780769548043},
	Journal = {2012 Agile Conference},
	Publisher = {IEEE},
	Title = {Agile Testing: Past, Present, and Future -- Charting a Systematic Map of Testing in Agile Software Development},
	Url = {http://dx.doi.org/10.1109/Agile.2012.8},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/Agile.2012.8},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/agile.2012.8}}

@inproceedings{Daud:2012,
	Author = {N. M. Nik Daud and W. M. N. W. Kadir},
	Booktitle = {2012 8th International Conference on Information Science and Digital Content Technology (ICIDT2012)},
	Date-Added = {2019-04-29 08:09:05 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Keywords = {open systems;service-oriented architecture;software quality;software reusability;systematic mapping;quality attributes measurement;service oriented architecture;SOA;software reuse;interoperability;software behavior;software quality;Information filters;Reliability;Computer architecture;Databases;Abstracts;Software;Quality attributes measurement;service oriented architecture;systematic mapping study},
	Pages = {626-631},
	Title = {Systematic mapping study of quality attributes measurement in service oriented architecture},
	Volume = {3},
	Year = {2012}}

@article{Fernandez_Saez:2013,
	Abstract = {Context
The Unified Modelling Language (UML) has, after ten years, become established as the de facto standard for the modelling of object-oriented software systems. It is therefore relevant to investigate whether its use is important as regards the costs involved in its implantation in industry being worthwhile.
Method
We have carried out a systematic mapping study to collect the empirical studies published in order to discover ``What is the current existing empirical evidence with regard to the use of UML diagrams in source code maintenance and the maintenance of the UML diagrams themselves?
Results
We found 38 papers, which contained 63 experiments and 3 case studies.
Conclusion
Although there is common belief that the use of UML is beneficial for source code maintenance, since the quality of the modifications is greater when UML diagrams are available, only 3 papers concerning this issue have been published. Most research (60 empirical studies) concerns the maintainability and comprehensibility of the UML diagrams themselves which form part of the system's documentation, since it is assumed that they may influence source code maintainability, although this has not been empirically validated. Moreover, the generalizability of the majority of the experiments is questionable given the material, tasks and subjects used. There is thus a need for more experiments and case studies to be performed in industrial contexts, i.e., with real systems and using maintenance tasks conducted by practitioners under real conditions that truly show the utility of UML diagrams in maintaining code, and that the fact that a diagram is more comprehensible or modifiable influences the maintainability of the code itself. This utility should also be studied from the viewpoint of cost and productivity, and the consistent and simultaneous maintenance of diagrams and code must also be considered in future empirical studies.},
	Author = {Ana M. Fern{\'a}ndez-S{\'a}ez and Marcela Genero and Michel R.V. Chaudron},
	Date-Added = {2019-04-28 22:53:00 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2012.12.006},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {UML, Empirical studies, Software maintenance, Systematic mapping study, Systematic literature review},
	Number = {7},
	Pages = {1119 - 1142},
	Title = {Empirical studies concerning the maintenance of UML diagrams and their use in the maintenance of code: A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584912002418},
	Volume = {55},
	Year = {2013},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584912002418},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2012.12.006}}

@inproceedings{Mendonca:2013,
	Address = {Venice, Italy},
	Author = {Mendonca, Vinicius R. L. and Rodrigues, Cassio L. and Soares, Fabrizzio A. A. M. N. and Vincenzi, Auri M. R.},
	Booktitle = {Proceedings The Eighth International Conference on Software Engineering Advances (ICSEA 2013)},
	Date-Added = {2019-04-28 22:52:20 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Isbn = {978-1-61208-304-9},
	Issn = {2308-4235},
	Organization = {IARIA},
	Pages = {72--78},
	Publisher = {IARIA XPS Press},
	Series = {The Eighth International Conference on Software Engineering Advances (ICSEA)},
	Title = {Static Analysis Techniques and Tools: A Systematic Mapping Study},
	Url = {https://www.thinkmind.org/index.php?view=instance&instance=ICSEA+2013},
	Year = {2013},
	Bdsk-Url-1 = {https://www.thinkmind.org/index.php?view=instance&instance=ICSEA+2013}}

@article{Ouhbi:2013,
	Author = {Ouhbi, Sofia and Idri, Ali and Fernandez-Aleman, Jose Luis and Toval, Ambrosio},
	Date-Added = {2019-04-28 22:50:27 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/apsec.2013.40},
	Isbn = {9781479921430},
	Journal = {2013 20th Asia-Pacific Software Engineering Conference (APSEC)},
	Publisher = {IEEE},
	Title = {Software Quality Requirements: A Systematic Mapping Study},
	Url = {http://dx.doi.org/10.1109/APSEC.2013.40},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/APSEC.2013.40},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/apsec.2013.40}}

@article{Abid:2013,
	Author = {Mehmood, Abid and Jawawi, Dayang},
	Date-Added = {2019-04-28 22:49:41 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Journal = {International Journal of Software Engineering and Its Applications},
	Pages = {207-218},
	Title = {Aspect-Oriented Code Generation for Integration of Aspect Orientation and Model-Driven Engineering},
	Volume = {7},
	Year = {2013}}

@article{Vanhanen:2013,
	Author = {VANHANEN, JARI and M{\"A}NTYL{\"A}, MIKA V.},
	Date-Added = {2019-04-28 22:48:04 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1142/s0218194013500381},
	Issn = {1793-6403},
	Journal = {International Journal of Software Engineering and Knowledge Engineering},
	Number = {09},
	Pages = {1221--1267},
	Publisher = {World Scientific Pub Co Pte Lt},
	Title = {A SYSTEMATIC MAPPING STUDY OF EMPIRICAL STUDIES ON THE USE OF PAIR PROGRAMMING IN INDUSTRY},
	Url = {http://dx.doi.org/10.1142/S0218194013500381},
	Volume = {23},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1142/S0218194013500381},
	Bdsk-Url-2 = {http://dx.doi.org/10.1142/s0218194013500381}}

@article{Laguna:2013,
	Author = {Laguna, Miguel A. and Crespo, Yania},
	Date-Added = {2019-04-28 22:47:28 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.scico.2012.05.003},
	Issn = {0167-6423},
	Journal = {Science of Computer Programming},
	Number = {8},
	Pages = {1010--1034},
	Publisher = {Elsevier BV},
	Title = {A systematic mapping study on software product line evolution: From legacy system reengineering to product line refactoring},
	Url = {http://dx.doi.org/10.1016/j.scico.2012.05.003},
	Volume = {78},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.scico.2012.05.003}}

@article{Kaisti:2013,
	Author = {Kaisti, Matti and Rantala, Ville and Mujunen, Tapio and Hyrynsalmi, Sami and K{\"o}nn{\"o}l{\"a}, Kaisa and M{\"a}kil{\"a}, Tuomas and Lehtonen, Teijo},
	Date-Added = {2019-04-28 22:46:48 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1186/1687-3963-2013-15},
	Issn = {1687-3963},
	Journal = {EURASIP Journal on Embedded Systems},
	Number = {1},
	Publisher = {Springer Nature},
	Title = {Agile methods for embedded systems development - a literature review and a mapping study},
	Url = {http://dx.doi.org/10.1186/1687-3963-2013-15},
	Volume = {2013},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1186/1687-3963-2013-15}}

@article{Banerjee:2013,
	Abstract = {Context
GUI testing is system testing of a software that has a graphical-user interface (GUI) front-end. Because system testing entails that the entire software system, including the user interface, be tested as a whole, during GUI testing, test cases---modeled as sequences of user input events---are developed and executed on the software by exercising the GUI's widgets (e.g., text boxes and clickable buttons). More than 230 articles have appeared in the area of GUI testing since 1991.
Objective
In this paper, we study this existing body of knowledge using a systematic mapping (SM).
Method
The SM is conducted using the guidelines proposed by Petersen et al. We pose three sets of research questions. We define selection and exclusion criteria. From the initial pool of 230 articles, published in years 1991--2011, our final pool consisted of 136 articles. We systematically develop a classification scheme and map the selected articles to this scheme.
Results
We present two types of results. First, we report the demographics and bibliometrics trends in this domain, including: top-cited articles, active researchers, top venues, and active countries in this research area. Moreover, we derive the trends, for instance, in terms of types of articles, sources of information to derive test cases, types of evaluations used in articles, etc. Our second major result is a publicly-accessible repository that contains all our mapping data. We plan to update this repository on a regular basis, making it a ``live'' resource for all researchers.
Conclusion
Our SM provides an overview of existing GUI testing approaches and helps spot areas in the field that require more attention from the research community. For example, much work is needed to connect academic model-based techniques with commercially available tools. To this end, studies are needed to compare the state-of-the-art in GUI testing in academic techniques and industrial tools.},
	Author = {Ishan Banerjee and Bao Nguyen and Vahid Garousi and Atif Memon},
	Date-Added = {2019-04-28 22:45:59 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2013.03.004},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Systematic mapping, GUI application, Testing, Paper repository, Bibliometrics},
	Number = {10},
	Pages = {1679 - 1694},
	Title = {Graphical user interface (GUI) testing: Systematic mapping and repository},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584913000669},
	Volume = {55},
	Year = {2013},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584913000669},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2013.03.004}}

@article{Mohabbati:2013,
	Abstract = {Context
Service-Orientation (SO) is a rapidly emerging paradigm for the design and development of adaptive and dynamic software systems. Software Product Line Engineering (SPLE) has also gained attention as a promising and successful software reuse development paradigm over the last decade and proven to provide effective solutions to deal with managing the growing complexity of software systems.
Objective
This study aims at characterizing and identifying the existing research on employing and leveraging SO and SPLE.
Method
We conducted a systematic mapping study to identify and analyze related literature. We identified 81 primary studies, dated from 2000--2011 and classified them with respect to research focus, types of research and contribution.
Result
The mapping synthesizes the available evidence about combining the synergy points and integration of SO and SPLE. The analysis shows that the majority of studies focus on service variability modeling and adaptive systems by employing SPLE principles and approaches. In particular, SPLE approaches, especially feature-oriented approaches for variability modeling, have been applied to the design and development of service-oriented systems. While SO is employed in software product line contexts for the realization of product lines to reconcile the flexibility, scalability and dynamism in product derivations thereby creating dynamic software product lines.
Conclusion
Our study summarizes and characterizes the SO and SPLE topics researchers have investigated over the past decade and identifies promising research directions as due to the synergy generated by integrating methods and techniques from these two areas.},
	Author = {Bardia Mohabbati and Mohsen Asadi and Dragan Ga{\v s}evi{\'c} and Marek Hatala and Hausi A. M{\"u}ller},
	Date-Added = {2019-04-28 22:45:30 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2013.05.006},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Systematic mapping, Service-oriented architecture, Software product lines},
	Number = {11},
	Pages = {1845 - 1859},
	Title = {Combining service-orientation and software product line engineering: A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584913001274},
	Volume = {55},
	Year = {2013},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584913001274},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2013.05.006}}

@article{Mehmood:2013,
	Abstract = {Context
Model-driven code generation is being increasingly applied to enhance software development from perspectives of maintainability, extensibility and reusability. However, aspect-oriented code generation from models is an area that is currently underdeveloped.
Objective
In this study we provide a survey of existing research on aspect-oriented modeling and code generation to discover current work and identify needs for future research.
Method
A systematic mapping study was performed to find relevant studies. Classification schemes have been defined and the 65 selected primary studies have been classified on the basis of research focus, contribution type and research type.
Results
The papers of solution proposal research type are in a majority. All together aspect-oriented modeling appears being the most focused area divided into modeling notations and process (36%) and model composition and interaction management (26%). The majority of contributions are methods.
Conclusion
Aspect-oriented modeling and composition mechanisms have been significantly discussed in existing literature while more research is needed in the area of model-driven code generation. Furthermore, we have observed that previous research has frequently focused on proposing solutions and thus there is need for research that validates and evaluates the existing proposals in order to provide firm foundations for aspect-oriented model-driven code generation.},
	Author = {Abid Mehmood and Dayang N.A. Jawawi},
	Date-Added = {2019-04-28 22:45:04 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2012.09.003},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Aspect-oriented software development, Model-driven engineering, Code generation, Systematic map},
	Note = {Special Section: Component-Based Software Engineering (CBSE), 2011},
	Number = {2},
	Pages = {395 - 411},
	Title = {Aspect-oriented model-driven code generation: A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584912001863},
	Volume = {55},
	Year = {2013},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584912001863},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2012.09.003}}

@article{Pergher:2013,
	Author = {Pergher, Massimiliano and Rossi, Bruno},
	Date-Added = {2019-04-28 22:44:37 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/empire.2013.6615215},
	Isbn = {9781479910113},
	Journal = {2013 3rd International Workshop on Empirical Requirements Engineering (EmpiRE)},
	Publisher = {IEEE},
	Title = {Requirements prioritization in software engineering: A systematic mapping study},
	Url = {http://dx.doi.org/10.1109/EmpiRE.2013.6615215},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/EmpiRE.2013.6615215},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/empire.2013.6615215}}

@article{Costa:2013,
	Author = {Costa, Catarina and Murta, Leonardo},
	Date-Added = {2019-04-28 22:44:08 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/icgse.2013.19},
	Isbn = {9780769550572},
	Journal = {2013 IEEE 8th International Conference on Global Software Engineering},
	Publisher = {IEEE},
	Title = {Version Control in Distributed Software Development: A Systematic Mapping Study},
	Url = {http://dx.doi.org/10.1109/ICGSE.2013.19},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICGSE.2013.19},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/icgse.2013.19}}

@article{Cedillo:2013,
	Author = {Cedillo, Priscila and Fernandez, Adrian and Insfran, Emilio and Abrah{\~a}o, Silvia},
	Date-Added = {2019-04-28 22:43:35 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1007/978-3-319-04244-2_8},
	Isbn = {9783319042442},
	Issn = {1611-3349},
	Journal = {Lecture Notes in Computer Science},
	Pages = {66--78},
	Publisher = {Springer International Publishing},
	Title = {Quality of Web Mashups: A Systematic Mapping Study},
	Url = {http://dx.doi.org/10.1007/978-3-319-04244-2_8},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/978-3-319-04244-2_8}}

@article{Catal:2013,
	Author = {Catal, Cagatay and Atalay, Muratcan},
	Date-Added = {2019-04-28 22:43:03 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/itng.2013.102},
	Isbn = {9780769549675},
	Journal = {2013 10th International Conference on Information Technology: New Generations},
	Publisher = {IEEE},
	Title = {A Systematic Mapping Study on Architectural Analysis},
	Url = {http://dx.doi.org/10.1109/ITNG.2013.102},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ITNG.2013.102},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/itng.2013.102}}

@article{Catal:2012,
	Author = {Catal, Cagatay and Mishra, Deepti},
	Date-Added = {2019-04-28 22:42:29 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1007/s11219-012-9181-z},
	Issn = {1573-1367},
	Journal = {Software Quality Journal},
	Number = {3},
	Pages = {445--478},
	Publisher = {Springer Nature},
	Title = {Test case prioritization: a systematic mapping study},
	Url = {http://dx.doi.org/10.1007/s11219-012-9181-z},
	Volume = {21},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s11219-012-9181-z}}

@article{Rosli:2013,
	Author = {Rosli, Marshima Mohd and Tempero, Ewan and Luxton-Reilly, Andrew},
	Date-Added = {2019-04-28 22:41:59 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/apsec.2013.26},
	Isbn = {9781479921430},
	Journal = {2013 20th Asia-Pacific Software Engineering Conference (APSEC)},
	Publisher = {IEEE},
	Title = {Can We Trust Our Results? A Mapping Study on Data Quality},
	Url = {http://dx.doi.org/10.1109/APSEC.2013.26},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/APSEC.2013.26},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/apsec.2013.26}}

@article{Borges:2013,
	Author = {Borges, Alex and Soares, S{\'e}rgio and Meira, Silvio and Tomaz, Hil{\'a}rio and Rocha, Rodrigo and Costa, Catarina},
	Date-Added = {2019-04-28 22:41:13 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1145/2460999.2461022},
	Isbn = {9781450318488},
	Journal = {Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering - EASE '13},
	Publisher = {ACM Press},
	Title = {Ontologies supporting the distributed software development},
	Url = {http://dx.doi.org/10.1145/2460999.2461022},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2460999.2461022}}

@article{Bandi:2013,
	Author = {Bandi, Ajay and Williams, Byron J. and Allen, Edward B.},
	Date-Added = {2019-04-28 22:40:45 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/wcre.2013.6671309},
	Isbn = {9781479929313},
	Journal = {2013 20th Working Conference on Reverse Engineering (WCRE)},
	Publisher = {IEEE},
	Title = {Empirical evidence of code decay: A systematic mapping study},
	Url = {http://dx.doi.org/10.1109/WCRE.2013.6671309},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/WCRE.2013.6671309},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/wcre.2013.6671309}}

@article{Steinmacher:2013,
	Abstract = {The developers' physical dispersion in Distributed Software Development (DSD) imposes challenges related to awareness support during collaboration in such scenario. In this paper, we present a systematic literature review and mapping that gathered, analyzed, and classified studies that improve awareness support in DSD, providing an overview of the area. Our initial search returned 1967 papers, of which 91 were identified as reporting some awareness support to DSD. These papers were then analyzed, and classified according to the 3{\^A} C collaboration model and to the Gutwin et al. Awareness Framework. Our findings suggest that awareness in DSD is gaining increasingly attention, 71 out of 91 papers were published from 2006 to 2010. Most part of the papers presented tools with some awareness support. The classification showed that the coordination is by far the most supported dimension of the 3C model, while communication is the less explored. It also showed that workspace awareness elements play a central role on DSD collaboration.},
	Author = {Steinmacher, Igor and Chaves, Ana Paula and Gerosa, Marco Aur{\'e}lio},
	Date-Added = {2019-04-28 22:40:05 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Day = {01},
	Doi = {10.1007/s10606-012-9164-4},
	Issn = {1573-7551},
	Journal = {Computer Supported Cooperative Work (CSCW)},
	Number = {2},
	Pages = {113--158},
	Title = {Awareness Support in Distributed Software Development: A Systematic Review and Mapping of the Literature},
	Url = {https://doi.org/10.1007/s10606-012-9164-4},
	Volume = {22},
	Year = {2012},
	Bdsk-Url-1 = {https://doi.org/10.1007/s10606-012-9164-4}}

@article{Garousi:2013,
	Abstract = {Context
The Web has had a significant impact on all aspects of our society. As our society relies more and more on the Web, the dependability of web applications has become increasingly important. To make these applications more dependable, for the past decade researchers have proposed various techniques for testing web-based software applications. Our literature search for related studies retrieved 147 papers in the area of web application testing, which have appeared between 2000 and 2011.
Objective
As this research area matures and the number of related papers increases, it is important to systematically identify, analyze, and classify the publications and provide an overview of the trends in this specialized field.
Method
We review and structure the body of knowledge related to web application testing through a systematic mapping (SM) study. As part of this study, we pose two sets of research questions, define selection and exclusion criteria, and systematically develop and refine a classification schema. In addition, we conduct a bibliometrics analysis of the papers included in our study.
Results
Our study includes a set of 79 papers (from the 147 retrieved papers) published in the area of web application testing between 2000 and 2011. We present the results of our systematic mapping study. Our mapping data is available through a publicly-accessible repository. We derive the observed trends, for instance, in terms of types of papers, sources of information to derive test cases, and types of evaluations used in papers. We also report the demographics and bibliometrics trends in this domain, including top-cited papers, active countries and researchers, and top venues in this research area.
Conclusion
We discuss the emerging trends in web application testing, and discuss the implications for researchers and practitioners in this area. The results of our systematic mapping can help researchers to obtain an overview of existing web application testing approaches and indentify areas in the field that require more attention from the research community.},
	Author = {Vahid Garousi and Ali Mesbah and Aysu Betin-Can and Shabnam Mirshokraie},
	Date-Added = {2019-04-28 22:39:20 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2013.02.006},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Systematic mapping, Web application, Testing, Paper repository, Bibliometrics},
	Number = {8},
	Pages = {1374 - 1396},
	Title = {A systematic mapping study of web application testing},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584913000396},
	Volume = {55},
	Year = {2013},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584913000396},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2013.02.006}}

@article{Marshall:2013,
	Author = {Marshall, Christopher and Brereton, Pearl},
	Date-Added = {2019-04-28 22:38:53 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/esem.2013.32},
	Isbn = {9780769550565},
	Journal = {2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement},
	Publisher = {IEEE},
	Title = {Tools to Support Systematic Literature Reviews in Software Engineering: A Mapping Study},
	Url = {http://dx.doi.org/10.1109/ESEM.2013.32},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ESEM.2013.32},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/esem.2013.32}}

@article{Li:2013,
	Abstract = {Context
Knowledge management technologies have been employed across software engineering activities for more than two decades. Knowledge-based approaches can be used to facilitate software architecting activities (e.g., architectural evaluation). However, there is no comprehensive understanding on how various knowledge-based approaches (e.g., knowledge reuse) are employed in software architecture.
Objective
This work aims to collect studies on the application of knowledge-based approaches in software architecture and make a classification and thematic analysis on these studies, in order to identify the gaps in the existing application of knowledge-based approaches to various architecting activities, and promising research directions.
Method
A systematic mapping study is conducted for identifying and analyzing the application of knowledge-based approaches in software architecture, covering the papers from major databases, journals, conferences, and workshops, published between January 2000 and March 2011.
Results
Fifty-five studies were selected and classified according to the architecting activities they contribute to and the knowledge-based approaches employed. Knowledge capture and representation (e.g., using an ontology to describe architectural elements and their relationships) is the most popular approach employed in architecting activities. Knowledge recovery (e.g., documenting past architectural design decisions) is an ignored approach that is seldom used in software architecture. Knowledge-based approaches are mostly used in architectural evaluation, while receive the least attention in architecture impact analysis and architectural implementation.
Conclusions
The study results show an increased interest in the application of knowledge-based approaches in software architecture in recent years. A number of knowledge-based approaches, including knowledge capture and representation, reuse, sharing, recovery, and reasoning, have been employed in a spectrum of architecting activities. Knowledge-based approaches have been applied to a wide range of application domains, among which ``Embedded software'' has received the most attention.},
	Author = {Zengyang Li and Peng Liang and Paris Avgeriou},
	Date-Added = {2019-04-28 22:38:06 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2012.11.005},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Software architecture, Architecting activity, Knowledge-based approach, Systematic mapping study},
	Number = {5},
	Pages = {777 - 794},
	Title = {Application of knowledge-based approaches in software architecture: A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584912002315},
	Volume = {55},
	Year = {2013},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584912002315},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2012.11.005}}

@article{Rahman:2013,
	Author = {abdul rahman, Noorihan and Sahibuddin, Shamsul},
	Date-Added = {2019-04-28 22:37:32 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.7763/LNSE.2013.V1.24},
	Journal = {Lecture Notes on Software Engineering},
	Pages = {106-111},
	Title = {A Systematic Mapping Study on Requirements Elicitation Techniques in Collaborative Application},
	Year = {2013},
	Bdsk-Url-1 = {https://doi.org/10.7763/LNSE.2013.V1.24}}

@inproceedings{Durelli:2012,
	Author = {Rafael Serapilha Durelli and Vi{\'n}ıcius H. S. Durelli},
	Date-Added = {2019-04-28 22:35:14 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Title = {A Systematic Mapping Study on Formal Methods Applied to Crosscutting Concerns Mining},
	Year = {2012}}

@article{Borg:2013,
	Author = {Borg, Markus and Runeson, Per and Ard{\"o}, Anders},
	Date-Added = {2019-04-28 22:31:48 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1007/s10664-013-9255-y},
	Issn = {1573-7616},
	Journal = {Empirical Software Engineering},
	Number = {6},
	Pages = {1565--1616},
	Publisher = {Springer Nature},
	Title = {Recovering from a decade: a systematic mapping of information retrieval approaches to software traceability},
	Url = {http://dx.doi.org/10.1007/s10664-013-9255-y},
	Volume = {19},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s10664-013-9255-y}}

@article{Durelli:2014,
	Author = {Durelli, Rafael S. and Santibanez, Daniel S. M. and Marinho, Bruno and Honda, Raphael and Delamaro, Marcio E. and Anquetil, Nicolas and de Camargo, Valter Vieira},
	Date-Added = {2019-04-28 22:29:40 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/iri.2014.7051941},
	Isbn = {9781479958801},
	Journal = {Proceedings of the 2014 IEEE 15th International Conference on Information Reuse and Integration (IEEE IRI 2014)},
	Publisher = {IEEE},
	Title = {A mapping study on architecture-driven modernization},
	Url = {http://dx.doi.org/10.1109/IRI.2014.7051941},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/IRI.2014.7051941},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/iri.2014.7051941}}

@article{Torre:2014,
	Author = {Torre, Damiano and Labiche, Yvan and Genero, Marcela},
	Date-Added = {2019-04-28 22:28:45 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1145/2601248.2601292},
	Isbn = {9781450324762},
	Journal = {Proceedings of the 18th International Conference on Evaluation and Assessment in Software Engineering - EASE '14},
	Publisher = {ACM Press},
	Title = {On collecting and validating UML consistency rules: a research proposal},
	Url = {http://dx.doi.org/10.1145/2601248.2601292},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2601248.2601292}}

@inbook{Mustafa:2014,
	Author = {Mustafa, Shayma and bin Deris, Safaai and Mohamad, Radziah},
	Date-Added = {2019-04-28 22:27:59 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.3233/978-1-61499-434-3-703},
	Title = {Systematic Mapping Study in Automatic Test Case Generation},
	Year = {2014},
	Bdsk-Url-1 = {https://doi.org/10.3233/978-1-61499-434-3-703}}

@inproceedings{Borges:2014a,
	Acmid = {2652572},
	Address = {New York, NY, USA},
	Articleno = {50},
	Author = {Borges, Alex and Ferreira, Waldemar and Barreiros, Emanoel and Almeida, Adauto and Fonseca, Liliane and Teixeira, Eudis and Silva, Diogo and Alencar, Aline and Soares, Sergio},
	Booktitle = {Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement},
	Date-Added = {2019-04-28 22:19:07 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1145/2652524.2652572},
	Isbn = {978-1-4503-2774-9},
	Keywords = {EASE, ESEJ, ESEM, empirical software engineering, empirical strategies, support mechanisms, systematic mapping study},
	Location = {Torino, Italy},
	Numpages = {4},
	Pages = {50:1--50:4},
	Publisher = {ACM},
	Series = {ESEM '14},
	Title = {Support Mechanisms to Conduct Empirical Studies in Software Engineering},
	Url = {http://doi.acm.org/10.1145/2652524.2652572},
	Year = {2014},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2652524.2652572},
	Bdsk-Url-2 = {https://doi.org/10.1145/2652524.2652572}}

@article{Wiese:2014,
	Author = {Wiese, Igor Scaliante and C{\^o}go, Filipe Roseiro and R{\'e}, Reginaldo and Steinmacher, Igor and Gerosa, Marco Aur{\'e}lio},
	Date-Added = {2019-04-28 22:17:05 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1145/2639490.2639505},
	Isbn = {9781450328982},
	Journal = {Proceedings of the 10th International Conference on Predictive Models in Software Engineering - PROMISE '14},
	Publisher = {ACM Press},
	Title = {Social metrics included in prediction models on software engineering},
	Url = {http://dx.doi.org/10.1145/2639490.2639505},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2639490.2639505}}

@article{Zanoni:2014,
	Abstract = {ABSTRACT In this paper, an approach for information systems reverse engineering is proposed and applied. The aim is to support a unified perspective to the reverse engineering process of both data and software. At the state of the art, indeed, many methods, techniques, and tools for software reverse engineering have been proposed to support program comprehension, software maintenance, and software evolution. Other approaches and tools have been proposed for data reverse engineering, with the aim, for example, to provide complete and up-to-date documentation of legacy databases. However, the two engineering communities often worked independently, and very few approaches addressed the reverse engineering of both data and software as information system's constituencies. Hence, a higher integration is needed to support a better co-evolution of databases and programs, in an environment often characterized by high availability of data and volatility of information flows. Accordingly, the approach we propose leverages the detection of object-relational mapping design patterns to build a conceptual schema of the software under analysis. Then, the conceptual schema is mapped to the domain model of the system, to support the design of the evolution of the information system itself. The approach is evaluated on two large-scale open-source enterprise applications. Copyright {\copyright} 2014 John Wiley \& Sons, Ltd.},
	Author = {Zanoni, Marco and Perin, Fabrizio and Fontana, Francesca Arcelli and Viscusi, Gianluigi},
	Date-Added = {2019-04-28 22:16:21 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1002/smr.1656},
	Eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/smr.1656},
	Journal = {Journal of Software: Evolution and Process},
	Keywords = {conceptual schema, design pattern detection, object-relational mapping, reverse engineering},
	Number = {12},
	Pages = {1172-1192},
	Title = {Pattern detection for conceptual schema recovery in data-intensive systems},
	Url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/smr.1656},
	Volume = {26},
	Year = {2014},
	Bdsk-Url-1 = {https://onlinelibrary.wiley.com/doi/abs/10.1002/smr.1656},
	Bdsk-Url-2 = {https://doi.org/10.1002/smr.1656}}

@inproceedings{Vlietland:2014,
	Abstract = {IT functionality in companies is often delivered by a chain of interdependent software applications. To handle changing business demands in such chains, organizations increasingly employ agile methods such as Scrum. Usually, each Scrum team deals with a single application in the chain, necessitating alignment activities between the Scrum teams that jointly deliver IT functionality. We empirically investigate the alignment issues that occur in such chains of Scrum teams, and identify several that impact time to market. We base our observations on qualitative data from two case study environments.},
	Address = {Cham},
	Author = {Vlietland, Jan and van Vliet, Hans},
	Booktitle = {Software Business. Towards Continuous Value Delivery},
	Date-Added = {2019-04-28 22:14:55 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1007/978-3-319-08738-2_22},
	Editor = {Lassenius, Casper and Smolander, Kari},
	Isbn = {978-3-319-08738-2},
	Pages = {301--306},
	Publisher = {Springer International Publishing},
	Title = {Alignment Issues in Chains of Scrum Teams},
	Year = {2014},
	Bdsk-Url-1 = {https://doi.org/10.1007/978-3-319-08738-2_22}}

@article{Tofan:2014,
	Abstract = {Context
The software architecture of a system is the result of a set of architectural decisions. The topic of architectural decisions in software engineering has received significant attention in recent years. However, no systematic overview exists on the state of research on architectural decisions.
Objective
The goal of this study is to provide a systematic overview of the state of research on architectural decisions. Such an overview helps researchers reflect on previous research and plan future research. Furthermore, such an overview helps practitioners understand the state of research, and how research results can help practitioners in their architectural decision-making.
Method
We conducted a systematic mapping study, covering studies published between January 2002 and January 2012. We defined six research questions. We queried six reference databases and obtained an initial result set of 28,895 papers. We followed a search and filtering process that resulted in 144 relevant papers.
Results
After classifying the 144 relevant papers for each research question, we found that current research focuses on documenting architectural decisions. We found that only several studies describe architectural decisions from the industry. We identified potential future research topics: domain-specific architectural decisions (such as mobile), achieving specific quality attributes (such as reliability or scalability), uncertainty in decision-making, and group architectural decisions. Regarding empirical evaluations of the papers, around half of the papers use systematic empirical evaluation approaches (such as surveys, or case studies). Still, few papers on architectural decisions use experiments.
Conclusion
Our study confirms the increasing interest in the topic of architectural decisions. This study helps the community reflect on the past ten years of research on architectural decisions. Researchers are offered a number of promising future research directions, while practitioners learn what existing papers offer.},
	Author = {Dan Tofan and Matthias Galster and Paris Avgeriou and Wes Schuitema},
	Date-Added = {2019-04-28 22:10:14 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2014.03.009},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Software architecture, Architectural decisions, Systematic mapping study},
	Number = {8},
	Pages = {850 - 872},
	Title = {Past and future of software architectural decisions -- A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584914000706},
	Volume = {56},
	Year = {2014},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584914000706},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2014.03.009}}

@article{Paternoster:2014,
	Abstract = {Context
Software startups are newly created companies with no operating history and fast in producing cutting-edge technologies. These companies develop software under highly uncertain conditions, tackling fast-growing markets under severe lack of resources. Therefore, software startups present a unique combination of characteristics which pose several challenges to software development activities.
Objective
This study aims to structure and analyze the literature on software development in startup companies, determining thereby the potential for technology transfer and identifying software development work practices reported by practitioners and researchers.
Method
We conducted a systematic mapping study, developing a classification schema, ranking the selected primary studies according their rigor and relevance, and analyzing reported software development work practices in startups.
Results
A total of 43 primary studies were identified and mapped, synthesizing the available evidence on software development in startups. Only 16 studies are entirely dedicated to software development in startups, of which 10 result in a weak contribution (advice and implications (6); lesson learned (3); tool (1)). Nineteen studies focus on managerial and organizational factors. Moreover, only 9 studies exhibit high scientific rigor and relevance. From the reviewed primary studies, 213 software engineering work practices were extracted, categorized and analyzed.
Conclusion
This mapping study provides the first systematic exploration of the state-of-art on software startup research. The existing body of knowledge is limited to a few high quality studies. Furthermore, the results indicate that software engineering work practices are chosen opportunistically, adapted and configured to provide value under the constrains imposed by the startup context.},
	Author = {Nicol{\`o} Paternoster and Carmine Giardino and Michael Unterkalmsteiner and Tony Gorschek and Pekka Abrahamsson},
	Date-Added = {2019-04-28 22:09:45 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {https://doi.org/10.1016/j.infsof.2014.04.014},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Software development, Startups, Systematic mapping study},
	Number = {10},
	Pages = {1200 - 1218},
	Title = {Software development in startup companies: A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584914000950},
	Volume = {56},
	Year = {2014},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584914000950},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2014.04.014}}

@article{Santos:2014,
	Author = {Santos, Ronnie E. S. and de Magalh{\~a}es, Cleyton V. C. and da Silva, Fabio Q. B.},
	Date-Added = {2019-04-28 22:08:56 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1145/2652524.2652553},
	Isbn = {9781450327749},
	Journal = {Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement - ESEM '14},
	Publisher = {ACM Press},
	Title = {The use of systematic reviews in evidence based software engineering},
	Url = {http://dx.doi.org/10.1145/2652524.2652553},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2652524.2652553}}

@inproceedings{Carlos:2014,
	Author = {Souza, Francisco Carlos and Souza, M and Papadakis, Mike and Durelli, Vinicius and Delamaro, M{\'a}rcio},
	Booktitle = {Workshop on Experimental Software Engineering (ESELAW'14)},
	Date-Added = {2019-04-28 22:07:38 +0100},
	Date-Modified = {2020-02-11 10:40:36 +0100},
	Doi = {10.13140/RG.2.1.3699.9209},
	Title = {Test Data Generation Techniques for Mutation Testing: A Systematic Mapping},
	Year = {2014},
	Bdsk-Url-1 = {https://doi.org/10.13140/RG.2.1.3699.9209}}

@article{Penzenstadler:2014,
	Author = {Penzenstadler, Birgit and Raturi, Ankita and Richardson, Debra and Calero, Coral and Femmer, Henning and Franch, Xavier},
	Date-Added = {2019-04-28 22:05:17 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1145/2601248.2601256},
	Isbn = {9781450324762},
	Journal = {Proceedings of the 18th International Conference on Evaluation and Assessment in Software Engineering - EASE '14},
	Publisher = {ACM Press},
	Title = {Systematic mapping study on software engineering for sustainability (SE4S)},
	Url = {http://dx.doi.org/10.1145/2601248.2601256},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2601248.2601256}}

@article{Dasanayake:2014,
	Author = {Dasanayake, Sandun and Markkula, Jouni and Oivo, Markku},
	Date-Added = {2019-04-28 22:04:43 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1145/2601248.2601290},
	Isbn = {9781450324762},
	Journal = {Proceedings of the 18th International Conference on Evaluation and Assessment in Software Engineering - EASE '14},
	Publisher = {ACM Press},
	Title = {Concerns in software development},
	Url = {http://dx.doi.org/10.1145/2601248.2601290},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2601248.2601290}}

@article{Vargas:2014,
	Author = {Vargas, Juan A. and Garc{\'\i}a-Mundo, Lilia and Genero, Marcela and Piattini, Mario},
	Date-Added = {2019-04-28 22:04:15 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1145/2601248.2601261},
	Isbn = {9781450324762},
	Journal = {Proceedings of the 18th International Conference on Evaluation and Assessment in Software Engineering - EASE '14},
	Publisher = {ACM Press},
	Title = {A systematic mapping study on serious game quality},
	Url = {http://dx.doi.org/10.1145/2601248.2601261},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2601248.2601261}}

@article{Borges:2014,
	Author = {de Sousa Borges, Simone and Durelli, Vinicius H. S. and Reis, Helena Macedo and Isotani, Seiji},
	Date-Added = {2019-04-28 22:03:45 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1145/2554850.2554956},
	Isbn = {9781450324694},
	Journal = {Proceedings of the 29th Annual ACM Symposium on Applied Computing - SAC '14},
	Publisher = {ACM Press},
	Title = {A systematic mapping on gamification applied to education},
	Url = {http://dx.doi.org/10.1145/2554850.2554956},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2554850.2554956}}

@article{Assuncao:2014,
	Author = {Assun{\c c}{\~a}o, Wesley Klewerton Guez and Vergilio, Silvia Regina},
	Date-Added = {2019-04-28 22:02:40 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1145/2647908.2655967},
	Isbn = {9781450327398},
	Journal = {Proceedings of the 18th International Software Product Line Conference on Companion Volume for Workshops, Demonstrations and Tools - SPLC '14},
	Publisher = {ACM Press},
	Title = {Feature location for software product line migration},
	Url = {http://dx.doi.org/10.1145/2647908.2655967},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2647908.2655967}}

@article{Diebold:2014,
	Author = {Diebold, Philipp and Dahlem, Marc},
	Date-Added = {2019-04-28 22:02:12 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1145/2601248.2601254},
	Isbn = {9781450324762},
	Journal = {Proceedings of the 18th International Conference on Evaluation and Assessment in Software Engineering - EASE '14},
	Publisher = {ACM Press},
	Title = {Agile practices in practice},
	Url = {http://dx.doi.org/10.1145/2601248.2601254},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2601248.2601254}}

@article{Febrero:2014,
	Abstract = {Context
Software Reliability (SR) is a highly active and dynamic research area. Published papers have approached this topic from various and heterogeneous points of view, resulting in a rich body of literature on this topic. The counterpart to this is the considerable complexity of this body of knowledge.
Objective
The objective of this study is to obtain a panorama and a taxonomy of Software Reliability Modeling (SRM).
Method
In order to do this, a Systematic Mapping Study (SMS) which analyzes and structures the literature on Software Reliability Modeling has been carried out.
Results
A total of 972 works were obtained as a result of the Systematic Mapping Study. On the basis of the more than 500 selected primary studies found, the results obtained show an increasing diversity of work.
Conclusion
Although it was discovered that Software Reliability Growth Models (SRGM) are still the most common modeling technique, it was also found that both the modeling based on static and architectural characteristics and the models based on Artificial Intelligence and automatic learning techniques are increasingly more apparent in literature. We have also observed that most Software Reliability Modeling efforts take place in the Pacific Rim area and in academic environments. Industrial initiatives are as yet marginal, and would appear to be primarily located in the USA.},
	Author = {Felipe Febrero and Coral Calero and M {\'A}ngeles Moraga},
	Date-Added = {2019-04-28 22:01:33 +0100},
	Date-Modified = {2020-02-11 09:50:59 +0100},
	Doi = {10.1016/j.infsof.2014.03.006},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Software Reliability, Modeling, Systematic Mapping, Taxonomy},
	Number = {8},
	Pages = {839 - 849},
	Title = {A Systematic Mapping Study of Software Reliability Modeling},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584914000676},
	Volume = {56},
	Year = {2014},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584914000676},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2014.03.006}}

@article{Seriai:2014,
	Author = {Seriai, Abderrahmane and Benomar, Omar and Cerat, Benjamin and Sahraoui, Houari},
	Date-Added = {2019-04-28 22:01:04 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/vissoft.2014.19},
	Isbn = {9781479961504},
	Journal = {2014 Second IEEE Working Conference on Software Visualization},
	Publisher = {IEEE},
	Title = {Validation of Software Visualization Tools: A Systematic Mapping Study},
	Url = {http://dx.doi.org/10.1109/VISSOFT.2014.19},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/VISSOFT.2014.19},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/vissoft.2014.19}}

@article{Gonzalez:2014,
	Author = {Gonz{\'a}lez, Jorge E. and Juristo, Natalia and Vegas, Sira},
	Date-Added = {2019-04-28 22:00:34 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1145/2652524.2652569},
	Isbn = {9781450327749},
	Journal = {Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement - ESEM '14},
	Publisher = {ACM Press},
	Title = {A systematic mapping study on testing technique experiments},
	Url = {http://dx.doi.org/10.1145/2652524.2652569},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2652524.2652569}}

@article{Qiu:2014,
	Author = {Qiu, Dong and Li, Bixin and Ji, Shunhui and Leung, Hareton},
	Date-Added = {2019-04-28 22:00:03 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1145/2631685},
	Issn = {0360-0300},
	Journal = {ACM Computing Surveys},
	Number = {2},
	Pages = {1--46},
	Publisher = {Association for Computing Machinery (ACM)},
	Title = {Regression Testing of Web Service: A Systematic Mapping Study},
	Url = {http://dx.doi.org/10.1145/2631685},
	Volume = {47},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2631685}}

@article{Jurca:2014,
	Author = {Jurca, Gabriela and Hellmann, Theodore D. and Maurer, Frank},
	Date-Added = {2019-04-28 21:59:38 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/agile.2014.17},
	Isbn = {9781479957989},
	Journal = {2014 Agile Conference},
	Publisher = {IEEE},
	Title = {Integrating Agile and User-Centered Design: A Systematic Mapping and Review of Evaluation and Validation Studies of Agile-UX},
	Url = {http://dx.doi.org/10.1109/AGILE.2014.17},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/AGILE.2014.17},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/agile.2014.17}}

@article{Castelluccia:2014,
	Acmid = {2579294},
	Address = {New York, NY, USA},
	Author = {Castelluccia, Daniela and Boffoli, Nicola},
	Date-Added = {2019-04-28 21:58:50 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1145/2579281.2579294},
	Issn = {0163-5948},
	Issue_Date = {March 2014},
	Journal = {SIGSOFT Softw. Eng. Notes},
	Keywords = {empirical study, mapping study, product line development, service-oriented architecture, service-oriented computing, software product line, variability management},
	Number = {2},
	Numpages = {6},
	Pages = {1-6},
	Publisher = {ACM},
	Title = {Service-oriented Product Lines: A Systematic Mapping Study},
	Url = {http://doi.acm.org/10.1145/2579281.2579294},
	Volume = {39},
	Year = {2014},
	Bdsk-Url-1 = {http://doi.acm.org/10.1145/2579281.2579294},
	Bdsk-Url-2 = {https://doi.org/10.1145/2579281.2579294}}

@article{Ardini:2014,
	Abstract = {There is a continual growth in the use of social computing within a breadth of business domains; such as marketing, public engagement and innovation management. Software engineering research, like other similar disciplines, has recently started to harness the power of social computing throughout the various development phases; from requirements elicitation to validation and maintenance and for the various methods of development and structures of development teams. However, despite this increasing effort, we still lack a clear picture of the current status of this research. To address that lack of knowledge, we conduct a systematic mapping study on the utilisation of social computing for software engineering. This will inform researchers and practitioners about the current status and progress of the field including the areas of current focus and the geographical and chronological distribution of the research. We do the mapping across a diversity of dimensions including the activities of software engineering, the types of research, the characteristics of social computing and the demographic attributes of the published work. Our study results show a growing interest in the field, mainly in academia, and a general trend towards developing designated social computing platforms and utilising them in mainly four software engineering areas: management, coding, requirements engineering, and maintenance and enhancement.},
	Author = {Amalia Ardini and Mahmood Hosseini and Amen Alrobai and Alimohammad Shahri and Keith Phalp and Raian Ali},
	Date-Added = {2019-04-28 21:57:41 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.cosrev.2014.08.002},
	Issn = {1574-0137},
	Journal = {Computer Science Review},
	Keywords = {Social computing, Software engineering, Systematic mapping},
	Pages = {75 - 93},
	Title = {Social computing for software engineering: A mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S1574013714000124},
	Volume = {13-14},
	Year = {2014},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S1574013714000124},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.cosrev.2014.08.002}}

@article{Cerqueira:2014,
	Abstract = {ABSTRACT Software maintenance starts as soon as the first artifacts are delivered and is essential for the success of the software. However, keeping maintenance activities and their related artifacts on track comes at a high cost. In this respect, change request (CR) repositories are fundamental in software maintenance. They facilitate the management of CRs and are also the central point to coordinate activities and communication among stakeholders. However, the benefits of CR repositories do not come without issues, and commonly occurring ones should be dealt with, such as the following: duplicate CRs, the large number of CRs to assign, or poorly described CRs. Such issues have led researchers to an increased interest in investigating CR repositories, by considering different aspects of software development and CR management. In this paper, we performed a systematic mapping study to characterize this research field. We analyzed 142 studies, which we classified in two ways. First, we classified the studies into different topics and grouped them into two dimensions: challenges and opportunities. Second, the challenge topics were classified in accordance with an existing taxonomy for information retrieval models. In addition, we investigated tools and services for CR management, to understand whether and how they addressed the topics identified. Copyright {\copyright} 2013 John Wiley \& Sons, Ltd.},
	Author = {Cavalcanti, Yguarat{\~a} Cerqueira and da Mota Silveira Neto, Paulo Anselmo and Machado, Ivan do Carmo and Vale, Tassio Ferreira and de Almeida, Eduardo Santana and Meira, Silvio Romero de Lemos},
	Date-Added = {2019-04-28 21:56:58 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1002/smr.1639},
	Eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1002/smr.1639},
	Journal = {Journal of Software: Evolution and Process},
	Keywords = {software maintenance, software evolution, software quality assurance, change request repository, bug report, bug tracking},
	Number = {7},
	Pages = {620-653},
	Title = {Challenges and opportunities for software change request repositories: a systematic mapping study},
	Url = {https://onlinelibrary.wiley.com/doi/abs/10.1002/smr.1639},
	Volume = {26},
	Year = {2014},
	Bdsk-Url-1 = {https://onlinelibrary.wiley.com/doi/abs/10.1002/smr.1639},
	Bdsk-Url-2 = {https://doi.org/10.1002/smr.1639}}

@article{Munir:2015,
	Author = {Munir, Hussan and Wnuk, Krzysztof and Runeson, Per},
	Date-Added = {2019-04-28 21:55:31 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1007/s10664-015-9380-x},
	Issn = {1573-7616},
	Journal = {Empirical Software Engineering},
	Number = {2},
	Pages = {684--723},
	Publisher = {Springer Nature},
	Title = {Open innovation in software engineering: a systematic mapping study},
	Url = {http://dx.doi.org/10.1007/s10664-015-9380-x},
	Volume = {21},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s10664-015-9380-x}}

@article{Rafique:2015,
	Author = {Rafique, Sajjad and Humayun, Mamoona and Hamid, Bushra and Abbas, Ansar and Akhtar, Muhammad and Iqbal, Kamil},
	Date-Added = {2019-04-28 21:55:00 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/snpd.2015.7176244},
	Isbn = {9781479986767},
	Journal = {2015 IEEE/ACIS 16th International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing (SNPD)},
	Publisher = {IEEE},
	Title = {Web application security vulnerabilities detection approaches: A systematic mapping study},
	Url = {http://dx.doi.org/10.1109/SNPD.2015.7176244},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/SNPD.2015.7176244},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/snpd.2015.7176244}}

@article{Enriquez:2015,
	Author = {Vargas-Enriquez, Juan and Garcia-Mundo, Lilia and Genero, Marcela and Piattini, Mario},
	Date-Added = {2019-04-28 21:54:28 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/vs-games.2015.7295763},
	Isbn = {9781479981021},
	Journal = {2015 7th International Conference on Games and Virtual Worlds for Serious Applications (VS-Games)},
	Publisher = {IEEE},
	Title = {A Systematic Mapping Study on Gamified Software Quality},
	Url = {http://dx.doi.org/10.1109/VS-GAMES.2015.7295763},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/VS-GAMES.2015.7295763},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/vs-games.2015.7295763}}

@article{Nascimento:2015,
	Author = {Nascimento, Debora M. C. and Almeida Bittencourt, Roberto and Chavez, Christina},
	Date-Added = {2019-04-28 21:53:52 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1080/08993408.2015.1033159},
	Issn = {1744-5175},
	Journal = {Computer Science Education},
	Number = {1},
	Pages = {67--114},
	Publisher = {Informa UK Limited},
	Title = {Open source projects in software engineering education: a mapping study},
	Url = {http://dx.doi.org/10.1080/08993408.2015.1033159},
	Volume = {25},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1080/08993408.2015.1033159}}

@article{Kuhrmann:2015,
	Author = {Kuhrmann, Marco and Konopka, Claudia and Nellemann, Peter and Diebold, Philipp and M{\"u}nch, J{\"u}rgen},
	Date-Added = {2019-04-28 21:52:31 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1145/2785592.2785600},
	Isbn = {9781450333467},
	Journal = {Proceedings of the 2015 International Conference on Software and System Process - ICSSP 2015},
	Publisher = {ACM Press},
	Title = {Software process improvement: where is the evidence?: initial findings from a systematic mapping study},
	Url = {http://dx.doi.org/10.1145/2785592.2785600},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2785592.2785600}}

@article{Garous_Yusifoglu:2015,
	Abstract = {Context
As a result of automated software testing, large amounts of software test code (script) are usually developed by software teams. Automated test scripts provide many benefits, such as repeatable, predictable, and efficient test executions. However, just like any software development activity, development of test scripts is tedious and error prone. We refer, in this study, to all activities that should be conducted during the entire lifecycle of test-code as Software Test-Code Engineering (STCE).
Objective
As the STCE research area has matured and the number of related studies has increased, it is important to systematically categorize the current state-of-the-art and to provide an overview of the trends in this field. Such summarized and categorized results provide many benefits to the broader community. For example, they are valuable resources for new researchers (e.g., PhD students) aiming to conduct additional secondary studies.
Method
In this work, we systematically classify the body of knowledge related to STCE through a systematic mapping (SM) study. As part of this study, we pose a set of research questions, define selection and exclusion criteria, and systematically develop and refine a systematic map.
Results
Our study pool includes a set of 60 studies published in the area of STCE between 1999 and 2012. Our mapping data is available through an online publicly-accessible repository. We derive the trends for various aspects of STCE. Among our results are the following: (1) There is an acceptable mix of papers with respect to different contribution facets in the field of STCE and the top two leading facets are tool (68%) and method (65%). The studies that presented new processes, however, had a low rate (3%), which denotes the need for more process-related studies in this area. (2) Results of investigation about research facet of studies and comparing our result to other SM studies shows that, similar to other fields in software engineering, STCE is moving towards more rigorous validation approaches. (3) A good mixture of STCE activities has been presented in the primary studies. Among them, the two leading activities are quality assessment and co-maintenance of test-code with production code. The highest growth rate for co-maintenance activities in recent years shows the importance and challenges involved in this activity. (4) There are two main categories of quality assessment activity: detection of test smells and oracle assertion adequacy. (5) JUnit is the leading test framework which has been used in about 50% of the studies. (6) There is a good mixture of SUT types used in the studies: academic experimental systems (or simple code examples), real open-source and commercial systems. (7) Among 41 tools that are proposed for STCE, less than half of the tools (45%) were available for download. It is good to have this percentile of tools to be available, although not perfect, since the availability of tools can lead to higher impact on research community and industry.
Conclusion
We discuss the emerging trends in STCE, and discuss the implications for researchers and practitioners in this area. The results of our systematic mapping can help researchers to obtain an overview of existing STCE approaches and spot areas in the field that require more attention from the research community.},
	Author = {Vahid Garousi Yusifo{\u g}lu and Yasaman Amannejad and Aysu Betin Can},
	Date-Added = {2019-04-28 21:51:53 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2014.06.009},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Systematic mapping, Survey, Study repository, Software test-code engineering, Development of test code, Quality assessment of test code},
	Pages = {123 - 147},
	Title = {Software test-code engineering: A systematic mapping},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584914001487},
	Volume = {58},
	Year = {2015},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584914001487},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2014.06.009}}

@inproceedings{Vinicius:2015,
	Author = {Fonseca, Vin{\'\i}cius and Barcellos, Monalessa and Falbo, Ricardo},
	Date-Added = {2019-04-28 21:51:15 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.18293/SEKE2015-058},
	Title = {Integration of Software Measurement Supporting Tools: A Mapping Study},
	Year = {2015},
	Bdsk-Url-1 = {https://doi.org/10.18293/SEKE2015-058}}

@article{Santos:2015,
	Author = {Santos, Alcemir Rodrigues and de Oliveira, Raphael Pereira and de Almeida, Eduardo Santana},
	Date-Added = {2019-04-28 21:49:29 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1145/2745802.2745806},
	Isbn = {9781450333504},
	Journal = {Proceedings of the 19th International Conference on Evaluation and Assessment in Software Engineering - EASE '15},
	Publisher = {ACM Press},
	Title = {Strategies for consistency checking on software product lines: a mapping study},
	Url = {http://dx.doi.org/10.1145/2745802.2745806},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2745802.2745806}}

@article{Ouhbi:2013a,
	Author = {Ouhbi, Sofia and Idri, Ali and Fern{\'a}ndez-Alem{\'a}n, Jos{\'e} Luis and Toval, Ambrosio},
	Date-Added = {2019-04-28 21:48:55 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1007/s00766-013-0192-5},
	Issn = {1432-010X},
	Journal = {Requirements Engineering},
	Number = {2},
	Pages = {119--138},
	Publisher = {Springer Nature},
	Title = {Requirements engineering education: a systematic mapping study},
	Url = {http://dx.doi.org/10.1007/s00766-013-0192-5},
	Volume = {20},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s00766-013-0192-5}}

@article{Abdelmaboud:2015,
	Abstract = {Context: Cloud computing is a new computing technology that provides services to consumers and businesses. Due to the increasing use of these services, the quality of service (QoS) of cloud computing has become an important and essential issue since there are many open challenges which need to be addressed related to trust in cloud services. Many research issues have been proposed in QoS approaches in the cloud computing area. Objective: The aim of this study is to survey current research on QoS approaches in cloud computing in order to identify where more emphasis should be placed in both current and future research directions. Method: A systematic mapping study was performed to find the related literature, and 67 articles were selected as primary studies that are classified in relation to the focus, research type and contribution type. Result: The majority of the articles are of the validation research type (64%). Infrastructure as a service (48%) was the largest research focus area, followed by software as a service (36%). The majority of contributions concerned methods (48%), followed by models (32%). Conclusion: The results of this study confirm that QoS approaches in cloud computing have become an important topic in the cloud computing area in recent years and there remain open challenges and gaps which require future research exploration. In particular, tools, metrics and evaluation research are needed in order to provide useful and trustworthy cloud computing services that deliver appropriate QoS.},
	Author = {Abdelzahir Abdelmaboud and Dayang N.A. Jawawi and Imran Ghani and Abubakar Elsafi and Barbara Kitchenham},
	Date-Added = {2019-04-28 21:48:19 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.jss.2014.12.015},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Quality of service, Cloud services, Systematic mapping study},
	Pages = {159 - 179},
	Title = {Quality of service approaches in cloud computing: A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0164121214002830},
	Volume = {101},
	Year = {2015},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0164121214002830},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.jss.2014.12.015}}

@article{Antti:2015,
	Author = {Knutas, Antti and Ikonen, Jouni and Porras, Jari},
	Date-Added = {2019-04-28 21:47:36 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Journal = {International Journal on Information Technologies & Security},
	Pages = {45-72},
	Title = {Computer-Supported Collaborative Learning in Software Engineering Education: A Systematic Mapping Study},
	Volume = {7},
	Year = {2015}}

@article{Pitangueira:2015,
	Abstract = {The selection and prioritization of software requirements represents an area of interest in Search-Based Software Engineering (SBSE) and its main focus is finding and selecting a set of requirements that may be part of a software release. This paper presents a systematic review and mapping that investigated, analyzed, categorized and classified the SBSE approaches that have been proposed to address software requirement selection and prioritization problems, reporting quantitative and qualitative assessment. Initially 39 papers returned from our search strategy in this area and they were analyzed by 18 previously established quality criteria. The results of this systematic review show which aspects of the requirements selection and prioritization problems were addressed by researchers, which approaches and search techniques are currently adopted to address these problems, as well as the strengths and weaknesses in this research area highlighted from the quality criteria.},
	Author = {Ant{\^o}nio Mauricio Pitangueira and Rita Suzana P. Maciel and M{\'a}rcio Barros},
	Date-Added = {2019-04-28 21:41:38 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.jss.2014.09.038},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Requirements selection, Requirements prioritization, Systematic review},
	Pages = {267 - 280},
	Title = {Software requirements selection and prioritization using SBSE approaches: A systematic review and mapping of the literature},
	Url = {http://www.sciencedirect.com/science/article/pii/S0164121214002118},
	Volume = {103},
	Year = {2015},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0164121214002118},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.jss.2014.09.038}}

@article{Pedreira:2015,
	Abstract = {Context
Gamification seeks for improvement of the user's engagement, motivation, and performance when carrying out a certain task, by means of incorporating game mechanics and elements, thus making that task more attractive. Much research work has studied the application of gamification in software engineering for increasing the engagement and results of developers.
Objective
The objective of this paper is to carry out a systematic mapping of the field of gamification in software engineering in an attempt to characterize the state of the art of this field identifying gaps and opportunities for further research.
Method
We carried out a systematic mapping with a view to finding the primary studies in the existing literature, which were later classified and analyzed according to four criteria: the software process area addressed, the gamification elements used, the type of research method followed, and the type of forum in which they were published. A subjective evaluation of the studies was also carried out to evaluate them in terms of methodology, empirical evidence, integration with the organization, and replicability.
Results
As a result of the systematic mapping we found 29 primary studies, published between January 2011 and June 2014. Most of them focus on software development, and to a lesser extent, requirements, project management, and other support areas. In the main, they consider very simple gamification mechanics such as points and badges, and few provide empirical evidence of the impact of gamification.
Conclusions
Existing research in the field is quite preliminary, and more research effort analyzing the impact of gamification in SE would be needed. Future research work should look at other game mechanics in addition to the basic ones and should tackle software process areas that have not been fully studied, such as requirements, project management, maintenance, or testing. Most studies share a lack of methodological support that would make their proposals replicable in other settings. The integration of gamification with an organization's existing tools is also an important challenge that needs to be taken up in this field.},
	Author = {Oscar Pedreira and F{\'e}lix Garc{\'\i}a and Nieves Brisaboa and Mario Piattini},
	Date-Added = {2019-04-28 21:41:03 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2014.08.007},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Gamification, Software engineering, Systematic mapping},
	Pages = {157 - 168},
	Title = {Gamification in software engineering -- A systematic mapping},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584914001980},
	Volume = {57},
	Year = {2015},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584914001980},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2014.08.007}}

@article{Paz:2015,
	Author = {Paz, Freddy and Pow-Sang, Jose Antonio},
	Date-Added = {2019-04-28 21:40:25 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/asea.2015.8},
	Isbn = {9781467398374},
	Journal = {2015 8th International Conference on Advanced Software Engineering & Its Applications (ASEA)},
	Publisher = {IEEE},
	Title = {Usability Evaluation Methods for Software Development: A Systematic Mapping Review},
	Url = {http://dx.doi.org/10.1109/ASEA.2015.8},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ASEA.2015.8},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/asea.2015.8}}

@article{Stevanetic:2015,
	Author = {Stevanetic, Srdjan and Zdun, Uwe},
	Date-Added = {2019-04-28 21:39:52 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1145/2745802.2745822},
	Isbn = {9781450333504},
	Journal = {Proceedings of the 19th International Conference on Evaluation and Assessment in Software Engineering - EASE '15},
	Publisher = {ACM Press},
	Title = {Software metrics for measuring the understandability of architectural structures},
	Url = {http://dx.doi.org/10.1145/2745802.2745822},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2745802.2745822}}

@article{Ingibergsson:2015,
	Author = {Ingibergsson, Johann Thor Mogensen and Schultz, Ulrik Pagh and Kuhrmann, Marco},
	Date-Added = {2019-04-28 21:39:12 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1007/978-3-319-26844-6_25},
	Isbn = {9783319268446},
	Issn = {1611-3349},
	Journal = {Lecture Notes in Computer Science},
	Pages = {335--352},
	Publisher = {Springer International Publishing},
	Title = {On the Use of Safety Certification Practices in Autonomous Field Robot Software Development: A Systematic Mapping Study},
	Url = {http://dx.doi.org/10.1007/978-3-319-26844-6_25},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/978-3-319-26844-6_25}}

@article{Ameller:2015,
	Abstract = {Context
Model-Driven Development (MDD) and Service-Oriented Architecture (SOA) are two challenging research areas in software engineering. MDD is about improving software development whilst SOA is a service-based conceptual development style, therefore investigating the available proposals in the literature to use MDD when developing SOA may be insightful. However, no studies have been found with this purpose.
Objective
This work aims at assessing the state of the art in MDD for SOA systems. It mainly focuses on: what are the characteristics of MDD approaches that support SOA; what types of SOA are supported; how do they handle non-functional requirements.
Method
We conducted a mapping study following a rigorous protocol. We identified the representative set of venues that should be included in the study. We applied a search string over the set of selected venues. As result, 129 papers were selected and analysed (both frequency analysis and correlation analysis) with respect to the defined classification criteria derived from the research questions. Threats to validity were identified and mitigated whenever possible.
Results
The analysis allows us to answer the research questions. We highlight: (1) predominance of papers from Europe and written by researchers only; (2) predominance of top-down transformation in software development activities; (3) inexistence of consolidated methods; (4) significant percentage of works without tool support; (5) SOA systems and service compositions more targeted than single services and SOA enterprise systems; (6) limited use of metamodels; (7) very limited use of NFRs; and (8) limited application in real cases.
Conclusion
This mapping study does not just provide the state of the art in the topic, but also identifies several issues that deserve investigation in the future, for instance the need of methods for activities other than software development (e.g., migration) or the need of conducting more real case studies.},
	Author = {David Ameller and Xavier Burgu{\'e}s and Oriol Collell and Dolors Costal and Xavier Franch and Mike P. Papazoglou},
	Date-Added = {2019-04-28 21:38:39 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2015.02.006},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Service-oriented architecture, Model-driven development, SOA, MDD, State of the art, Mapping study},
	Pages = {42 - 66},
	Title = {Development of service-oriented architectures using model-driven development: A mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584915000361},
	Volume = {62},
	Year = {2015},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584915000361},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2015.02.006}}

@article{Maplesden:2015,
	Author = {Maplesden, David and Tempero, Ewan and Hosking, John and Grundy, John},
	Date-Added = {2019-04-28 21:37:59 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/tse.2015.2396514},
	Issn = {1939-3520},
	Journal = {IEEE Transactions on Software Engineering},
	Pages = {1-1},
	Publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
	Title = {Performance Analysis for Object-Oriented Software: A Systematic Mapping},
	Url = {http://dx.doi.org/10.1109/TSE.2015.2396514},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/TSE.2015.2396514},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/tse.2015.2396514}}

@article{Lopez_Herrejon:2015,
	Author = {Lopez-Herrejon, Roberto E. and Fischer, Stefan and Ramler, Rudolf and Egyed, Alexander},
	Date-Added = {2019-04-28 21:36:57 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/icstw.2015.7107435},
	Isbn = {9781479918850},
	Journal = {2015 IEEE Eighth International Conference on Software Testing, Verification and Validation Workshops (ICSTW)},
	Publisher = {IEEE},
	Title = {A first systematic mapping study on combinatorial interaction testing for software product lines},
	Url = {http://dx.doi.org/10.1109/ICSTW.2015.7107435},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICSTW.2015.7107435},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/icstw.2015.7107435}}

@article{Lopez_Herrejon:2015a,
	Abstract = {Context
Search-Based Software Engineering (SBSE) is an emerging discipline that focuses on the application of search-based optimization techniques to software engineering problems. Software Product Lines (SPLs) are families of related software systems whose members are distinguished by the set of features each one provides. SPL development practices have proven benefits such as improved software reuse, better customization, and faster time to market. A typical SPL usually involves a large number of systems and features, a fact that makes them attractive for the application of SBSE techniques which are able to tackle problems that involve large search spaces.
Objective
The main objective of our work is to identify the quantity and the type of research on the application of SBSE techniques to SPL problems. More concretely, the SBSE techniques that have been used and at what stage of the SPL life cycle, the type of case studies employed and their empirical analysis, and the fora where the research has been published.
Method
A systematic mapping study was conducted with five research questions and assessed 77 publications from 2001, when the term SBSE was coined, until 2014.
Results
The most common application of SBSE techniques found was testing followed by product configuration, with genetic algorithms and multi-objective evolutionary algorithms being the two most commonly used techniques. Our study identified the need to improve the robustness of the empirical evaluation of existing research, a lack of extensive and robust tool support, and multiple avenues worthy of further investigation.
Conclusions
Our study attested the great synergy existing between both fields, corroborated the increasing and ongoing interest in research on the subject, and revealed challenging open research questions.},
	Author = {Roberto E. Lopez-Herrejon and Lukas Linsbauer and Alexander Egyed},
	Date-Added = {2019-04-28 21:36:15 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2015.01.008},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Software product line, Systematic mapping study, Search based software engineering, Evolutionary algorithm, Metaheuristics},
	Pages = {33 - 51},
	Title = {A systematic mapping study of search-based software engineering for software product lines},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584915000166},
	Volume = {61},
	Year = {2015},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584915000166},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2015.01.008}}

@article{Lopes:2015,
	Author = {Lopes, Aparecida M. Zem and Pedro, Lais Z. and Isotani, Seiji and Bittencourt, Ig I.},
	Date-Added = {2019-04-28 21:35:32 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/icalt.2015.88},
	Isbn = {9781467373340},
	Journal = {2015 IEEE 15th International Conference on Advanced Learning Technologies},
	Publisher = {IEEE},
	Title = {Quality Evaluation of Web-Based Educational Software: A Systematic Mapping},
	Url = {http://dx.doi.org/10.1109/ICALT.2015.88},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICALT.2015.88},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/icalt.2015.88}}

@article{Lacerda:2015,
	Author = {Lacerda, Anselmo and de Queiroz, Ruy and Barbosa, Marcio},
	Date-Added = {2019-04-28 21:34:54 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/itecha.2015.7317411},
	Isbn = {9781467395571},
	Journal = {2015 Internet Technologies and Applications (ITA)},
	Publisher = {IEEE},
	Title = {A systematic mapping on security threats in mobile devices},
	Url = {http://dx.doi.org/10.1109/ITechA.2015.7317411},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ITechA.2015.7317411},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/itecha.2015.7317411}}

@article{DeSouza:2015,
	Abstract = {Context
Software testing is a knowledge intensive process, and, thus, Knowledge Management (KM) principles and techniques should be applied to manage software testing knowledge.
Objective
This study conducts a survey on existing research on KM initiatives in software testing, in order to identify the state of the art in the area as well as the future research. Aspects such as purposes, types of knowledge, technologies and research type are investigated.
Method
The mapping study was performed by searching seven electronic databases. We considered studies published until December 2013. The initial resulting set was comprised of 562 studies. From this set, a total of 13 studies were selected. For these 13, we performed snowballing and direct search to publications of researchers and research groups that accomplished these studies.
Results
From the mapping study, we identified 15 studies addressing KM initiatives in software testing that have been reviewed in order to extract relevant information on a set of research questions.
Conclusions
Although only a few studies were found that addressed KM initiatives in software testing, the mapping shows an increasing interest in the topic in the recent years. Reuse of test cases is the perspective that has received more attention. From the KM point of view, most of the studies discuss aspects related to providing automated support for managing testing knowledge by means of a KM system. Moreover, as a main conclusion, the results show that KM is pointed out as an important strategy for increasing test effectiveness, as well as for improving the selection and application of suited techniques, methods and test cases. On the other hand, inadequacy of existing KM systems appears as the most cited problem related to applying KM in software testing.},
	Author = {{\'E}rica Ferreira de Souza and Ricardo de Almeida Falbo and Nandamudi L. Vijaykumar},
	Date-Added = {2019-04-28 21:10:57 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2014.05.016},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Software testing, Knowledge management, Mapping study},
	Pages = {378 - 391},
	Title = {Knowledge management initiatives in software testing: A mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584914001335},
	Volume = {57},
	Year = {2015},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584914001335},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2014.05.016}}

@article{Kabbedijk:2015,
	Abstract = {Software as a service is frequently offered in a multi-tenant style, where customers of the application and their end-users share resources such as software and hardware among all users, without necessarily sharing data. It is surprising that, with such a popular paradigm, little agreement exists with regard to the definition, domain, and challenges of multi-tenancy. This absence is detrimental to the research community and the industry, as it hampers progress in the domain of multi-tenancy and enables organizations and academics to wield their own definitions to further their commercial or research agendas. In this article, a systematic mapping study on multi-tenancy is described in which 761 academic papers and 371 industrial blogs are analysed. Both the industrial and academic perspective are assessed, in order to get a complete overview. The definition and topic maps provide a comprehensive overview of the domain, while the research agenda, listing four important research topics, provides a roadmap for future research efforts.},
	Author = {Jaap Kabbedijk and Cor-Paul Bezemer and Slinger Jansen and Andy Zaidman},
	Date-Added = {2019-04-28 21:10:29 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.jss.2014.10.034},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Multi-tenancy, Systematic mapping study, Definition},
	Pages = {139 - 148},
	Title = {Defining multi-tenancy: A systematic mapping study on the academic and the industrial perspective},
	Url = {http://www.sciencedirect.com/science/article/pii/S0164121214002313},
	Volume = {100},
	Year = {2015},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0164121214002313},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.jss.2014.10.034}}

@article{Li:2015,
	Abstract = {Context
Technical debt (TD) is a metaphor reflecting technical compromises that can yield short-term benefit but may hurt the long-term health of a software system.
Objective
This work aims at collecting studies on TD and TD management (TDM), and making a classification and thematic analysis on these studies, to obtain a comprehensive understanding on the TD concept and an overview on the current state of research on TDM.
Method
A systematic mapping study was performed to identify and analyze research on TD and its management, covering publications between 1992 and 2013.
Results
Ninety-four studies were finally selected. TD was classified into 10 types, 8 TDM activities were identified, and 29 tools for TDM were collected.
Conclusions
The term ``debt'' has been used in different ways by different people, which leads to ambiguous interpretation of the term. Code-related TD and its management have gained the most attention. There is a need for more empirical studies with high-quality evidence on the whole TDM process and on the application of specific TDM approaches in industrial settings. Moreover, dedicated TDM tools are needed for managing various types of TD in the whole TDM process.},
	Author = {Zengyang Li and Paris Avgeriou and Peng Liang},
	Date-Added = {2019-04-28 21:09:57 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.jss.2014.12.027},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Systematic mapping study, Technical debt, Technical debt management},
	Pages = {193 - 220},
	Title = {A systematic mapping study on technical debt and its management},
	Url = {http://www.sciencedirect.com/science/article/pii/S0164121214002854},
	Volume = {101},
	Year = {2015},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0164121214002854},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.jss.2014.12.027}}

@article{Riaz:2015,
	Abstract = {Context
Software patterns encapsulate expert knowledge for constructing successful solutions to recurring problems. Although a large collection of software patterns is available in literature, empirical evidence on how well various patterns help in problem solving is limited and inconclusive. The context of these empirical findings is also not well understood, limiting applicability and generalizability of the findings.
Objective
To characterize the research design of empirical studies exploring software pattern application involving human participants.
Method
We conducted a systematic mapping study to identify and analyze 30 primary empirical studies on software pattern application, including 24 original studies and 6 replications. We characterize the research design in terms of the questions researchers have explored and the context of empirical research efforts. We also classify the studies in terms of measures used for evaluation, and threats to validity considered during study design and execution.
Results
Use of software patterns in maintenance is the most commonly investigated theme, explored in 16 studies. Object-oriented design patterns are evaluated in 14 studies while 4 studies evaluate architectural patterns. We identified 10 different constructs with 31 associated measures used to evaluate software patterns. Measures for `efficiency' and `usability' are commonly used to evaluate the problem solving process. While measures for `completeness', `correctness' and `quality' are commonly used to evaluate the final artifact. Overall, `time to complete a task' is the most frequently used measure, employed in 15 studies to measure `efficiency'. For qualitative measures, studies do not report approaches for minimizing biases 27% of the time. Nine studies do not discuss any threats to validity.
Conclusion
Subtle differences in study design and execution can limit comparison of findings. Establishing baselines for participants' experience level, providing appropriate training, standardizing problem sets, and employing commonly used measures to evaluate performance can support replication and comparison of results across studies.},
	Author = {Maria Riaz and Travis Breaux and Laurie Williams},
	Date-Added = {2019-04-28 21:09:23 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2015.04.002},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Software pattern, Mapping study, Systematic review, Empirical evaluation, Empirical design},
	Pages = {14 - 38},
	Title = {How have we evaluated software pattern application? A systematic mapping study of research design practices},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584915000774},
	Volume = {65},
	Year = {2015},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584915000774},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2015.04.002}}

@article{Goncales:2015,
	Author = {Gon{\c c}ales, Lucian Jos{\'e} and Farias, Kleinner and Scholl, Murilo and Roberto Veronez, Mauricio and de Oliveira, Toacy Cavalcante},
	Date-Added = {2019-04-28 21:08:12 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1142/s021819401571014x},
	Issn = {1793-6403},
	Journal = {International Journal of Software Engineering and Knowledge Engineering},
	Number = {09n10},
	Pages = {1765--1769},
	Publisher = {World Scientific Pub Co Pte Lt},
	Title = {Comparison of Design Models: A Systematic Mapping Study},
	Url = {http://dx.doi.org/10.1142/S021819401571014X},
	Volume = {25},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1142/S021819401571014X},
	Bdsk-Url-2 = {http://dx.doi.org/10.1142/s021819401571014x}}

@article{Idri:2015a,
	Author = {Idri, Ali and Abnane, Ibtissam and Abran, Alain},
	Date-Added = {2019-04-28 21:07:32 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/snpd.2015.7176280},
	Isbn = {9781479986767},
	Journal = {2015 IEEE/ACIS 16th International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing (SNPD)},
	Publisher = {IEEE},
	Title = {Systematic mapping study of missing values techniques in software engineering data},
	Url = {http://dx.doi.org/10.1109/SNPD.2015.7176280},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/SNPD.2015.7176280},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/snpd.2015.7176280}}

@article{Idri:2015,
	Abstract = {Context
Analogy-based Software development Effort Estimation (ASEE) techniques have gained considerable attention from the software engineering community. However, existing systematic map and review studies on software development effort prediction have not investigated in depth several issues of ASEE techniques, to the exception of comparisons with other types of estimation techniques.
Objective
The objective of this research is twofold: (1) to classify ASEE studies which primary goal is to propose new or modified ASEE techniques according to five criteria: research approach, contribution type, techniques used in combination with ASEE methods, and ASEE steps, as well as identifying publication channels and trends and (2) to analyze these studies from five perspectives: estimation accuracy, accuracy comparison, estimation context, impact of the techniques used in combination with ASEE methods, and ASEE tools.
Method
We performed a systematic mapping of studies for which the primary goal is to develop or to improve ASEE techniques published in the period 1990--2012, and reviewed them based on an automated search of four electronic databases.
Results
In total, we identified 65 studies published between 1990 and 2012, and classified them based on our predefined classification criteria. The mapping study revealed that most researchers focus on addressing problems related to the first step of an ASEE process, that is, feature and case subset selection. The results of our detailed analysis show that ASEE methods outperform the eight techniques with which they were compared, and tend to yield acceptable results especially when combining ASEE techniques with Fuzzy Logic (FL) or Genetic Algorithms (GA).
Conclusion
Based on the findings of this study, the use of other techniques such FL and GA in combination with an ASEE method is promising to generate more accurate estimates. However, the use of ASEE techniques by practitioners is still limited: developing more ASEE tools may facilitate the application of these techniques and then lead to increasing the use of ASEE techniques in industry.},
	Author = {Ali Idri and Fatima azzahra Amazal and Alain Abran},
	Date-Added = {2019-04-28 21:06:38 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2014.07.013},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Mapping study, Systematic literature review, Software development effort estimation, Analogy, Case-based reasoning},
	Pages = {206 - 230},
	Title = {Analogy-based software development effort estimation: A systematic mapping and review},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584914001815},
	Volume = {58},
	Year = {2015},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584914001815},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2014.07.013}}

@article{Heredia:2015a,
	Author = {Heredia, Alberto and Colomo-Palacios, Ricardo and de Amescua, Antonio},
	Date-Added = {2019-04-28 21:06:06 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.procs.2015.08.516},
	Issn = {1877-0509},
	Journal = {Procedia Computer Science},
	Pages = {395--402},
	Publisher = {Elsevier BV},
	Title = {Software Business Models from a Distribution Perspective: A Systematic Mapping Study},
	Url = {http://dx.doi.org/10.1016/j.procs.2015.08.516},
	Volume = {64},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.procs.2015.08.516}}

@article{Heikkila:2015,
	Author = {Heikkila, Ville T. and Damian, Daniela and Lassenius, Casper and Paasivaara, Maria},
	Date-Added = {2019-04-28 21:05:05 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/seaa.2015.70},
	Isbn = {9781467375856},
	Journal = {2015 41st Euromicro Conference on Software Engineering and Advanced Applications},
	Publisher = {IEEE},
	Title = {A Mapping Study on Requirements Engineering in Agile Software Development},
	Url = {http://dx.doi.org/10.1109/SEAA.2015.70},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/SEAA.2015.70},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/seaa.2015.70}}

@article{Guedes:2015,
	Author = {Guedes, Gabriela and Silva, Carla and Soares, Monique and Castro, Jaelson},
	Date-Added = {2019-04-28 21:04:17 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/sbcars.2015.20},
	Isbn = {9781467396301},
	Journal = {2015 IX Brazilian Symposium on Components, Architectures and Reuse Software},
	Publisher = {IEEE},
	Title = {Variability Management in Dynamic Software Product Lines: A Systematic Mapping},
	Url = {http://dx.doi.org/10.1109/SBCARS.2015.20},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/SBCARS.2015.20},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/sbcars.2015.20}}

@article{Gbaffonou:2015,
	Author = {Gbaffonou, Brice A.D. and Lapalme, James and Champagne, Roger},
	Date-Added = {2019-04-28 21:03:39 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/es.2015.11},
	Isbn = {9781467380058},
	Journal = {2015 International Conference on Enterprise Systems (ES)},
	Publisher = {IEEE},
	Title = {Service-Oriented Architecture: A Mapping Study},
	Url = {http://dx.doi.org/10.1109/ES.2015.11},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ES.2015.11},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/es.2015.11}}

@article{Dicheva:2015,
	Author = {Dicheva, Darina and Dichev, Christo and Agre, Gennady and Angelova, Galia},
	Date-Added = {2019-04-28 21:02:56 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Journal = {Educational Technology & Society},
	Pages = {75-88},
	Title = {Gamification in Education: A Systematic Mapping Study},
	Volume = {18},
	Year = {2015}}

@article{Flemstrom:2015,
	Author = {Flemstrom, Daniel and Sundmark, Daniel and Afzal, Wasif},
	Date-Added = {2019-04-28 20:59:34 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/seaa.2015.46},
	Isbn = {9781467375856},
	Journal = {2015 41st Euromicro Conference on Software Engineering and Advanced Applications},
	Publisher = {IEEE},
	Title = {Vertical Test Reuse for Embedded Systems: A Systematic Mapping Study},
	Url = {http://dx.doi.org/10.1109/SEAA.2015.46},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/SEAA.2015.46},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/seaa.2015.46}}

@article{Arruda:2015,
	Author = {Arruda, Mayke and Kudo, Taciana and Neto, Renato},
	Date-Added = {2019-04-28 20:58:40 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Journal = {Revista de Sistemas de Informa{\c c}{\~a}o da Faculdade Salesiana Maria Auxiliadora},
	Pages = {41-51},
	Title = {Requirements Specification of Context-Aware Systems: A Systematic Mapping},
	Volume = {16},
	Year = {2015}}

@article{Carroll:2015,
	Author = {Carroll, Carson and Falessi, Davide and Forney, Vanessa and Frances, Alexa and Izurieta, Clemente and Seaman, Carolyn},
	Date-Added = {2019-04-28 20:56:25 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/esem.2015.7321183},
	Isbn = {9781467378994},
	Journal = {2015 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)},
	Publisher = {IEEE},
	Title = {A Mapping Study of Software Causal Factors for Improving Maintenance},
	Url = {http://dx.doi.org/10.1109/ESEM.2015.7321183},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ESEM.2015.7321183},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/esem.2015.7321183}}

@article{Wakil:2015,
	Abstract = {Background: Model Driven Web Engineering (MDWE) is the application of the model driven paradigm to the domain of web software development, where it is particularly helpful because of the continuous evolution of Web technologies and platforms. Objective: In this paper, we prepare a survey of primary studies on MDWE to explore current work and identify needs for future research. Method: Systematic mapping study uses for finding the most relevant studies and classification. In this study, we found 289 papers and a classification scheme divided them depending on their research focus, contribution type and research type. Results: The papers of solution proposal (20%) research type are majority. The most focused areas of MDWE appear to be: Web Applicability (31%), Molding and Notation (19%), and Services and Oriented (18%). The majority of contributions are methods (33%). Moreover, this shows MDWE as a wide, new, and active area to publications. Conclusions: Whilst additional analysis is warranted within the MDWE scope, in literature, composition mechanisms have been thoroughly discoursed. Furthermore, we have witnessed that the recurrent recommendation for Validation Research, Solution Proposal and Philosophical Papers has been done through earlier analysis.},
	Affiliation = {Software Engineering Department, Faculty of Computing, University Technology Malaysia},
	Author = {Wakil, K and Jawawi, D N A},
	Date-Added = {2019-04-28 20:55:44 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.5277/E-INF150106.},
	Journal = {e-Informatica Software Engineering Journal},
	Keywords = {model driven web engineering; MDWE; web engineering; systematic mapping study},
	Language = {English},
	Number = {1},
	Pages = {107--142},
	Title = {Model Driven Web Engineering: A Systematic Mapping Study},
	Volume = {9},
	Year = {2015},
	Bdsk-Url-1 = {https://doi.org/10.5277/E-INF150106.}}

@article{Zhi:2015,
	Abstract = {Context
Software documentation is an integral part of any software development process. Researchers and practitioners have expressed concerns about costs, benefits and quality of software documentation in practice. On the one hand, there is a lack of a comprehensive model to evaluate the quality of documentation. On the other hand, researchers and practitioners need to assess whether documentation cost outweighs its benefit.
Objectives
In this study, we aim to summarize the existing literature and provide an overview of the field of software documentation cost, benefit and quality.
Method
We use the systematic-mapping methodology to map the existing body of knowledge related to software documentation cost, benefit and quality. To achieve our objectives, 11 Research Questions (RQ) are raised. The primary papers are carefully selected. After applying the inclusion and exclusion criteria, our study pool included a set of 69 papers from 1971 to 2011. A systematic map is developed and refined iteratively.
Results
We present the results of a systematic mapping covering different research aspects related to software documentation cost, benefit and quality (RQ 1--11). Key findings include: (1) validation research papers are dominating (27 papers), followed by solution proposals (21 papers). (2) Most papers (61 out of 69) do not mention the development life-cycle model explicitly. Agile development is only mentioned in 6 papers. (3) Most papers include only one ``System under Study'' (SUS) which is mostly academic prototype. The average number of participants in survey-based papers is 106, the highest one having approximately 1000 participants. (4) In terms of focus of papers, 50 papers focused on documentation quality, followed by 37 papers on benefit, and 12 papers on documentation cost. (5) The quality attributes of documentation that appear in most papers are, in order: completeness, consistency and accessibility. Additionally, improved meta-models for documentation cost, benefit and quality are also presented. Furthermore, we have created an online paper repository of the primary papers analyzed and mapped during this study.
Conclusion
Our study results show that this research area is emerging but far from mature. Firstly, documentation cost aspect seems to have been neglected in the existing literature and there are no systematic methods or models to measure cost. Also, despite a substantial number of solutions proposed during the last 40 years, more and stronger empirical evidences are still needed to enhance our understanding of this area. In particular, what we expect includes (1) more validation or evaluation studies; (2) studies involving large-scale development projects, or from large number of study participants of various organizations; (3) more industry-academia collaborations; (4) more estimation models or methods to assess documentation quality, benefit and, especially, cost.},
	Author = {Junji Zhi and Vahid Garousi-Yusifo{\u g}lu and Bo Sun and Golara Garousi and Shawn Shahnewaz and Guenther Ruhe},
	Date-Added = {2019-04-28 20:53:44 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.jss.2014.09.042},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Software documentation, Documentation benefit, Systematic mapping},
	Pages = {175 - 198},
	Title = {Cost, benefits and quality of software development documentation: A systematic mapping},
	Url = {http://www.sciencedirect.com/science/article/pii/S0164121214002131},
	Volume = {99},
	Year = {2015},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0164121214002131},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.jss.2014.09.042}}

@article{Paiva:2015,
	Author = {Paiva, Sofia Larissa da Costa and Simao, Adenilso da Silva},
	Date-Added = {2019-04-28 20:53:02 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/seaa.2015.66},
	Isbn = {9781467375856},
	Journal = {2015 41st Euromicro Conference on Software Engineering and Advanced Applications},
	Publisher = {IEEE},
	Title = {A Systematic Mapping Study on Test Generation from Input/Output Transition Systems},
	Url = {http://dx.doi.org/10.1109/SEAA.2015.66},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/SEAA.2015.66},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/seaa.2015.66}}

@article{Garcia_Mireles:2015,
	Abstract = {Enhancing product quality might be a main goal of a software process improvement initiative (SPI). Quality is, however, a complex concept, and experts recommend identifying relevant product quality characteristics to satisfy users/customers' needs. There is thus a need to understand how SPI initiatives contribute to the improvement of software product quality characteristics. This paper aims to provide an overview of an up-to-date state-of-the-art regarding initiatives that focus on promoting product quality improvement by applying SPI approaches. This goal was achieved by conducting a systematic mapping study, as a result of which we identified 74 primary papers including both theoretical (75.7%) and empirical (24.3%) papers. The main product quality characteristics addressed are security, usability and reliability. Security-related process models, on the other hand, are those most cited (53%). The empirical papers suggest that traditional process reference models, such as CMM, CMMI or ISO 9001, moderately increase product quality characteristics, these principally being maintainability and reliability. However, there is a need for more empirical research to evaluate the impact of SPI initiatives on software product quality by considering contextual factors. SPI initiatives should be more driven by performance goals related to product quality characteristics.},
	Author = {Gabriel Alberto Garc{\'\i}a-Mireles and M {\'A}ngeles Moraga and F{\'e}lix Garc{\'\i}a and Mario Piattini},
	Date-Added = {2019-04-28 20:52:16 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.jss.2015.01.057},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Software product quality, Software process improvement, Systematic mapping study},
	Pages = {150 - 166},
	Title = {Approaches to promote product quality within software process improvement initiatives: A mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0164121215000369},
	Volume = {103},
	Year = {2015},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0164121215000369},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.jss.2015.01.057}}

@article{Abelein:2013,
	Author = {Abelein, Ulrike and Paech, Barbara},
	Date-Added = {2019-04-28 20:51:14 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1007/s10664-013-9278-4},
	Issn = {1573-7616},
	Journal = {Empirical Software Engineering},
	Number = {1},
	Pages = {28--81},
	Publisher = {Springer Nature},
	Title = {Understanding the Influence of User Participation and Involvement on System Success -- a Systematic Mapping Study},
	Url = {http://dx.doi.org/10.1007/s10664-013-9278-4},
	Volume = {20},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s10664-013-9278-4}}

@article{Magalhaes:2015,
	Abstract = {Context
Two recent mapping studies which were intended to verify the current state of replication of empirical studies in Software Engineering (SE) identified two sets of studies: empirical studies actually reporting replications (published between 1994 and 2012) and a second group of studies that are concerned with definitions, classifications, processes, guidelines, and other research topics or themes about replication work in empirical software engineering research (published between 1996 and 2012).
Objective
In this current article, our goal is to analyze and discuss the contents of the second set of studies about replications to increase our understanding of the current state of the work on replication in empirical software engineering research.
Method
We applied the systematic literature review method to build a systematic mapping study, in which the primary studies were collected by two previous mapping studies covering the period 1996--2012 complemented by manual and automatic search procedures that collected articles published in 2013.
Results
We analyzed 37 papers reporting studies about replication published in the last 17years. These papers explore different topics related to concepts and classifications, presented guidelines, and discuss theoretical issues that are relevant for our understanding of replication in our field. We also investigated how these 37 papers have been cited in the 135 replication papers published between 1994 and 2012.
Conclusions
Replication in SE still lacks a set of standardized concepts and terminology, which has a negative impact on the replication work in our field. To improve this situation, it is important that the SE research community engage on an effort to create and evaluate taxonomy, frameworks, guidelines, and methodologies to fully support the development of replications.},
	Author = {Cleyton V.C. de Magalh{\~a}es and Fabio Q.B. da Silva and Ronnie E.S. Santos and Marcos Suassuna},
	Date-Added = {2019-04-28 20:50:38 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2015.02.001},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Replications, Experiments, Empirical studies, Mapping study, Systematic literature review, Software engineering},
	Pages = {76 - 101},
	Title = {Investigations about replication of empirical studies in software engineering: A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584915000300},
	Volume = {64},
	Year = {2015},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584915000300},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2015.02.001}}

@article{Zapata:2015,
	Author = {Bel{\'{e}}n Cruz Zapata and Jos{\'{e}} Luis Fern{\'{a}}ndez Alem{\'{a}}n and Ambrosio Toval},
	Date-Added = {2019-04-28 20:49:52 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.2298/CSIS140205086C},
	Journal = {Comput. Sci. Inf. Syst.},
	Number = {1},
	Pages = {161--184},
	Title = {Security in cloud computing: A mapping study},
	Volume = {12},
	Year = {2015},
	Bdsk-Url-1 = {https://doi.org/10.2298/CSIS140205086C}}

@inproceedings{Heredia:2015,
	Author = {Alberto Heredia and Ricardo Colomo Palacios and Antonio de Amescua Seco},
	Booktitle = {CEUR Workshop Proceedings},
	Date-Added = {2019-04-28 20:47:36 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Pages = {7--17},
	Publisher = {CEUR-WS.org},
	Series = {CEUR Workshop Proceedings},
	Title = {A Systematic Mapping Study on Software Process Education},
	Volume = {1368},
	Year = {2015}}

@inproceedings{Divya:2015,
	Author = {Divya and N. S. Gill and L. Singh},
	Booktitle = {2015 2nd International Conference on Computing for Sustainable Global Development (INDIACom)},
	Date-Added = {2019-04-28 20:43:58 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Keywords = {built-in self test;object-oriented programming;program testing;software reusability;built-in testing;component-based software development;CBSD;reusable component;source-code;testing technique;software testing;relevant information;Testing;Software;Heuristic algorithms;Computational modeling;Maintenance engineering;Data mining;Runtime;Built-in test;Component based software;Testing},
	Pages = {159-168},
	Title = {Built-in testing in component-based software - a mapping study},
	Year = {2015}}

@article{Cruz:2015,
	Abstract = {In this article, we present a systematic mapping study of research on personality in software engineering. The goal is to plot the landscape of current published empirical and theoretical studies that deal with the role of personality in software engineering. We applied the systematic review method to search and select published articles, and to extract and synthesize data from the selected articles that reported studies about personality. Our search retrieved more than 19,000 articles, from which we selected 90 articles published between 1970 and 2010. Nearly 72% of the studies were published after 2002 and 83% of the studies reported empirical research findings. Data extracted from the 90 studies showed that education and pair programming were the most recurring research topics, and that MBTI was the most used test. Research related to pair programming, education, team effectiveness, software process allocation, software engineer personality characteristics, and individual performance concentrated over 88% of the studies, while team process, behavior and preferences, and leadership performance were the topics with the smallest number of studies. We conclude that the number of articles has grown in the last few years, but contradictory evidence was found that might have been caused by differences in context, research method, and versions of the tests used in the studies. While this raises a warning for practitioners that wish to use personality tests in practice, it shows several opportunities for the research community to improve and extend findings in this field.},
	Author = {Shirley Cruz and Fabio Q.B. da Silva and Luiz Fernando Capretz},
	Date-Added = {2019-04-28 20:43:15 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.chb.2014.12.008},
	Issn = {0747-5632},
	Journal = {Computers in Human Behavior},
	Keywords = {Human factors in software engineering, Software psychology, Empirical software engineering, Mapping study, Systematic literature review},
	Pages = {94 - 113},
	Title = {Forty years of research on personality in software engineering: A mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0747563214007237},
	Volume = {46},
	Year = {2015},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0747563214007237},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.chb.2014.12.008}}

@inproceedings{Feloni:2015,
	Author = {Daniel Feloni and Rosana T. Vaccare Braga},
	Bibsource = {dblp computer science bibliography, https://dblp.org},
	Biburl = {https://dblp.org/rec/bib/conf/cibse/FeloniB15},
	Booktitle = {Proceedings of the XVIII IberoAmerican Conference on Software Engineering, CIbSE 2015},
	Crossref = {DBLP:conf/cibse/2015},
	Date-Added = {2019-04-28 20:42:30 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Pages = {123},
	Timestamp = {Sat, 26 Jan 2019 15:11:03 +0100},
	Title = {Methodologies for Evaluation and Improvement of Software Processes in the Context of Quality and Maturity Models: a Systematic Mapping},
	Year = {2015}}

@article{Salehi:2015,
	Abstract = {Granular computing has attracted many researchers as a new and rapidly growing paradigm of information processing. In this paper, we apply systematic mapping study to classify the granular computing researches to discover relative derivations to specify its research strength and quality. Our search scope is limited to the Science Direct and IEEE Transactions papers published between January 2012 and August 2014. We defined four perspectives of classification schemes to map the selected studies that are focus area, contribution type, research type and framework. Results of mapping the selected studies show that almost half of the research focused area belongs to category of data analysis. In addition, most of the selected papers belong to proposing the solutions in research type scheme. Distribution of papers between tool, method and enhancement categories of contribution type are almost equal. Moreover, 39% of the relevant papers belong to the rough set framework. The results show that there is little attention paid to cluster analysis in existing frameworks to discover granules for classification. We applied five clustering algorithms on three datasets from UCI repository to compare the form of information granules, and then classify the patterns and define them to a specific class based on their geometry and belongings. The clustering algorithms are DBSCAN, c-means, k-means, GAk-means and Fuzzy-GrC and the comparison of information granules are based on the coverage, misclassification and accuracy. The survey of experimental results mostly shows Fuzzy-GrC and GAk-means algorithm superior to other clustering algorithms; while, c-means clustering algorithm shows inferior to other clustering algorithms.},
	Author = {Saber Salehi and Ali Selamat and Hamido Fujita},
	Date-Added = {2019-04-28 20:39:08 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.knosys.2015.02.018},
	Issn = {0950-7051},
	Journal = {Knowledge-Based Systems},
	Keywords = {Granular computing, Granular classifier, Clustering algorithm, Systematic mapping, DBSCAN, k-means, c-means},
	Note = {25th anniversary of Knowledge-Based Systems},
	Pages = {78 - 97},
	Title = {Systematic mapping study on granular computing},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950705115000726},
	Volume = {80},
	Year = {2015},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950705115000726},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.knosys.2015.02.018}}

@inproceedings{Batot:2016,
	Author = {E. Batot and H. Sahraoui and E. Syriani and P. Molins and W. Sboui},
	Booktitle = {2016 4th International Conference on Model-Driven Engineering and Software Development (MODELSWARD)},
	Date-Added = {2019-04-28 20:37:33 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.5220/0005657301760183},
	Keywords = {software engineering;domain-specific problems;MDE infrastructure;concrete model transformation solutions;model-driven engineering;concrete problems;model transformations;systematic mapping study;Unified modeling language;Concrete;Analytical models;Proposals;Market research;Systematics;Semantics;Model Transformation;Systematic Mapping;Software Engineering},
	Pages = {176-183},
	Title = {Systematic mapping study of model transformations for concrete problems},
	Year = {2016},
	Bdsk-Url-1 = {https://doi.org/10.5220/0005657301760183}}

@article{Yang:2016,
	Abstract = {Context
Combining software architecture and agile development has received significant attention in recent years. However, there exists no comprehensive overview of the state of research on the architecture-agility combination.
Objective
This work aims to analyze the combination of architecture and agile methods for the purpose of exploration and analysis with respect to architecting activities and approaches, agile methods and practices, costs, benefits, challenges, factors, tools, and lessons learned concerning the combination.
Method
A systematic mapping study (SMS) was conducted, covering the literature on the architecture-agility combination published between February 2001 and January 2014.
Results
Fifty-four studies were finally included in this SMS. Some of the highlights: (1) a significant difference exists in the proportion of various architecting activities, agile methods, and agile practices employed in the combination. (2) none of the architecting approaches has been widely used in the combination. (3) there is a lack of description and analysis regarding the costs and failure stories of the combination. (4) twenty challenges, twenty-nine factors, and twenty-five lessons learned were identified.
Conclusions
The results of this SMS help the software engineering community to reflect on the past thirteen years of research and practice on the architecture-agility combination with a number of implications.},
	Author = {Chen Yang and Peng Liang and Paris Avgeriou},
	Date-Added = {2019-04-28 20:36:33 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.jss.2015.09.028},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Software architecture, Agile development, Architecting approach},
	Pages = {157 - 184},
	Title = {A systematic mapping study on the combination of software architecture and agile development},
	Url = {http://www.sciencedirect.com/science/article/pii/S0164121215002125},
	Volume = {111},
	Year = {2016},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0164121215002125},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.jss.2015.09.028}}

@article{Hassan:2016,
	Author = {Hassan, Mohammad Mahdi and Afzal, Wasif and Lindstr{\"o}m, Birgitta and Shah, Syed Muhammad Ali and Andler, Sten F. and Blom, Martin},
	Date-Added = {2019-04-28 20:34:54 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1145/2851613.2851978},
	Isbn = {9781450337397},
	Journal = {Proceedings of the 31st Annual ACM Symposium on Applied Computing - SAC '16},
	Publisher = {ACM Press},
	Title = {Testability and software performance},
	Url = {http://dx.doi.org/10.1145/2851613.2851978},
	Year = {2016},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2851613.2851978}}

@article{Souag:2015,
	Author = {Souag, Amina and Mazo, Ra{\'u}l and Salinesi, Camille and Comyn-Wattiau, Isabelle},
	Date-Added = {2019-04-28 20:34:06 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1007/s00766-015-0220-8},
	Issn = {1432-010X},
	Journal = {Requirements Engineering},
	Number = {2},
	Pages = {251--283},
	Publisher = {Springer Nature},
	Title = {Reusable knowledge in security requirements engineering: a systematic mapping study},
	Url = {http://dx.doi.org/10.1007/s00766-015-0220-8},
	Volume = {21},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s00766-015-0220-8}}

@article{Antonio:2016,
	Author = {Aguileta, Antonio and G{\'o}mez, Omar S.},
	Date = {2016/12/01},
	Date-Added = {2019-04-28 20:32:53 +0100},
	Date-Modified = {2020-02-11 10:33:15 +0100},
	Doi = {10.14257/ijseia.2016.10.12.07},
	Journal = {International Journal of Software Engineering and its Applications},
	Pages = {75--92},
	Title = {Software Engineering Research in Mexico: A Systematic Mapping Study},
	Ty = {BOOK},
	Volume = {10},
	Year = {2016},
	Bdsk-Url-1 = {https://doi.org/10.14257/ijseia.2016.10.12.07}}

@inproceedings{Saint_Louis:2016,
	Author = {P. Saint-Louis and J. Lapalme},
	Booktitle = {2016 IEEE 20th International Enterprise Distributed Object Computing Workshop (EDOCW)},
	Date-Added = {2019-04-28 20:29:38 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/EDOCW.2016.7584364},
	Issn = {2325-6605},
	Keywords = {organisational aspects;enterprise architecture discipline;EA discipline;multidisciplinary issue;language issue;Computer architecture;Systematics;Organizations;Data mining;Libraries;Terminology;Planning},
	Pages = {1-9},
	Title = {Investigation of the Lack of Common Understanding in the Discipline of Enterprise Architecture : A Systematic Mapping Study},
	Year = {2016},
	Bdsk-Url-1 = {https://doi.org/10.1109/EDOCW.2016.7584364}}

@inproceedings{Horkoff:2016,
	Author = {J. Horkoff and F. B. Aydemir and E. Cardoso and T. Li and A. Mat{\'e} and E. Paja and M. Salnitri and J. Mylopoulos and P. Giorgini},
	Booktitle = {2016 IEEE 24th International Requirements Engineering Conference (RE)},
	Date-Added = {2019-04-28 20:28:48 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/RE.2016.41},
	Issn = {2332-6441},
	Keywords = {formal specification;formal verification;systems analysis;goal-oriented requirements engineering;GORE;systematic literature map;goal modeling;Systematics;Requirements engineering;Analytical models;Adaptation models;Proposals;Conferences;Syntactics;requirements engineering;goal mode;systematic literature survey;systematic literature map;evidence-based requirements engineering},
	Pages = {106-115},
	Title = {Goal-Oriented Requirements Engineering: A Systematic Literature Map},
	Year = {2016},
	Bdsk-Url-1 = {https://doi.org/10.1109/RE.2016.41}}

@inproceedings{Alshuqayran:2016,
	Address = {Los Alamitos, CA, USA},
	Author = {N. Alshuqayran and N. Ali and R. Evans},
	Booktitle = {2016 IEEE 9th Conference on Service-Oriented Computing and Applications (SOCA)},
	Date-Added = {2019-04-28 20:27:53 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/SOCA.2016.15},
	Keywords = {computer architecture;service-oriented architecture;systematics;conferences;security;business},
	Pages = {44-51},
	Publisher = {IEEE Computer Society},
	Title = {A Systematic Mapping Study in Microservice Architecture},
	Url = {https://doi.ieeecomputersociety.org/10.1109/SOCA.2016.15},
	Year = {2016},
	Bdsk-Url-1 = {https://doi.ieeecomputersociety.org/10.1109/SOCA.2016.15},
	Bdsk-Url-2 = {https://doi.org/10.1109/SOCA.2016.15}}

@article{Montalvillo:2016,
	Abstract = {CONTEXT. Software Product Lines (SPLs) aim to support the development of a whole family of software products through systematic reuse of shared assets. As SPLs exhibit a long life-span, evolution is an even greater concern than for single-systems. For the purpose of this work, evolution refers to the adaptation of the SPL as a result of changing requirements. Hence, evolution is triggered by requirement changes, and not by bug fixing or refactoring. OBJECTIVE. Research on SPL evolution has not been previously mapped. This work provides a mapping study along Petersen's and Kichenham's guidelines, to identify strong areas of knowledge, trends and gaps. RESULTS. We identified 107 relevant contributions. They were classified according to four facets: evolution activity (e.g., identify, analyze and plan, implement), product-derivation approach (e.g., annotation-based, composition-based), research type (e.g., solution, experience, evaluation), and asset type (i.e., variability model, SPL architecture, code assets and products). CONCLUSION. Analyses of the results indicate that ``Solution proposals'' are the most common type of contribution (31%). Regarding the evolution activity, ``Implement change'' (43%) and ``Analyze and plan change'' (37%) are the most covered ones. A finer-grained analysis uncovered some tasks as being underexposed. A detailed description of the 107 papers is also included.},
	Author = {Leticia Montalvillo and Oscar D{\'\i}az},
	Date-Added = {2019-04-28 20:27:05 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.jss.2016.08.053},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Systematic mapping study, Software product lines, Evolution},
	Pages = {110 - 143},
	Title = {Requirement-driven evolution in software product lines: A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0164121216301510},
	Volume = {122},
	Year = {2016},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0164121216301510},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.jss.2016.08.053}}

@inproceedings{Magues:2016,
	Author = {D. A. Mag{\"u}es and J. W. Castro and S. T. Acu{\~n}a},
	Booktitle = {2016 XLII Latin American Computing Conference (CLEI)},
	Date-Added = {2019-04-28 20:26:31 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/CLEI.2016.7833347},
	Keywords = {human computer interaction;software prototyping;user centred design;agile software development process;user-centred design;systematic mapping study;SMS;process integration;technology integration;team integration;human-computer interaction;ASDP;HCI;UCD;usability techniques;Usability;Systematics;Agile software development;Human computer interaction;User centered design;Proposals;Agile software development;user-centred design;systematic mapping study;usability},
	Pages = {1-8},
	Title = {Usability in agile development: A systematic mapping study},
	Year = {2016},
	Bdsk-Url-1 = {https://doi.org/10.1109/CLEI.2016.7833347}}

@inproceedings{Lopez_Herrejon:2016,
	Author = {R. E. Lopez-Herrejon and S. Illescas and A. Egyed},
	Booktitle = {2016 IEEE Working Conference on Software Visualization (VISSOFT)},
	Date-Added = {2019-04-28 20:25:38 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/VISSOFT.2016.11},
	Keywords = {data visualisation;program visualisation;software product lines;software reusability;software reuse;time to market;complexity visualization techniques;information complexity;SPL life cycle;systematic mapping;software product line visualization;Visualization;Systematics;Software product lines;Computer architecture;Conferences;Software systems;software product lines;information visualization;software visualization;domain engineering;application engineering},
	Pages = {26-35},
	Title = {Visualization for Software Product Lines: A Systematic Mapping Study},
	Year = {2016},
	Bdsk-Url-1 = {https://doi.org/10.1109/VISSOFT.2016.11}}

@inproceedings{Khan:2016,
	Address = {Los Alamitos, CA, USA},
	Author = {N. Khan and N. Ikram},
	Booktitle = {2016 International Conference on Software Security and Assurance (ICSSA)},
	Date-Added = {2019-04-28 19:12:20 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/ICSSA.2016.13},
	Keywords = {security;requirements engineering;safety;systematics;continents;ieee xplore;software},
	Pages = {31-36},
	Publisher = {IEEE Computer Society},
	Title = {Security Requirements Engineering: A Systematic Mapping (2010-2015)},
	Url = {https://doi.ieeecomputersociety.org/10.1109/ICSSA.2016.13},
	Year = {2016},
	Bdsk-Url-1 = {https://doi.ieeecomputersociety.org/10.1109/ICSSA.2016.13},
	Bdsk-Url-2 = {https://doi.org/10.1109/ICSSA.2016.13}}

@article{Silva:2016,
	Author = {Silva, Francisco Airton and Zaicaner, Germano and Quesado, Eder and Dornelas, Matheus and Silva, Bruno and Maciel, Paulo},
	Date-Added = {2019-04-28 19:11:43 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1007/s11227-016-1674-2},
	Issn = {1573-0484},
	Journal = {The Journal of Supercomputing},
	Number = {4},
	Pages = {1431--1452},
	Publisher = {Springer Nature},
	Title = {Benchmark applications used in mobile cloud computing research: a systematic mapping study},
	Url = {http://dx.doi.org/10.1007/s11227-016-1674-2},
	Volume = {72},
	Year = {2016},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s11227-016-1674-2}}

@article{Jabbari:2016,
	Author = {Jabbari, Ramtin and bin Ali, Nauman and Petersen, Kai and Tanveer, Binish},
	Date-Added = {2019-04-28 19:11:14 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1145/2962695.2962707},
	Isbn = {9781450341349},
	Journal = {Proceedings of the Scientific Workshop Proceedings of XP2016 on - XP '16 Workshops},
	Publisher = {ACM Press},
	Title = {What is DevOps?: A Systematic Mapping Study on Definitions and Practices},
	Url = {http://dx.doi.org/10.1145/2962695.2962707},
	Year = {2016},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2962695.2962707}}

@article{Gabriel:2016,
	Abstract = {As part of the innovation process, creativity has become a critical dimension for organizations that wish to maintain their competitiveness. In order to foster the creativity potential within organizations, processes and systems need to be designed and integrated so that all stakeholders can participate in a coordinated and timely fashion, and despite the various dispersion levels that may separate them. Although many tools are already available on the market or being tested, a significant gap still exists between those products and the creativity process that they are supposed to support. To truly respond to the need for creativity in a distributed environment, it is suggested that the entire process be re-examined and understood so that future Creativity Support Systems can fulfil real needs. This paper is a systematic mapping study of the literature on existing digital tools dedicated to creativity. A thorough examination of over 49 digital tools is carried out, providing the action channel for emerging Creativity Support Systems that would better support collaboration diversity throughout the creative process.},
	Author = {A. Gabriel and D. Monticolo and M. Camargo and M. Bourgault},
	Date-Added = {2019-04-28 19:10:54 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.tsc.2016.05.009},
	Issn = {1871-1871},
	Journal = {Thinking Skills and Creativity},
	Keywords = {Creative support system, Remote collaboration, Creative problem solving, Creativity process, Computer-assisted creativity},
	Pages = {109 - 122},
	Title = {Creativity support systems: A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S1871187116300293},
	Volume = {21},
	Year = {2016},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S1871187116300293},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.tsc.2016.05.009}}

@article{Farias:2016,
	Author = {de F. Farias, M{\'a}rio Andr{\'e} and Novais, Renato and J{\'u}nior, Methanias Cola{\c c}o and da Silva Carvalho, Lu{\'\i}s Paulo and Mendon{\c c}a, Manoel and Sp{\'\i}nola, Rodrigo Oliveira},
	Date-Added = {2019-04-28 19:10:35 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1145/2851613.2851786},
	Isbn = {9781450337397},
	Journal = {Proceedings of the 31st Annual ACM Symposium on Applied Computing - SAC '16},
	Publisher = {ACM Press},
	Title = {A systematic mapping study on mining software repositories},
	Url = {http://dx.doi.org/10.1145/2851613.2851786},
	Year = {2016},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2851613.2851786}}

@inproceedings{Eleuterio:2016,
	Author = {J. D. A. S. Eleuterio and F. N. Gaia and A. Bondavalli and P. Lollini and G. N. Rodrigues and C. M. F. Rubira},
	Booktitle = {2016 42th Euromicro Conference on Software Engineering and Advanced Applications (SEAA)},
	Date-Added = {2019-04-28 19:10:09 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/SEAA.2016.40},
	Issn = {2376-9505},
	Keywords = {software maintenance;software reliability;software reusability;dynamic software product line dependability;DSPL;dynamic binding;dependable systems;dependability attributes;availability;confidentiality;integrity;reliability;maintainability;systematic mapping study;SMS;Runtime;Systematics;Software product lines;Context;Software;Reliability;Proposals;dynamic software product line;dynamically adaptive systems;dependability;systematic mapping study},
	Pages = {323-330},
	Title = {On the Dependability for Dynamic Software Product Lines: A Comparative Systematic Mapping Study},
	Year = {2016},
	Bdsk-Url-1 = {https://doi.org/10.1109/SEAA.2016.40}}

@article{Kosar:2016,
	Abstract = {Context: In this study we report on a Systematic Mapping Study (SMS) for Domain-Specific Languages (DSLs), based on an automatic search including primary studies from journals, conferences, and workshops during the period from 2006 until 2012. Objective: The main objective of the described work was to perform an SMS on DSLs to better understand the DSL research field, identify research trends, and any possible open issues. The set of research questions was inspired by a DSL survey paper published in 2005. Method: We conducted a SMS over 5 stages: defining research questions, conducting the search, screening, classifying, and data extraction. Our SMS included 1153 candidate primary studies from the ISI Web of Science and ACM Digital Library, 390 primary studies were classified after screening. Results: This SMS discusses two main research questions: research space and trends/demographics of the literature within the field of DSLs. Both research questions are further subdivided into several research sub-questions. The results from the first research question clearly show that the DSL community focuses more on the development of new techniques/methods rather than investigating the integrations of DSLs with other software engineering processes or measuring the effectiveness of DSL approaches. Furthermore, there is a clear lack of evaluation research. Amongst different DSL development phases more attention is needed in regard to domain analysis, validation, and maintenance. The second research question revealed that the number of publications remains stable, and has not increased over the years. Top cited papers and venues are mentioned, as well as identifying the more active institutions carrying DSL research. Conclusion: The statistical findings regarding research questions paint an interesting picture about the mainstreams of the DSL community, as well as open issues where researchers can improve their research in their future work.},
	Author = {Toma{\v z} Kosar and Sudev Bohra and Marjan Mernik},
	Date-Added = {2019-04-28 19:09:17 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2015.11.001},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Domain-Specific Languages, Systematic Mapping Study, Systematic Review},
	Pages = {77 - 91},
	Title = {Domain-Specific Languages: A Systematic Mapping Study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584915001858},
	Volume = {71},
	Year = {2016},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584915001858},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2015.11.001}}

@article{Pahl:2016,
	Author = {Pahl, Claus and Jamshidi, Pooyan},
	Date-Added = {2019-04-28 19:08:57 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.5220/0005785501370146},
	Isbn = {9789897581823},
	Journal = {Proceedings of the 6th International Conference on Cloud Computing and Services Science},
	Publisher = {SCITEPRESS - Science and and Technology Publications},
	Title = {Microservices: A Systematic Mapping Study},
	Url = {http://dx.doi.org/10.5220/0005785501370146},
	Year = {2016},
	Bdsk-Url-1 = {http://dx.doi.org/10.5220/0005785501370146}}

@article{Chadli:2016,
	Author = {Chadli, Saad Yasser and Idri, Ali and Ros, Joaqu{\'\i}n Nicol{\'a}s and Fern{\'a}ndez-Alem{\'a}n, Jos{\'e} Luis and de Gea, Juan M. Carrillo and Toval, Ambrosio},
	Date-Added = {2019-04-28 19:08:20 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1186/s40064-016-3670-7},
	Issn = {2193-1801},
	Journal = {SpringerPlus},
	Number = {1},
	Publisher = {Springer Nature},
	Title = {Software project management tools in global software development: a systematic mapping study},
	Url = {http://dx.doi.org/10.1186/s40064-016-3670-7},
	Volume = {5},
	Year = {2016},
	Bdsk-Url-1 = {http://dx.doi.org/10.1186/s40064-016-3670-7}}

@article{Barn:2016,
	Author = {Barn, Balbir S. and Clark, Tony and Ali, Almaas and Arif, Rabia},
	Date-Added = {2019-04-28 19:07:50 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1145/2856636.2856644},
	Isbn = {9781450340182},
	Journal = {Proceedings of the 9th India Software Engineering Conference on - ISEC '16},
	Publisher = {ACM Press},
	Title = {A Systematic Mapping Study of the Current Practice of Indian Software Engineering},
	Url = {http://dx.doi.org/10.1145/2856636.2856644},
	Year = {2016},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2856636.2856644}}

@article{Axelsson:2016,
	Abstract = {Software ecosystems are becoming a common model for software development in which different actors cooperate around a shared platform. However, it is not clear what the implications are on software quality when moving from a traditional approach to an ecosystem, and this is becoming increasingly important as ecosystems emerge in critical domains such as embedded applications. Therefore, this paper investigates the challenges related to quality assurance in software ecosystems, and identifies what approaches have been proposed in the literature. The research method used is a systematic literature mapping, which however only resulted in a small set of six papers. The literature findings are complemented with a constructive approach where areas are identified that merit further research, resulting in a set of research topics that form a research agenda for quality assurance in software ecosystems. The agenda spans the entire system life-cycle, and focuses on challenges particular to an ecosystem setting, which are mainly the results of the interactions across organizational borders, and the dynamic system integration being controlled by the users.},
	Author = {Jakob Axelsson and Mats Skoglund},
	Date-Added = {2019-04-28 19:07:18 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.jss.2015.12.020},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Software ecosystems, Quality, Verification, Testing},
	Pages = {69 - 81},
	Title = {Quality assurance in software ecosystems: A systematic literature mapping and research agenda},
	Url = {http://www.sciencedirect.com/science/article/pii/S0164121215002861},
	Volume = {114},
	Year = {2016},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0164121215002861},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.jss.2015.12.020}}

@article{Alves:2016,
	Abstract = {Context
The technical debt metaphor describes the effect of immature artifacts on software maintenance that bring a short-term benefit to the project in terms of increased productivity and lower cost, but that may have to be paid off with interest later. Much research has been performed to propose mechanisms to identify debt and decide the most appropriate moment to pay it off. It is important to investigate the current state of the art in order to provide both researchers and practitioners with information that enables further research activities as well as technical debt management in practice.
Objective
This paper has the following goals: to characterize the types of technical debt, identify indicators that can be used to find technical debt, identify management strategies, understand the maturity level of each proposal, and identify what visualization techniques have been proposed to support technical debt identification and management activities.
Method
A systematic mapping study was performed based on a set of three research questions. In total, 100 studies, dated from 2010 to 2014, were evaluated.
Results
We proposed an initial taxonomy of technical debt types, created a list of indicators that have been proposed to identify technical debt, identified the existing management strategies, and analyzed the current state of art on technical debt, identifying topics where new research efforts can be invested.
Conclusion
The results of this mapping study can help to identify points that still require further investigation in technical debt research.},
	Author = {Nicolli S.R. Alves and Thiago S. Mendes and Manoel G. de Mendon{\c c}a and Rodrigo O. Sp{\'\i}nola and Forrest Shull and Carolyn Seaman},
	Date-Added = {2019-04-28 19:06:57 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2015.10.008},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Technical debt, Software maintenance, Software engineering, Systematic mapping},
	Pages = {100 - 121},
	Title = {Identification and management of technical debt: A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584915001743},
	Volume = {70},
	Year = {2016},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584915001743},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2015.10.008}}

@inproceedings{Abdallah:2016,
	Address = {Los Alamitos, CA, USA},
	Author = {A. Abdallah and J. Lapalme and A. Abran},
	Booktitle = {2016 4th International Conference on Enterprise Systems (ES)},
	Date-Added = {2019-04-28 19:06:12 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1109/ES.2016.8},
	Keywords = {current measurement;data mining;databases;systematics;computer architecture;area measurement;business},
	Pages = {13-20},
	Publisher = {IEEE Computer Society},
	Title = {Enterprise Architecture Measurement: A Systematic Mapping Study},
	Url = {https://doi.ieeecomputersociety.org/10.1109/ES.2016.8},
	Year = {2016},
	Bdsk-Url-1 = {https://doi.ieeecomputersociety.org/10.1109/ES.2016.8},
	Bdsk-Url-2 = {https://doi.org/10.1109/ES.2016.8}}

@article{Zein:2016,
	Abstract = {The importance of mobile application specific testing techniques and methods has been attracting much attention of software engineers over the past few years. This is due to the fact that mobile applications are different than traditional web and desktop applications, and more and more they are moving to being used in critical domains. Mobile applications require a different approach to application quality and dependability and require an effective testing approach to build high quality and more reliable software. We performed a systematic mapping study to categorize and to structure the research evidence that has been published in the area of mobile application testing techniques and challenges that they have reported. Seventy nine (79) empirical studies are mapped to a classification schema. Several research gaps are identified and specific key testing issues for practitioners are identified: there is a need for eliciting testing requirements early during development process; the need to conduct research in real-world development environments; specific testing techniques targeting application life-cycle conformance and mobile services testing; and comparative studies for security and usability testing.},
	Author = {Samer Zein and Norsaremah Salleh and John Grundy},
	Date-Added = {2019-04-28 19:04:50 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.jss.2016.03.065},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Systematic mapping, Mobile application testing, Software testing},
	Pages = {334 - 356},
	Title = {A systematic mapping study of mobile application testing techniques},
	Url = {http://www.sciencedirect.com/science/article/pii/S0164121216300140},
	Volume = {117},
	Year = {2016},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0164121216300140},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.jss.2016.03.065}}

@article{Albuquerque:2016,
	Author = {Adriano Bessa Albuquerque and Francisco Jose Barreto Nunes},
	Date-Added = {2019-04-28 19:01:27 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.5281/zenodo.1124545},
	Journal = {International Journal of Computer, Electrical, Automation, Control and Information Engineering},
	Number = {6},
	Pages = {1004-1010},
	Title = {A Proposal for Systematic Mapping Study of Software Security Testing, Verification and Validation},
	Url = {https://doi.org/10.5281/zenodo.1124545},
	Volume = {10},
	Year = 2016,
	Bdsk-Url-1 = {https://doi.org/10.5281/zenodo.1124545}}

@article{Gonzalez_Ladron_de+Guevara:2016,
	Abstract = {The International Software Benchmarking Standards Group (ISBSG) maintains a repository of data about completed software projects. A common use of the ISBSG dataset is to investigate models to estimate a software project's size, effort, duration, and cost. The aim of this paper is to determine which and to what extent variables in the ISBSG dataset have been used in software engineering to build effort estimation models. For that purpose a systematic mapping study was applied to 107 research papers, obtained after a filtering process, that were published from 2000 until the end of 2013, and which listed the independent variables used in the effort estimation models. The usage of ISBSG variables for filtering, as dependent variables, and as independent variables is described. The 20 variables (out of 71) mostly used as independent variables for effort estimation are identified and analysed in detail, with reference to the papers and types of estimation methods that used them. We propose guidelines that can help researchers make informed decisions about which ISBSG variables to select for their effort estimation models.},
	Author = {Fernando Gonz{\'a}lez-Ladr{\'o}n-de-Guevara and Marta Fern{\'a}ndez-Diego and Chris Lokan},
	Date-Added = {2019-04-28 18:59:21 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.jss.2015.11.040},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Systematic mapping study, ISBSG data field, Software effort estimation},
	Pages = {188 - 215},
	Title = {The usage of ISBSG data fields in software effort estimation: A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0164121215002642},
	Volume = {113},
	Year = {2016},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0164121215002642},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.jss.2015.11.040}}

@article{Cavalcante:2016,
	Abstract = {The Internet of Things (IoT) is a novel paradigm relying on the interaction of smart objects (things) with each other and with physical and/or virtual resources through the Internet. Despite the recent advances that have made IoT a reality, there are several challenges to be addressed towards exploiting its full potential and promoting tangible benefits to society, environment, economy, and individual citizens. Recently, Cloud Computing has been advocated as a promising approach to tackle some of the existing challenges in IoT while leveraging its adoption and bringing new opportunities. With the combination of IoT and Cloud Computing, the cloud becomes an intermediate layer between smart objects and applications that make use of data and resources provided by these objects. On the one hand, IoT can benefit from the almost unlimited resources of Cloud Computing to implement management and composition of services related to smart objects and their provided data. On the other hand, the cloud can benefit from IoT by broadening its operation scope to deal with real-world objects. In spite of this synergy, the literature still lacks of a broad, comprehensive overview on what has been investigated on the integration of IoT and Cloud Computing and what are the open issues to be addressed in future research and development. The goal of this work is to fill this gap by systematically collecting and analyzing studies available in the literature aiming to: (i) obtain a comprehensive understanding on the integration of IoT and Cloud Computing paradigms; (ii) provide an overview of the current state of research on this topic; and (iii) identify important gaps in the existing approaches as well as promising research directions. To achieve this goal, a systematic mapping study was performed covering papers recently published in journals, conferences, and workshops, available at five relevant electronic databases. As a result, 35 studies were selected presenting strategies and solutions on how to integrate IoT and Cloud Computing as well as scenarios, research challenges, and opportunities in this context. Besides confirming the increasing interest on the integration of IoT and Cloud Computing, this paper reports the main outcomes of the performed systematic mapping by both presenting an overview of the state of the art on the investigated topic and shedding light on important challenges and potential directions to future research.},
	Author = {Everton Cavalcante and Jorge Pereira and Marcelo Pitanga Alves and Pedro Maia and Roniceli Moura and Thais Batista and Flavia C. Delicato and Paulo F. Pires},
	Date-Added = {2019-04-28 18:58:58 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.comcom.2016.03.012},
	Issn = {0140-3664},
	Journal = {Computer Communications},
	Keywords = {Internet of Things, IoT, Cloud Computing, Systematic mapping},
	Note = {Internet of Things\: Research challenges and Solutions},
	Pages = {17 - 33},
	Title = {On the interplay of Internet of Things and Cloud Computing: A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0140366416300706},
	Volume = {89-90},
	Year = {2016},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0140366416300706},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.comcom.2016.03.012}}

@article{Dusse:2016,
	Abstract = {Background: Emergency management (EM) refers to the ability to deal with emergency tasks in different phases and iterations. To do this, each task requires many and different types of information coming from several sources related to the incident. As people working in an emergency situation are generally under stress and have to make quick and effective decisions, they need to assimilate the received information in an easy and intuitive way. Information visualization (InfoVis) is the study of visual representations of abstract data to reinforce human cognition to understand these data through 2D computer screens. It is frequently used to analyze and understand the huge amount of multidimensional data produced in an emergency. Objective: This study analyzes how researchers use information visualization tools to improve emergency management. Our general objective is to map the area examining both the scientific community and the contributions that have been published in the literature, aiming to provide information, such as: understanding how the area is structured, common practices in existing works, and research gaps. Methods: A systematic mapping study was conducted to analyze the available information visualization tools and their applications in EM activities. A thorough search was carried out and a formal selection process was applied to gather all relevant articles on the subject. Selected primary studies were classified and analyzed with respect to their metadata and to answer eight research questions related to our mapping goal. In total, 196 studies were analyzed in depth. Results: The mapping study identified the most common visualization techniques applied in emergency management, the common environments and phases where they are applied, identifying gaps and also possible trends in the subject. We found out that particular issues concerning emergency management are not fully covered by existing visualization approaches, and when covered, existing literature provides only partial solutions. Conclusion: Our results provide a deep analysis on the application of InfoVis in the EM area, supporting researchers and developers in EM systems with insightful information on trending techniques in use, command practices and existing research gaps. We expect that these findings can support them on proposing new approaches to solve open problems in the area.},
	Author = {Fl{\'a}vio Dusse and Paulo Sim{\~o}es J{\'u}nior and Antonia Tamires Alves and Renato Novais and Vaninha Vieira and Manoel Mendon{\c c}a},
	Date-Added = {2019-04-28 18:58:35 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.eswa.2015.10.007},
	Issn = {0957-4174},
	Journal = {Expert Systems with Applications},
	Keywords = {Systematic mapping study, Emergency management, Information visualization},
	Pages = {424 - 437},
	Title = {Information visualization for emergency management: A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0957417415006946},
	Volume = {45},
	Year = {2016},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0957417415006946},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.eswa.2015.10.007}}

@article{Vale:2017,
	Abstract = {Context: Traceability in Software Product Lines (SPL) is the ability to interrelate software engineering artifacts through required links to answer specific questions related to the families of products and underlying development processes. Despite the existence of studies to map out available evidence on traceability for single systems development, there is a lack of understanding on common strategies, activities, artifacts, and research gaps for SPL traceability. Objective: This paper analyzes 62 studies dating from 2001 to 2015 and discusses seven aspects of SPL traceability: main goals, strategies, application domains, research intensity, research challenges, rigor, and industrial relevance. In addition to the analysis, this paper also synthesizes the available evidence, identifies open issues and points out areas calling for further research. Method: To gather evidence, we defined a mapping study process adapted from existing guidelines. Driven by a set of research questions, this process comprises three major phases: planning, conducting, and documenting the review. Results: This work provides a structured understanding of SPL traceability, indicating areas for further research. The lack of evidence regarding the application of research methods indicates the need for more rigorous SPL traceability studies with better description of context, study design, and limitations. For practitioners, although most identified studies have low industrial relevance, a few of them have high relevance and thus could provide some decision making support for application of SPL traceability in practice. Conclusions: This work concludes that SPL traceability is maturing and pinpoints areas where further investigation should be performed. As future work, we intend to improve the comparison between traceability proposals for SPL and single-system development.},
	Author = {Tassio Vale and Eduardo Santana de Almeida and Vander Alves and Uir{\'a} Kulesza and Nan Niu and Ricardo de Lima},
	Date-Added = {2019-04-28 18:58:14 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2016.12.004},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Systematic mapping study, Software product lines, Software and systems traceability, Software reuse},
	Pages = {1 - 18},
	Title = {Software product lines traceability: A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584916304463},
	Volume = {84},
	Year = {2017},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584916304463},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2016.12.004}}

@article{Rodriguez:2017,
	Abstract = {The software intensive industry is moving towards the adoption of a value-driven and adaptive real-time business paradigm. The traditional view of software as an item that evolves through releases every few months is being replaced by the continuous evolution of software functionality. This study aims to classify and analyse the literature related to continuous deployment in the software domain in order to scope the phenomenon, provide an overview of the state-of-the-art, investigate the scientific evidence in the reported results and identify areas suitable for further research. We conducted a systematic mapping study and classified the continuous deployment literature. The benefits and challenges related to continuous deployment were also analysed. RESULTS: The systematic mapping study includes 50 primary studies published between 2001 and 2014. An in-depth analysis of the primary studies revealed ten recurrent themes that characterize continuous deployment and provide researchers with directions for future work. In addition, a set of benefits and challenges of which practitioners may take advantage were identified. CONCLUSION: Overall, although the topic area is very promising, it is still in its infancy, thus offering a plethora of new opportunities for both researchers and software intensive companies.},
	Author = {Pilar Rodr{\'\i}guez and Alireza Haghighatkhah and Lucy Ellen Lwakatare and Susanna Teppola and Tanja Suomalainen and Juho Eskeli and Teemu Karvonen and Pasi Kuvaja and June M. Verner and Markku Oivo},
	Date-Added = {2019-04-28 18:57:50 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.jss.2015.12.015},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Continuous deployment, Software development, Systematic mapping study},
	Pages = {263 - 291},
	Title = {Continuous deployment of software intensive products and services: A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0164121215002812},
	Volume = {123},
	Year = {2017},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0164121215002812},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.jss.2015.12.015}}

@article{Nascimento:2017,
	Abstract = {Studies involving social media have focused on analyzing how companies can propagate information or how the social media tools can affect user behavior. Few studies have paid attention to User-Generated Content and its application to the improvement of business processes, even though there has been an increase in reported cases in recent years. Through a systematic mapping study of the Ebsco{\textregistered} database, we looked for articles that addressed this issue of user-generated content since its first appearance of up to 2015. In a first view, we confirmed the paucity of research related to this theme, even with the large increase of social media studies. As findings, we identified some important research trends towards public organizations using the content created by citizens to improve public services, as well as companies using social media tools to improve innovation processes. On the other hand, we identified gaps in the research, such as in journalism, engaging readers as information providers, and social media, being used for the improvement of the e-learning process.},
	Author = {Ademir Macedo Nascimento and Denis Silva da Silveira},
	Date-Added = {2019-04-28 18:56:54 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.chb.2016.10.016},
	Issn = {0747-5632},
	Journal = {Computers in Human Behavior},
	Keywords = {Business process improvement, Social media, Systematic mapping study, User-generated content, User-created content},
	Pages = {670 - 675},
	Title = {A systematic mapping study on using social media for business process improvement},
	Url = {http://www.sciencedirect.com/science/article/pii/S0747563216307178},
	Volume = {73},
	Year = {2017},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0747563216307178},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.chb.2016.10.016}}

@article{Nguyen:2017,
	Abstract = {Context
Cyber-physical systems (CPSs) have emerged to be the next generation of engineered systems driving the so-called fourth industrial revolution. CPSs are becoming more complex, open and more prone to security threats, which urges security to be engineered systematically into CPSs. Model-Based Security Engineering (MBSE) could be a key means to tackle this challenge via security by design, abstraction, and automation.
Objective
We aim at providing an initial assessment of the state of the art in MBSE for CPSs (MBSE4CPS). Specifically, this work focuses on finding out 1) the publication statistics of MBSE4CPS studies; 2) the characteristics of MBSE4CPS studies; and 3) the open issues of MBSE4CPS research.
Method
We conducted a systematic mapping study (SMS) following a rigorous protocol that was developed based on the state-of-the-art SMS and systematic review guidelines. From thousands of relevant publications, we systematically identified 48 primary MBSE4CPS studies for data extraction and synthesis to answer predefined research questions.
Results
SMS results show that for three recent years (2014--2016) the number of primary MBSE4CPS studies has increased significantly. Within the primary studies, the popularity of using Domain-Specific Languages (DSLs) is comparable with the use of the standardised UML modelling notation. Most primary studies do not explicitly address specific security concerns (e.g., confidentiality, integrity) but rather focus on security analyses in general on threats, attacks or vulnerabilities. Few primary studies propose to engineer security solutions for CPSs. Many focus on the early stages of development lifecycle such as security requirement engineering or analysis.
Conclusion
The SMS does not only provide the state of the art in MBSE4CPS, but also points out several open issues that would deserve more investigation, e.g., the lack of engineering security solutions for CPSs, limited tool support, too few industrial case studies, and the challenge of bridging DSLs in engineering secure CPSs.},
	Author = {Phu H. Nguyen and Shaukat Ali and Tao Yue},
	Date-Added = {2019-04-28 18:56:34 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2016.11.004},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Cyber-physical systems, Security, Model-based engineering, Security engineering, Systematic mapping, Snowballing, Survey},
	Pages = {116 - 135},
	Title = {Model-based security engineering for cyber-physical systems: A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584916303214},
	Volume = {83},
	Year = {2017},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584916303214},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2016.11.004}}

@article{Meldrum:2017,
	Author = {Meldrum, Sarah and Licorish, Sherlock A. and Savarimuthu, Bastin Tony Roy},
	Date-Added = {2019-04-28 18:56:08 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1145/3084226.3084267},
	Isbn = {9781450348041},
	Journal = {Proceedings of the 21st International Conference on Evaluation and Assessment in Software Engineering - EASE'17},
	Publisher = {ACM Press},
	Title = {Crowdsourced Knowledge on Stack Overflow},
	Url = {http://dx.doi.org/10.1145/3084226.3084267},
	Year = {2017},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/3084226.3084267}}

@article{Marimuthu:2017,
	Author = {Marimuthu, C. and Chandrasekaran, K.},
	Date-Added = {2019-04-28 18:54:57 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1145/3021460.3021464},
	Isbn = {9781450348560},
	Journal = {Proceedings of the 10th Innovations in Software Engineering Conference on - ISEC '17},
	Publisher = {ACM Press},
	Title = {Software Engineering Aspects of Green and Sustainable Software},
	Url = {http://dx.doi.org/10.1145/3021460.3021464},
	Year = {2017},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/3021460.3021464}}

@article{Garces:2017,
	Abstract = {Context: Ambient Assisted Living (AAL) has become an essential, multidisciplinary research topic, aiming at providing software systems and services that assist people in their everyday life activities. Considering the critical nature of AAL systems, several initiatives have already contributed to the improvement of their quality, by mainly focusing on their non-functional requirements. Despite the importance of quality assurance in AAL systems, there is a lack of a comprehensive analysis on how quality assurance is performed in such systems. This fact might in turn lead to an absence of standardization with regard to the quality assurance process of these systems. Objective: We provide a broad, detailed panorama about the state of the art on quality models (QMs) and quality attributes (QAs) that are important for the AAL domain. Method: We performed a Systematic Mapping (SM). We used six publication databases to cover all published material pertinent for our SM. We initially obtained 287 studies that were filtered based on a set of well-defined inclusion/exclusion criteria, resulting into a set of 27 studies that were used for exploring QAs for AAL systems. Results: The most common QAs used in the development of AAL systems were identified and defined. We also characterized important critical attributes for software systems in the AAL domain. Additionally, QAs for some AAL sub-domains were defined. Furthermore, we investigated how QM&QA have been defined, evaluated, and used in that domain. Finally, we offered an analysis of the maturity of the studies identified in our SM. Conclusion: It is necessary to develop a complete QM that: (i) defines all common QAs for AAL systems; (ii) considers variability of QAs among AAL sub-domains; (iii) analyses dependences among QAs; (iv) offers indicators or metrics to measure QAs; and (v) offers means to assess and predict quality of AAL systems.},
	Author = {Lina Garc{\'e}s and Apostolos Ampatzoglou and Paris Avgeriou and Elisa Yumi Nakagawa},
	Date-Added = {2019-04-28 18:54:37 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2016.10.005},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Quality attribute, Quality model, Ambient assisted living, Systematic mapping, ISO/IEC 25010},
	Pages = {121 - 138},
	Title = {Quality attributes and quality models for ambient assisted living software systems: A systematic mapping},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584916302932},
	Volume = {82},
	Year = {2017},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584916302932},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2016.10.005}}

@article{Usman:2017,
	Abstract = {Context: Software Engineering (SE) is an evolving discipline with new subareas being continuously developed and added. To structure and better understand the SE body of knowledge, taxonomies have been proposed in all SE knowledge areas. Objective: The objective of this paper is to characterize the state-of-the-art research on SE taxonomies. Method: A systematic mapping study was conducted, based on 270 primary studies. Results: An increasing number of SE taxonomies have been published since 2000 in a broad range of venues, including the top SE journals and conferences. The majority of taxonomies can be grouped into the following SWEBOK knowledge areas: construction (19.55%), design (19.55%), requirements (15.50%) and maintenance (11.81%). Illustration (45.76%) is the most frequently used approach for taxonomy validation. Hierarchy (53.14%) and faceted analysis (39.48%) are the most frequently used classification structures. Most taxonomies rely on qualitative procedures to classify subject matter instances, but in most cases (86.53%) these procedures are not described in sufficient detail. The majority of the taxonomies (97%) target unique subject matters and many taxonomy-papers are cited frequently. Most SE taxonomies are designed in an ad-hoc way. To address this issue, we have revised an existing method for developing taxonomies in a more systematic way. Conclusion: There is a strong interest in taxonomies in SE, but few taxonomies are extended or revised. Taxonomy design decisions regarding the used classification structures, procedures and descriptive bases are usually not well described and motivated.},
	Author = {Muhammad Usman and Ricardo Britto and J{\"u}rgen B{\"o}rstler and Emilia Mendes},
	Date-Added = {2019-04-28 18:54:12 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2017.01.006},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Taxonomy, Classification, Software engineering, Systematic mapping study},
	Pages = {43 - 59},
	Title = {Taxonomies in software engineering: A Systematic mapping study and a revised taxonomy development method},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584917300472},
	Volume = {85},
	Year = {2017},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584917300472},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2017.01.006}}

@article{Ferreira:2017,
	Abstract = {Context
Search-based algorithms have been successfully applied to solve software engineering problems in the field known as Search-based Software Engineering (SBSE). However, in practice, the user may reject the obtained solutions, since many characteristics of the problem cannot be mathematically modeled. To cope with this situation, preference-based algorithms have been investigated and raised interest in the SBSE field.
Objective
To identify the quantity and type of research on SBSE preference-based approaches and to contribute to this new research subject, named here Preference and Search-Based Software Engineering (PSBSE),
Method
We conducted a systematic mapping, following a research plan to locate, assess, extract and group the outcomes from relevant studies.
Results
Few software engineering activities have been addressed. The most used algorithms are evolutionary and single-objective. In most studies the preferences are provided interactively and, in many cases, the user preferences are incorporated in the fitness functions. We observe a lack of evaluation measures and works comparing existing approaches.
Conclusions
The use of preference-based algorithms in SBSE is an underexplored subject, and many research opportunities exist.},
	Author = {Thiago Nascimento Ferreira and Silvia Regina Vergilio and Jerffeson Teixeira de Souza},
	Date-Added = {2019-04-28 18:53:35 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.infsof.2017.05.003},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Preference-based algorithms, Search-based software engineering, Systematic mapping},
	Pages = {55 - 69},
	Title = {Incorporating user preferences in search-based software engineering: A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584917303890},
	Volume = {90},
	Year = {2017},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584917303890},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2017.05.003}}

@article{Enriquez:2017,
	Abstract = {The entity reconciliation (ER) problem aroused much interest as a research topic in today's Big Data era, full of big and open heterogeneous data sources. This problem poses when relevant information on a topic needs to be obtained using methods based on: (i) identifying records that represent the same real world entity, and (ii) identifying those records that are similar but do not correspond to the same real-world entity. ER is an operational intelligence process, whereby organizations can unify different and heterogeneous data sources in order to relate possible matches of non-obvious entities. Besides, the complexity that the heterogeneity of data sources involves, the large number of records and differences among languages, for instance, must be added. This paper describes a Systematic Mapping Study (SMS) of journal articles, conferences and workshops published from 2010 to 2017 to solve the problem described before, first trying to understand the state-of-the-art, and then identifying any gaps in current research. Eleven digital libraries were analyzed following a systematic, semiautomatic and rigorous process that has resulted in 61 primary studies. They represent a great variety of intelligent proposals that aim to solve ER. The conclusion obtained is that most of the research is based on the operational phase as opposed to the design phase, and most studies have been tested on real-world data sources, where a lot of them are heterogeneous, but just a few apply to industry. There is a clear trend in research techniques based on clustering/blocking and graphs, although the level of automation of the proposals is hardly ever mentioned in the research work.},
	Author = {J.G. Enr{\'\i}quez and F.J. Dom{\'\i}nguez-Mayo and M.J. Escalona and M. Ross and G. Staples},
	Date-Added = {2019-04-28 18:53:14 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.eswa.2017.03.010},
	Issn = {0957-4174},
	Journal = {Expert Systems with Applications},
	Keywords = {Systematic mapping study, Entity reconciliation, Heterogeneous databases, Big data},
	Pages = {14 - 27},
	Title = {Entity reconciliation in big data sources: A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0957417417301550},
	Volume = {80},
	Year = {2017},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0957417417301550},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.eswa.2017.03.010}}

@article{Abbaspour:2016,
	Author = {Abbaspour Asadollah, Sara and Sundmark, Daniel and Eldh, Sigrid and Hansson, Hans and Afzal, Wasif},
	Date-Added = {2019-04-28 18:52:50 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1007/s11219-015-9301-7},
	Issn = {1573-1367},
	Journal = {Software Quality Journal},
	Number = {1},
	Pages = {49--82},
	Publisher = {Springer Nature},
	Title = {10 Years of research on debugging concurrent and multicore software: a systematic mapping study},
	Url = {http://dx.doi.org/10.1007/s11219-015-9301-7},
	Volume = {25},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s11219-015-9301-7}}

@article{Caballero_Hernandez:2017,
	Abstract = {Serious games are games with an educational purpose. In these games, players develop their skills by facing a number of challenges, and students are assessed according to their game playing behaviour. Assessment of serious game-based learning experiences has to take into account diverse features as game genre, pedagogical aim or game context. This paper analyses how skills are usually assessed in learning experiences based on serious games. To reach this objective, a systematic mapping study of more than 400 papers is undertaken. Papers were identified and classified according to a framework based on four categories: assessment aim, implementation, integration and primary assessment type. The reviewed literature mainly deals with contributions on methods and approaches for serious games. Results have revealed that most assessment methods are applied for a formative purpose more than for a certification purpose. Most frequent implementations such as game scoring and integrations like monitoring states were also uncovered. The main primary type of assessment detected was in-process. In addition, several limitations were found in the assessment methods: regarding the aim of assessment, certification of previous or attained skills was usually implemented out of the game; the scope of some implementations was limited because results were predefined earlier; and most of methods analysed present scalability issues because they rely on manual assessments. Such findings are analysed and discussed to clarify the state of the art and provide recommendations for further work in the area of serious games-based learning.},
	Author = {Juan Antonio Caballero-Hern{\'a}ndez and Manuel Palomo-Duarte and Juan Manuel Dodero},
	Date-Added = {2019-04-28 18:52:23 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.compedu.2017.05.008},
	Issn = {0360-1315},
	Journal = {Computers & Education},
	Keywords = {Serious games, Game Based Learning, Skill assessment, Systematic Mapping Study, Interactive learning environments},
	Pages = {42 - 60},
	Title = {Skill assessment in learning experiences based on serious games: A Systematic Mapping Study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0360131517301136},
	Volume = {113},
	Year = {2017},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0360131517301136},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.compedu.2017.05.008}}

@article{Assuncao:2017,
	Author = {Assun{\c c}{\~a}o, Wesley K. G. and Lopez-Herrejon, Roberto E. and Linsbauer, Lukas and Vergilio, Silvia R. and Egyed, Alexander},
	Date-Added = {2019-04-28 18:51:57 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1007/s10664-017-9499-z},
	Issn = {1573-7616},
	Journal = {Empirical Software Engineering},
	Number = {6},
	Pages = {2972--3016},
	Publisher = {Springer Nature},
	Title = {Reengineering legacy applications into software product lines: a systematic mapping},
	Url = {http://dx.doi.org/10.1007/s10664-017-9499-z},
	Volume = {22},
	Year = {2017},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s10664-017-9499-z}}

@article{Haghighatkhah:2017,
	Abstract = {The automotive industry is going through a fundamental change by moving from a mechanical to a software-intensive industry in which most innovation and competition rely on software engineering competence. Over the last few decades, the importance of software engineering in the automotive industry has increased significantly and has attracted much attention from both scholars and practitioners. A large body-of-knowledge on automotive software engineering has accumulated in several scientific publications, yet there is no systematic analysis of that knowledge. This systematic mapping study aims to classify and analyze the literature related to automotive software engineering in order to provide a structured body-of-knowledge, identify well-established topics and potential research gaps. The review includes 679 articles from multiple research sub-area, published between 1990 and 2015. The primary studies were analyzed and classified with respect to five different dimensions. Furthermore, potential research gaps and recommendations for future research are presented. Three areas, namely system/software architecture and design, qualification testing, and reuse were the most frequently addressed topics in the literature. There were fewer comparative and validation studies, and the literature lacks practitioner-oriented guidelines. Overall, research activity on automotive software engineering seems to have high industrial relevance but is relatively lower in its scientific rigor.},
	Author = {Alireza Haghighatkhah and Ahmad Banijamali and Olli-Pekka Pakanen and Markku Oivo and Pasi Kuvaja},
	Date-Added = {2019-04-28 18:51:25 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1016/j.jss.2017.03.005},
	Issn = {0164-1212},
	Journal = {Journal of Systems and Software},
	Keywords = {Literature survey, Systematic mapping study, Automotive software engineering, Automotive systems, Embedded systems, Software-intensive systems},
	Pages = {25 - 55},
	Title = {Automotive software engineering: A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0164121217300560},
	Volume = {128},
	Year = {2017},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0164121217300560},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.jss.2017.03.005}}

@article{Fernandez:2014,
	Author = {Fern{\'a}ndez, Daniel M{\'e}ndez and Ognawala, Saahil and Wagner, Stefan and Daneva, Maya},
	Date-Added = {2019-04-28 18:51:00 +0100},
	Date-Modified = {2020-01-28 14:16:04 +0100},
	Doi = {10.1145/2652524.2652555},
	Isbn = {9781450327749},
	Journal = {Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement - ESEM '14},
	Publisher = {ACM Press},
	Title = {Where do we stand in requirements engineering improvement today?},
	Url = {http://dx.doi.org/10.1145/2652524.2652555},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2652524.2652555}}
