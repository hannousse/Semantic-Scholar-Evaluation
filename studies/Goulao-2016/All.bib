%% This BibTeX bibliography file was created using BibDesk.
%% http://bibdesk.sourceforge.net/


%% Created for Hannousse Abdelhakim at 2020-01-28 14:13:55 +0100 


%% Saved with string encoding Unicode (UTF-8) 



@article{Yue:2010,
	Author = {Yue, Tao and Briand, Lionel C. and Labiche, Yvan},
	Date-Added = {2019-05-13 16:32:22 +0100},
	Date-Modified = {2020-01-28 14:13:48 +0100},
	Doi = {10.1007/s00766-010-0111-y},
	Issn = {1432-010X},
	Journal = {Requirements Engineering},
	Number = {2},
	Pages = {75--99},
	Publisher = {Springer Nature},
	Title = {A systematic review of transformation approaches between user requirements and analysis models},
	Url = {http://dx.doi.org/10.1007/s00766-010-0111-y},
	Volume = {16},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s00766-010-0111-y}}

@article{Szvetits:2013,
	Author = {Szvetits, Michael and Zdun, Uwe},
	Date-Added = {2019-05-13 16:31:29 +0100},
	Date-Modified = {2020-01-28 14:13:48 +0100},
	Doi = {10.1007/s10270-013-0394-9},
	Issn = {1619-1374},
	Journal = {Software & Systems Modeling},
	Number = {1},
	Pages = {31--69},
	Publisher = {Springer Nature},
	Title = {Systematic literature review of the objectives, techniques, kinds, and architectures of models at runtime},
	Url = {http://dx.doi.org/10.1007/s10270-013-0394-9},
	Volume = {15},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s10270-013-0394-9}}

@article{Santiago:2012,
	Abstract = {Context
Model-Driven Engineering provides a new landscape for dealing with traceability in software development.
Objective
Our goal is to analyze the current state of the art in traceability management in the context of Model-Driven Engineering.
Method
We use the systematic literature review based on the guidelines proposed by Kitchenham. We propose five research questions and six quality assessments.
Results
Of the 157 relevant studies identified, 29 have been considered primary studies. These studies have resulted in 17 proposals.
Conclusion
The evaluation shows that the most addressed operations are storage, CRUD and visualization, while the most immature operations are exchange and analysis traceability information.},
	Author = {Iv{\'a}n Santiago and {\'A}lvaro Jim{\'e}nez and Juan Manuel Vara and Valeria De Castro and Ver{\'o}nica A. Bollati and Esperanza Marcos},
	Date-Added = {2019-05-13 16:30:43 +0100},
	Date-Modified = {2020-01-28 14:13:48 +0100},
	Doi = {10.1016/j.infsof.2012.07.008},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Traceability, Model-Driven Engineering, Systematic literature review},
	Note = {Special Section on Software Reliability and Security},
	Number = {12},
	Pages = {1340 - 1356},
	Title = {Model-Driven Engineering as a new landscape for traceability management: A systematic literature review},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584912001346},
	Volume = {54},
	Year = {2012},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584912001346},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2012.07.008}}

@article{Nguyen:2013,
	Author = {Nguyen, Phu H. and Klein, Jacques and Le Traon, Yves and Kramer, Max E.},
	Date-Added = {2019-05-13 16:29:57 +0100},
	Date-Modified = {2020-01-28 14:13:48 +0100},
	Doi = {10.1109/apsec.2013.64},
	Isbn = {9781479921430},
	Journal = {2013 20th Asia-Pacific Software Engineering Conference (APSEC)},
	Publisher = {IEEE},
	Title = {A Systematic Review of Model-Driven Security},
	Url = {http://dx.doi.org/10.1109/APSEC.2013.64},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/APSEC.2013.64},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/apsec.2013.64}}

@article{Graciano_Neto:2014,
	Author = {Graciano Neto, Valdemar Vicente and Guessi, Milena and Oliveira, Lucas Bueno R. and Oquendo, Flavio and Nakagawa, Elisa Yumi},
	Date-Added = {2019-05-13 16:28:06 +0100},
	Date-Modified = {2020-01-28 14:13:48 +0100},
	Doi = {10.1145/2642803.2642825},
	Isbn = {9781450327787},
	Journal = {Proceedings of the 2014 European Conference on Software Architecture Workshops - ECSAW '14},
	Publisher = {ACM Press},
	Title = {Investigating the Model-Driven Development for Systems-of-Systems},
	Url = {http://dx.doi.org/10.1145/2642803.2642825},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1145/2642803.2642825}}

@article{Mohagheghi:2009,
	Abstract = {More attention is paid to the quality of models along with the growing importance of modelling in software development. We performed a systematic review of studies discussing model quality published since 2000 to identify what model quality means and how it can be improved. From forty studies covered in the review, six model quality goals were identified; i.e., correctness, completeness, consistency, comprehensibility, confinement and changeability. We further present six practices proposed for developing high-quality models together with examples of empirical evidence. The contributions of the article are identifying and classifying definitions of model quality and identifying gaps for future research.},
	Author = {Parastoo Mohagheghi and Vegard Dehlen and Tor Neple},
	Date-Added = {2019-05-13 16:26:50 +0100},
	Date-Modified = {2020-01-28 14:13:48 +0100},
	Doi = {10.1016/j.infsof.2009.04.004},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Systematic review, Modelling, Model quality, Model-driven development, UML},
	Note = {Quality of UML Models},
	Number = {12},
	Pages = {1646 - 1669},
	Title = {Definitions and approaches to model quality in model-based software development -- A review of literature},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584909000457},
	Volume = {51},
	Year = {2009},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584909000457},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2009.04.004}}

@article{Mohagheghi:2008,
	Author = {Mohagheghi, Parastoo and Dehlen, Vegard},
	Date-Added = {2019-05-13 16:24:50 +0100},
	Date-Modified = {2020-01-28 14:13:48 +0100},
	Doi = {10.1007/978-3-540-69100-6_31},
	Isbn = {9783540691006},
	Journal = {Lecture Notes in Computer Science},
	Pages = {432--443},
	Publisher = {Springer Berlin Heidelberg},
	Title = {Where Is the Proof? - A Review of Experiences from Applying MDE in Industry},
	Url = {http://dx.doi.org/10.1007/978-3-540-69100-6_31},
	Year = {2008},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/978-3-540-69100-6_31}}

@article{Misbhauddin:2013,
	Author = {Misbhauddin, Mohammed and Alshayeb, Mohammad},
	Date-Added = {2019-05-13 16:23:07 +0100},
	Date-Modified = {2020-01-28 14:13:48 +0100},
	Doi = {10.1007/s10664-013-9283-7},
	Issn = {1573-7616},
	Journal = {Empirical Software Engineering},
	Number = {1},
	Pages = {206--251},
	Publisher = {Springer Nature},
	Title = {UML model refactoring: a systematic literature review},
	Url = {http://dx.doi.org/10.1007/s10664-013-9283-7},
	Volume = {20},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s10664-013-9283-7}}

@article{Mehmood:2013,
	Abstract = {Context
Model-driven code generation is being increasingly applied to enhance software development from perspectives of maintainability, extensibility and reusability. However, aspect-oriented code generation from models is an area that is currently underdeveloped.
Objective
In this study we provide a survey of existing research on aspect-oriented modeling and code generation to discover current work and identify needs for future research.
Method
A systematic mapping study was performed to find relevant studies. Classification schemes have been defined and the 65 selected primary studies have been classified on the basis of research focus, contribution type and research type.
Results
The papers of solution proposal research type are in a majority. All together aspect-oriented modeling appears being the most focused area divided into modeling notations and process (36%) and model composition and interaction management (26%). The majority of contributions are methods.
Conclusion
Aspect-oriented modeling and composition mechanisms have been significantly discussed in existing literature while more research is needed in the area of model-driven code generation. Furthermore, we have observed that previous research has frequently focused on proposing solutions and thus there is need for research that validates and evaluates the existing proposals in order to provide firm foundations for aspect-oriented model-driven code generation.},
	Author = {Abid Mehmood and Dayang N.A. Jawawi},
	Date-Added = {2019-05-13 16:22:18 +0100},
	Date-Modified = {2020-01-28 14:13:48 +0100},
	Doi = {10.1016/j.infsof.2012.09.003},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Aspect-oriented software development, Model-driven engineering, Code generation, Systematic map},
	Note = {Special Section: Component-Based Software Engineering (CBSE), 2011},
	Number = {2},
	Pages = {395 - 411},
	Title = {Aspect-oriented model-driven code generation: A systematic mapping study},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584912001863},
	Volume = {55},
	Year = {2013},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584912001863},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2012.09.003}}

@article{Malavolta:2014,
	Author = {Malavolta, Ivano and Muccini, Henry},
	Date-Added = {2019-05-13 16:21:18 +0100},
	Date-Modified = {2020-01-28 14:13:48 +0100},
	Doi = {10.1109/seaa.2014.61},
	Isbn = {9781479957958},
	Journal = {2014 40th EUROMICRO Conference on Software Engineering and Advanced Applications},
	Publisher = {IEEE},
	Title = {A Study on MDE Approaches for Engineering Wireless Sensor Networks},
	Url = {http://dx.doi.org/10.1109/SEAA.2014.61},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/SEAA.2014.61},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/seaa.2014.61}}

@article{Lucas:2009,
	Abstract = {Information System (IS) development has been beset by consistency problems since its infancy. These problems are greater still in UML software development, and are principally caused by the existence of multiple views (models) for the same system, and may involve potentially contradictory system specifications. Since a considerable amount of work takes place within the scope of model consistency management, this paper presents a systematic literature review (SLR) which was carried out to discover the various current model consistency conceptions, proposals, problems and solutions provided. To do this, a total of 907 papers related to UML model consistency published in literature and extracted from the most relevant scientific sources (IEEE Computer Society, ACM Digital Library, Google Scholar, ScienceDirect, and the SCOPUS Database) were considered, of which 42 papers were eventually analyzed. This systematic literature review resulted in the identification of the current state-of-the-art with regard to UML model consistency management research along with open issues, trends and future research within this scope. A formal approach for the handling of inconsistency problems which fulfils the identified limitations is also briefly presented.},
	Author = {Francisco J. Lucas and Fernando Molina and Ambrosio Toval},
	Date-Added = {2019-05-13 16:20:22 +0100},
	Date-Modified = {2020-01-28 14:13:48 +0100},
	Doi = {10.1016/j.infsof.2009.04.009},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {UML, Model consistency, Systematic literature review},
	Note = {Quality of UML Models},
	Number = {12},
	Pages = {1631 - 1645},
	Title = {A systematic review of UML model consistency management},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584909000433},
	Volume = {51},
	Year = {2009},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584909000433},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2009.04.009}}

@inproceedings{Loniewski:2010,
	Abstract = {Model-Driven Development (MDD) emphasizes the use of models at a higher abstraction level in the software development process and argues in favor of automation via model execution, transformation, and code generation. However, one current challenge is how to manage requirements during this process whilst simultaneously stressing the benefits of automation. This paper presents a systematic review of the current use of requirements engineering techniques in MDD processes and their actual automation level. 72 papers from the last decade have been reviewed from an initial set of 884 papers. The results show that although MDD techniques are used to a great extent in platform-independent models, platform-specific models, and at code level, at the requirements level most MDD approaches use only partially defined requirements models or even natural language. We additionally identify several research gaps such as a need for more efforts to explicitly deal with requirements traceability and the provision of better tool support.},
	Address = {Berlin, Heidelberg},
	Author = {Loniewski, Grzegorz and Insfran, Emilio and Abrah{\~a}o, Silvia},
	Booktitle = {Model Driven Engineering Languages and Systems},
	Date-Added = {2019-05-13 16:19:47 +0100},
	Date-Modified = {2020-01-28 14:13:48 +0100},
	Doi = {10.1007/978-3-642-16129-2_16},
	Editor = {Petriu, Dorina C. and Rouquette, Nicolas and Haugen, {\O}ystein},
	Isbn = {978-3-642-16129-2},
	Pages = {213--227},
	Publisher = {Springer Berlin Heidelberg},
	Title = {A Systematic Review of the Use of Requirements Engineering Techniques in Model-Driven Development},
	Year = {2010},
	Bdsk-Url-1 = {https://doi.org/10.1007/978-3-642-16129-2_16}}

@article{Jensen:2011,
	Author = {Jensen, Jostein and Jaatun, Martin Gilje},
	Date-Added = {2019-05-13 16:17:28 +0100},
	Date-Modified = {2020-01-28 14:13:48 +0100},
	Doi = {10.1109/ares.2011.110},
	Isbn = {9781457709791},
	Journal = {2011 Sixth International Conference on Availability, Reliability and Security},
	Publisher = {IEEE},
	Title = {Security in Model Driven Development: A Survey},
	Url = {http://dx.doi.org/10.1109/ARES.2011.110},
	Year = {2011},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ARES.2011.110},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/ares.2011.110}}

@inproceedings{Hansson:2014,
	Author = {Sebastian Hansson and Yu Zhao and H{\aa}kan Burden},
	Booktitle = {CEUR Workshop Proceedings of the 3rd Workshop on Extreme Modeling, XM@MoDELS},
	Date-Added = {2019-05-13 16:14:35 +0100},
	Date-Modified = {2020-01-28 14:13:48 +0100},
	Pages = {2-11},
	Title = {How MAD are we? Empirical Evidence for Model-driven Agile Development},
	Volume = {1239},
	Year = {2014}}

@article{Gonzalez:2014,
	Abstract = {Context
Model-driven Engineering (MDE) promotes the utilization of models as primary artifacts in all software engineering activities. Therefore, mechanisms to ensure model correctness become crucial, specially when applying MDE to the development of software, where software is the result of a chain of (semi)automatic model transformations that refine initial abstract models to lower level ones from which the final code is eventually generated. Clearly, in this context, an error in the model/s is propagated to the code endangering the soundness of the resulting software. Formal verification of software models is a promising approach that advocates the employment of formal methods to achieve model correctness, and it has received a considerable amount of attention in the last few years.
Objective
The objective of this paper is to analyze the state of the art in the field of formal verification of models, restricting the analysis to those approaches applied over static software models complemented or not with constraints expressed in textual languages, typically the Object Constraint Language (OCL).
Method
We have conducted a Systematic Literature Review (SLR) of the published works in this field, describing their main characteristics.
Results
The study is based on a set of 48 resources that have been grouped in 18 different approaches according to their affinity. For each of them we have analyzed, among other issues, the formalism used, the support given to OCL, the correctness properties addressed or the feedback yielded by the verification process.
Conclusions
One of the most important conclusions obtained is that current model verification approaches are strongly influenced by the support given to OCL. Another important finding is that in general, current verification tools present important flaws like the lack of integration into the model designer tool chain or the lack of efficiency when verifying large, real-life models.},
	Author = {Carlos A. Gonz{\'a}lez and Jordi Cabot},
	Date-Added = {2019-05-13 16:12:35 +0100},
	Date-Modified = {2020-01-28 14:13:48 +0100},
	Doi = {10.1016/j.infsof.2014.03.003},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {MDE, Formal verification, OCL, Systematic literature review},
	Number = {8},
	Pages = {821 - 838},
	Title = {Formal verification of static software models in MDE: A systematic review},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584914000627},
	Volume = {56},
	Year = {2014},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584914000627},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2014.03.003}}

@article{Giraldo:2015,
	Author = {Giraldo, Faber D. and Espana, Sergio and Giraldo, William J. and Pastor, Oscar},
	Date-Added = {2019-05-13 16:11:41 +0100},
	Date-Modified = {2020-01-28 14:13:48 +0100},
	Doi = {10.1109/rcis.2015.7128864},
	Isbn = {9781467366304},
	Journal = {2015 IEEE 9th International Conference on Research Challenges in Information Science (RCIS)},
	Publisher = {IEEE},
	Title = {Modelling language quality evaluation in model-driven information systems engineering: A roadmap},
	Url = {http://dx.doi.org/10.1109/RCIS.2015.7128864},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/RCIS.2015.7128864},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/rcis.2015.7128864}}

@article{Giraldo:2014,
	Author = {Giraldo, Faber D. and Espana, Sergio and Pastor, Oscar},
	Date-Added = {2019-05-13 16:10:51 +0100},
	Date-Modified = {2020-01-28 14:13:48 +0100},
	Doi = {10.1109/rcis.2014.6861030},
	Isbn = {9781479923939},
	Journal = {2014 IEEE Eighth International Conference on Research Challenges in Information Science (RCIS)},
	Publisher = {IEEE},
	Title = {Analysing the concept of quality in model-driven engineering literature: A systematic review},
	Url = {http://dx.doi.org/10.1109/RCIS.2014.6861030},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/RCIS.2014.6861030},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/rcis.2014.6861030}}

@article{Giachetti:2012,
	Author = {Giachetti, Giovanni and Valverde, Francisco and Marin, Beatriz},
	Date-Added = {2019-05-13 16:09:45 +0100},
	Date-Modified = {2020-01-28 14:13:48 +0100},
	Doi = {10.1109/rcis.2012.6240445},
	Isbn = {9781457719370},
	Journal = {2012 Sixth International Conference on Research Challenges in Information Science (RCIS)},
	Publisher = {IEEE},
	Title = {Interoperability for model-driven development: Current state and future challenges},
	Url = {http://dx.doi.org/10.1109/RCIS.2012.6240445},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/RCIS.2012.6240445},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/rcis.2012.6240445}}

@article{Genero:2011,
	Author = {Genero, Marcela and Fern{\'a}ndez-Saez, Ana M. and Nelson, H. James and Poels, Geert and Piattini, Mario},
	Date-Added = {2019-05-13 16:07:56 +0100},
	Date-Modified = {2020-01-28 14:13:48 +0100},
	Doi = {10.4018/jdm.2011070103},
	Issn = {1533-8010},
	Journal = {Journal of Database Management},
	Number = {3},
	Pages = {46--70},
	Publisher = {IGI Global},
	Title = {Research Review: A Systematic Literature Review on the Quality of UML Models},
	Url = {http://dx.doi.org/10.4018/jdm.2011070103},
	Volume = {22},
	Year = {2011},
	Bdsk-Url-1 = {http://dx.doi.org/10.4018/jdm.2011070103}}

@article{Dominguez:2012,
	Abstract = {Context
Model Driven Development (MDD) encourages the use of models for developing complex software systems. Following a MDD approach, modelling languages are used to diagrammatically model the structure and behaviour of object-oriented software, among which state-based languages (including UML state machines, finite state machines and Harel statecharts) constitute the most widely used to specify the dynamic behaviour of a system. However, generating code from state machine models as part of the final system constitutes one of the most challenging tasks due to its dynamic nature and because many state machine concepts are not supported by the object-oriented programming languages. Therefore, it is not surprising that such code generation has received great attention over the years.
Objective
The overall objective of this paper is to plot the landscape of published proposals in the field of object oriented code generation from state machine specifications, restricting the search neither to a specific context nor to a particular programming language.
Method
We perform a systematic, accurate literature review of published studies focusing on the object oriented implementation of state machine specifications.
Results
The systematic review is based on a comprehensive set of 53 resources in all, which we have classified into two groups: pattern-based and not pattern-based. For each proposal, we have analysed both the state machine specification elements they support and the means the authors propose for their implementation. Additionally, the review investigates which proposals take into account desirable features to be considered in software development such as maintenance or reusability.
Conclusions
One of the conclusions drawn from the review is that most of the analysed works are based on a software design pattern. Another key finding is that many papers neither support several of the main components of the expressive richness of state machine specifications nor provide an implementation strategy that considers relevant qualitative aspects in software development.},
	Author = {Eladio Domı´nguez and Beatriz P{\'e}rez and {\'A}ngel L. Rubio and Marı´a A. Zapata},
	Date-Added = {2019-05-13 16:06:00 +0100},
	Date-Modified = {2020-01-28 14:13:48 +0100},
	Doi = {10.1016/j.infsof.2012.04.008},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {UML state machines, Finite state machines, Statecharts, Code generation, Systematic review},
	Number = {10},
	Pages = {1045 - 1066},
	Title = {A systematic review of code generation proposals from state machine specifications},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584912000924},
	Volume = {54},
	Year = {2012},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584912000924},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2012.04.008}}

@inproceedings{Delgado:2013,
	Abstract = {Over the last few years organizations have been dealing with the integration of their business processes and software and technologies to support their realization. One challenge is to unite the vision from business and software areas, to design and implement business processes in a way that allows organizations to react agilely to changes. New paradigms have appeared to support this vision: Business Process Management (BPM), Service-Oriented Computing (SOC) and Model-Driven Development (MDD). BPM deals with managing business process lifecycle from modeling, implementation, execution and evaluation to find improvement opportunities. SOC bases the design and implementation of software on services, which are defined to support business processes. MDD focus is on models, allowing the definition of automatic transformation between them along with code generation for different platforms. In this article we present the main principles for the integration of these paradigms as found in a systematic review carried out with the objective of establishing the bases for our research.},
	Address = {Berlin, Heidelberg},
	Author = {Delgado, Andrea and Ruiz, Francisco and de Guzm{\'a}n, Ignacio Garc{\'\i}a-Rodr{\'\i}guez and Piattini, Mario},
	Booktitle = {Software and Data Technologies},
	Date-Added = {2019-05-13 16:05:23 +0100},
	Date-Modified = {2020-01-28 14:13:48 +0100},
	Doi = {10.1007/978-3-642-29578-2_6},
	Editor = {Cordeiro, Jos{\'e} and Virvou, Maria and Shishkov, Boris},
	Isbn = {978-3-642-29578-2},
	Pages = {88--108},
	Publisher = {Springer Berlin Heidelberg},
	Title = {Main Principles on the Integration of SOC and MDD Paradigms to Business Processes: A Systematic Review},
	Year = {2010},
	Bdsk-Url-1 = {https://doi.org/10.1007/978-3-642-29578-2_6}}

@article{Budgen:2011,
	Author = {Budgen, D. and Burn, A. J. and Brereton, O. P. and Kitchenham, B. A. and Pretorius, R.},
	Date-Added = {2019-05-13 16:01:46 +0100},
	Date-Modified = {2020-01-28 14:13:48 +0100},
	Doi = {10.1002/spe.1009},
	Issn = {0038-0644},
	Journal = {Software: Practice and Experience},
	Number = {4},
	Pages = {363--392},
	Publisher = {Wiley},
	Title = {Empirical evidence about the UML: a systematic literature review},
	Url = {http://dx.doi.org/10.1002/spe.1009},
	Volume = {41},
	Year = {2011},
	Bdsk-Url-1 = {http://dx.doi.org/10.1002/spe.1009}}
