%% This BibTeX bibliography file was created using BibDesk.
%% https://bibdesk.sourceforge.io/

%% Created for basma photography at 2019-05-12 23:54:06 +0100 


%% Saved with string encoding Unicode (UTF-8) 



@article{Mohalik:2014,
	Author = {Mohalik, Swarup and Gadkari, Ambar A. and Yeolekar, Anand and Shashidhar, K.C. and Ramesh, S.},
	Date-Added = {2019-05-12 23:51:19 +0100},
	Date-Modified = {2019-05-12 23:51:45 +0100},
	Doi = {10.1002/stvr.1489},
	Issn = {0960-0833},
	Journal = {Software Testing, Verification and Reliability},
	Number = {2},
	Pages = {155--180},
	Publisher = {Wiley},
	Title = {Automatic test case generation from Simulink/Stateflow models using model checking},
	Url = {http://dx.doi.org/10.1002/stvr.1489},
	Volume = {24},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1002/stvr.1489}}

@article{Samih:2014,
	Author = {Samih, Hamza and Guen, Helene Le and Bogusch, Ralf and Acher, Mathieu and Baudry, Benoit},
	Date-Added = {2019-05-12 23:50:25 +0100},
	Date-Modified = {2019-05-12 23:51:52 +0100},
	Doi = {10.1109/iceccs.2014.19},
	Isbn = {9781479954810},
	Journal = {2014 19th International Conference on Engineering of Complex Computer Systems},
	Publisher = {IEEE},
	Title = {Deriving Usage Model Variants for Model-Based Testing: An Industrial Case Study},
	Url = {http://dx.doi.org/10.1109/ICECCS.2014.19},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICECCS.2014.19},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/iceccs.2014.19}}

@article{Stallbaum:2010,
	Author = {Stallbaum, Heiko and Rzepka, Mark},
	Date-Added = {2019-05-12 23:49:43 +0100},
	Date-Modified = {2019-05-12 23:52:07 +0100},
	Doi = {10.1109/modevva.2010.21},
	Isbn = {9780769543840},
	Journal = {2010 Workshop on Model-Driven Engineering, Verification, and Validation},
	Publisher = {IEEE},
	Title = {Toward DO-178B-compliant Test Models},
	Url = {http://dx.doi.org/10.1109/MoDeVVa.2010.21},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/MoDeVVa.2010.21},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/modevva.2010.21}}

@article{Grasso:2010,
	Author = {Grasso, Daniele and Fantechi, Alessandro and Ferrari, Alessio and Becheri, Carlo and Bacherini, Stefano},
	Date-Added = {2019-05-12 23:48:44 +0100},
	Date-Modified = {2019-05-12 23:52:00 +0100},
	Doi = {10.1109/icst.2010.44},
	Isbn = {9781424464357},
	Journal = {2010 Third International Conference on Software Testing, Verification and Validation},
	Publisher = {IEEE},
	Title = {Model Based Testing and Abstract Interpretation in the Railway Signaling Context},
	Url = {http://dx.doi.org/10.1109/ICST.2010.44},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICST.2010.44},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/icst.2010.44}}

@proceedings{Drechsler:2015,
	Date-Added = {2019-05-12 23:44:55 +0100},
	Date-Modified = {2019-05-12 23:47:36 +0100},
	Doi = {10.1007/978-3-658-09994-7},
	Editor = {Rolf Drechsler and Ulrich K{\"u}hne},
	Publisher = {Springer Fachmedien Wiesbaden},
	Title = {Formal Modeling and Verification of Cyber-Physical Systems},
	Year = {2015}}

@inproceedings{Kim:2015,
	Abstract = {Many safety-concerned standards and regulations for real-time embedded systems, e.g., ISO 26262 for automotive electric/electronic systems, recommends the use of formal techniques to achieve the required safety level. This paper presents a method for formal analysis of real-time embedded systems. The method allows properties to be statistically checked early and quickly with high confidence, and may also produce a formal proof when required. This environment exploits uppaal tools consisting of a symbolic model checker (uppaal MC) and a statistical model checker (uppaal smc), and a model-based testing environment (uppaal Yggdrasil), all of which are based on a formal model in timed automata. We demonstrate our method on an industrial case, an automotive Turn Indicator System, showing how the design of the system at the early phase of system development may be efficiently checked against the defined system requirements.},
	Address = {Cham},
	Author = {Kim, Jin Hyun and Larsen, Kim G. and Nielsen, Brian and Miku{\v{c}}ionis, Marius and Olsen, Petur},
	Booktitle = {Formal Methods for Industrial Critical Systems},
	Date-Added = {2019-05-12 23:40:00 +0100},
	Date-Modified = {2019-05-12 23:40:00 +0100},
	Doi = {10.1007/978-3-319-19458-5_4},
	Isbn = {978-3-319-19458-5},
	Pages = {47-61},
	Publisher = {Springer International Publishing},
	Title = {Formal Analysis and Testing of Real-Time Automotive Systems Using UPPAAL Tools},
	Year = {2015},
	Bdsk-Url-1 = {https://doi.org/10.1007/978-3-319-19458-5_4}}

@article{Schrammel:2014,
	Abstract = {Testing of reactive systems is challenging because long input sequences are often needed to drive them into a state to test a desired feature. This is particularly problematic in on-target testing, where a system is tested in its real-life application environment and the amount of time required for resetting is high. This article presents an approach to discovering a test case chain---a single software execution that covers a group of test goals and minimizes overall test execution time. Our technique targets the scenario in which test goals for the requirements are given as safety properties. We give conditions for the existence and minimality of a single test case chain and minimize the number of test case chains if a single test case chain is infeasible. We report experimental results with our ChainCover tool for C code generated from Simulink models and compare it to state-of-the-art test suite generators.},
	Author = {Schrammel, Peter and Melham, Tom and Kroening, Daniel},
	Date-Added = {2019-05-12 23:37:43 +0100},
	Date-Modified = {2019-05-12 23:37:43 +0100},
	Doi = {10.1007/s10009-014-0358-6},
	Issn = {1433-2787},
	Journal = {International Journal on Software Tools for Technology Transfer},
	Number = {3},
	Pages = {319--334},
	Title = {Generating test case chains for reactive systems},
	Url = {https://doi.org/10.1007/s10009-014-0358-6},
	Volume = {18},
	Year = {2014},
	Bdsk-Url-1 = {https://doi.org/10.1007/s10009-014-0358-6}}

@inproceedings{Aichernig:2015,
	Abstract = {Model-based testing is a popular black-box testing technology that enables automation of test generation and execution, while achieving a given coverage. The application of this technology to large and complex systems is still a challenging problem, due to the state-space explosion resulting from the size of specification models.},
	Address = {Cham},
	Author = {Aichernig, Bernhard K. and Ni{\v{c}}kovi{\'{c}}, Dejan and Tiran, Stefan},
	Booktitle = {Tests and Proofs},
	Date-Added = {2019-05-12 23:32:07 +0100},
	Date-Modified = {2019-05-12 23:32:07 +0100},
	Doi = {10.1007/978-3-319-21215-9_1},
	Editor = {Blanchette, Jasmin Christian and Kosmatov, Nikolai},
	Isbn = {978-3-319-21215-9},
	Pages = {1-18},
	Publisher = {Springer International Publishing},
	Title = {Scalable Incremental Test-case Generation from Large Behavior Models},
	Year = {2015},
	Bdsk-Url-1 = {https://doi.org/10.1007/978-3-319-21215-9_1}}

@article{Gario:2015,
	Author = {Gario, Ahmed and Andrews, Anneliese and Hagerman, Seana},
	Date-Added = {2019-05-12 23:29:23 +0100},
	Date-Modified = {2019-05-12 23:52:59 +0100},
	Doi = {10.1007/s11219-015-9283-5},
	Issn = {1573-1367},
	Journal = {Software Quality Journal},
	Number = {1},
	Pages = {3--48},
	Publisher = {Springer Nature},
	Title = {Fail-safe testing of safety-critical systems: a case study and efficiency analysis},
	Url = {http://dx.doi.org/10.1007/s11219-015-9283-5},
	Volume = {26},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s11219-015-9283-5}}

@article{Arcaini:2015,
	Author = {Arcaini, Paolo and Gargantini, Angelo and Riccobene, Elvinia},
	Date-Added = {2019-05-12 23:28:34 +0100},
	Date-Modified = {2019-05-12 23:53:32 +0100},
	Doi = {10.1007/s10009-015-0394-x},
	Issn = {1433-2787},
	Journal = {International Journal on Software Tools for Technology Transfer},
	Number = {2},
	Pages = {247--269},
	Publisher = {Springer Nature},
	Title = {Rigorous development process of a safety-critical system: from ASM models to Java code},
	Url = {http://dx.doi.org/10.1007/s10009-015-0394-x},
	Volume = {19},
	Year = {2015},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s10009-015-0394-x}}

@article{Choi:2014,
	Author = {Choi, Yunja and Byun, Taejoon},
	Date-Added = {2019-05-12 23:26:37 +0100},
	Date-Modified = {2019-05-12 23:26:57 +0100},
	Doi = {10.1007/s10270-014-0449-6},
	Issn = {1619-1374},
	Journal = {Software & Systems Modeling},
	Number = {1},
	Pages = {7--24},
	Publisher = {Springer Nature},
	Title = {Constraint-based test generation for automotive operating systems},
	Url = {http://dx.doi.org/10.1007/s10270-014-0449-6},
	Volume = {16},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s10270-014-0449-6}}

@article{Enoiu:2014,
	Author = {Enoiu, Eduard P. and {\v C}au{\v s}evi{\'c}, Adnan and Ostrand, Thomas J. and Weyuker, Elaine J. and Sundmark, Daniel and Pettersson, Paul},
	Date-Added = {2019-05-12 23:25:29 +0100},
	Date-Modified = {2019-05-12 23:27:05 +0100},
	Doi = {10.1007/s10009-014-0355-9},
	Issn = {1433-2787},
	Journal = {International Journal on Software Tools for Technology Transfer},
	Number = {3},
	Pages = {335--353},
	Publisher = {Springer Nature},
	Title = {Automated test generation using model checking: an industrial evaluation},
	Url = {http://dx.doi.org/10.1007/s10009-014-0355-9},
	Volume = {18},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s10009-014-0355-9}}

@inproceedings{Wilkinson:2014,
	Abstract = {We describe ongoing work into the generation of test cases for safety critical systems using Event-B and the Rodin toolset. Verification of software to DO-178C is a two stage process. First a suite of test cases must be validated against the system requirements (requirements coverage), and then the software implementation is verified using the validated test suite. During verification of the implementation structural coverage is also measured.},
	Address = {Cham},
	Author = {Wilkinson, Toby and Butler, Michael and Colley, John},
	Booktitle = {Model-Based Safety and Assessment},
	Date-Added = {2019-05-12 23:23:33 +0100},
	Date-Modified = {2019-05-12 23:23:33 +0100},
	Doi = {10.1007/978-3-319-12214-4_4},
	Editor = {Ortmeier, Frank and Rauzy, Antoine},
	Isbn = {978-3-319-12214-4},
	Pages = {43-56},
	Publisher = {Springer International Publishing},
	Title = {A Systematic Approach to Requirements Driven Test Generation for Safety Critical Systems},
	Year = {2014},
	Bdsk-Url-1 = {https://doi.org/10.1007/978-3-319-12214-4_4}}

@article{Aichernig:2014,
	Author = {Aichernig, Bernhard K. and H{\"o}rmaier, Klaus and Lorber, Florian},
	Date-Added = {2019-05-12 23:21:27 +0100},
	Date-Modified = {2019-05-12 23:52:49 +0100},
	Doi = {10.1007/978-3-319-10506-2_4},
	Isbn = {9783319105062},
	Issn = {1611-3349},
	Journal = {Computer Safety, Reliability, and Security},
	Pages = {49--64},
	Publisher = {Springer International Publishing},
	Title = {Debugging with Timed Automata Mutations},
	Url = {http://dx.doi.org/10.1007/978-3-319-10506-2_4},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/978-3-319-10506-2_4}}

@article{Marrone:2014,
	Author = {Marrone, Stefano and Flammini, Francesco and Mazzocca, Nicola and Nardone, Roberto and Vittorini, Valeria},
	Date-Added = {2019-05-12 23:20:19 +0100},
	Date-Modified = {2019-05-12 23:53:47 +0100},
	Doi = {10.1007/s10009-014-0320-7},
	Issn = {1433-2787},
	Journal = {International Journal on Software Tools for Technology Transfer},
	Number = {6},
	Pages = {669--683},
	Publisher = {Springer Nature},
	Title = {Towards Model-Driven V&V assessment of railway control systems},
	Url = {http://dx.doi.org/10.1007/s10009-014-0320-7},
	Volume = {16},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/s10009-014-0320-7}}

@inproceedings{Gentile:2014,
	Abstract = {Model Based Testing (MBT) enables automatic generation of test cases using models to specify the system behavior and requirements. Key features of MBT approaches are the automation level and the complexity of non-automated steps. Usually, test case generation is supported by some automatic technique whereas modeling is manually performed. UML statecharts or other extended finite state machine formalisms are widely used to build behavior models. To ease their development, as well as the extraction of test cases from them, is an important aspect to be addressed in order to perform testing activities with lower skill, cost and effort. This paper aims at providing a contribution to both the issues. Test Specification Patterns (TSPs) are proposed and expressed by means of UML annotated statecharts as a mean to aid the construction of models and build specifications on the base of well known recurring problems and their solutions (patterns). In order to improve usability and increase the automation level, a transformational approach is defined which derives Promela code from specifications built by TSPs composition and applies model checking to obtain test sequences by using the SPIN model checker. The usage of TSPs and the test case generation process is illustrated on a test scenario from the Radio Block Centre, the vital core of the modern railway control systems.},
	Address = {Cham},
	Author = {Gentile, Ugo and Marrone, Stefano and Mele, Gianluca and Nardone, Roberto and Peron, Adriano},
	Booktitle = {Formal Methods for Industrial Critical Systems},
	Date-Added = {2019-05-12 23:19:20 +0100},
	Date-Modified = {2019-05-12 23:19:20 +0100},
	Doi = {10.1007/978-3-319-10702-8_12},
	Editor = {Lang, Fr{\'e}d{\'e}ric and Flammini, Francesco},
	Isbn = {978-3-319-10702-8},
	Pages = {170-184},
	Publisher = {Springer International Publishing},
	Title = {Test Specification Patterns for Automatic Generation of Test Sequences},
	Year = {2014},
	Bdsk-Url-1 = {https://doi.org/10.1007/978-3-319-10702-8_12}}

@article{Zheng:2014,
	Author = {Zheng, Wei and Liang, Ci and Wang, Rui and Kong, Weijie},
	Date-Added = {2019-05-12 23:16:52 +0100},
	Date-Modified = {2019-05-12 23:52:40 +0100},
	Doi = {10.1109/tits.2014.2320552},
	Issn = {1558-0016},
	Journal = {IEEE Transactions on Intelligent Transportation Systems},
	Number = {6},
	Pages = {2551--2560},
	Publisher = {Institute of Electrical and Electronics Engineers (IEEE)},
	Title = {Automated Test Approach Based on All Paths Covered Optimal Algorithm and Sequence Priority Selected Algorithm},
	Url = {http://dx.doi.org/10.1109/TITS.2014.2320552},
	Volume = {15},
	Year = {2014},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/TITS.2014.2320552},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/tits.2014.2320552}}

@article{Enoiu:2013,
	Author = {Enoiu, Eduard Paul and Sundmark, Daniel and Pettersson, Paul},
	Date-Added = {2019-05-12 23:15:49 +0100},
	Date-Modified = {2019-05-12 23:53:11 +0100},
	Doi = {10.1109/icstw.2013.27},
	Isbn = {9781479913244},
	Journal = {2013 IEEE Sixth International Conference on Software Testing, Verification and Validation Workshops},
	Publisher = {IEEE},
	Title = {Model-Based Test Suite Generation for Function Block Diagrams Using the UPPAAL Model Checker},
	Url = {http://dx.doi.org/10.1109/ICSTW.2013.27},
	Year = {2013},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICSTW.2013.27},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/icstw.2013.27}}

@article{Mathaikutty:2007,
	Author = {Mathaikutty, Deepak A. and Sumit Ahuja and Ajit Dingankar and Sandeep Shukla},
	Date-Added = {2019-05-12 23:14:32 +0100},
	Date-Modified = {2019-05-12 23:53:19 +0100},
	Doi = {10.1109/hldvt.2007.4392792},
	Isbn = {9781424414802},
	Journal = {2007 IEEE International High Level Design Validation and Test Workshop},
	Publisher = {IEEE},
	Title = {Model-driven test generation for system level validation},
	Url = {http://dx.doi.org/10.1109/HLDVT.2007.4392792},
	Year = {2007},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/HLDVT.2007.4392792},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/hldvt.2007.4392792}}

@inproceedings{Krenn:2009,
	Abstract = {The Unified Modeling Language (UML) is a well known and widely used standard for building software models. While it is familiar to many software engineers, it lacks standardized formal semantics. In this paper, we extend on the formalism of object-oriented action systems (OOAS) and describe a mapping of a selected UML-subset to OOAS by choosing one of the several possible semantics of UML. This mapping, together with the introduction of a trace semantics for OOAS, paves the way for applying tools for and theory of labeled transition systems to UML-models. As a running example, we use a car alarm system in the context of model-based test-case generation and show how the UML mapping is done.},
	Address = {Berlin, Heidelberg},
	Author = {Krenn, Willibald and Schlick, Rupert and Aichernig, Bernhard K.},
	Booktitle = {Formal Methods for Components and Objects},
	Date-Added = {2019-05-12 23:13:34 +0100},
	Date-Modified = {2019-05-12 23:13:34 +0100},
	Doi = {10.1007/978-3-642-17071-3_10},
	Editor = {de Boer, Frank S. and Bonsangue, Marcello M. and Hallerstede, Stefan and Leuschel, Michael},
	Isbn = {978-3-642-17071-3},
	Pages = {186-207},
	Publisher = {Springer Berlin Heidelberg},
	Title = {Mapping UML to Labeled Transition Systems for Test-Case Generation},
	Year = {2009},
	Bdsk-Url-1 = {https://doi.org/10.1007/978-3-642-17071-3_10}}

@article{Herzner:2010,
	Abstract = {This paper describes a new approach for model-based test case generation (MBTCG) for large systems, which not only supports the expression of complex requirements (constraints) using OCL, but also lays ground for improving the efficiency (i.e. maximum coverage with minimal number of test cases) of the generated test case set. For that purpose, UML/OCL models are transformed to (object-oriented) action systems, where test cases are generated by means of mutation. The resulting ``abstract'' test cases represent input/output sequences with possible branches according to valid alternatives in system responses. They have finally to be transformed to ``concrete'' test cases which can be applied to the target application. The described work is part of the European project MOGENTES.},
	Author = {Herzner, W. and Schlick, R. and Sch{\"u}tz, W. and Brandl, H. and Krenn, W.},
	Date-Added = {2019-05-12 23:10:44 +0100},
	Date-Modified = {2019-05-12 23:10:44 +0100},
	Doi = {10.1007/s00502-010-0741-2},
	Issn = {1613-7620},
	Journal = {e and i Elektrotechnik und Informationstechnik},
	Number = {6},
	Pages = {181-186},
	Title = {Towards generation of efficient test cases from UML/OCL models for complex safety-critical systems},
	Url = {https://doi.org/10.1007/s00502-010-0741-2},
	Volume = {127},
	Year = {2010},
	Bdsk-Url-1 = {https://doi.org/10.1007/s00502-010-0741-2}}

@inproceedings{Proetzsch:2010,
	Abstract = {One aspect often neglected during the development of autonomous mobile robots is the systematic validation of their overall behavior. Especially large robots applied to real-world scenarios may cause injuries or even human death and must therefore be classified as safety-critical. In this paper, a generic approach to defining and executing purposeful test runs using domain-specific languages (dsls) is presented. Test cases can be defined in an appropriate test description language (first dsl). These test cases can be derived automatically using a model-based testing approach, for which a test model has to be created. Hence, a second dsl for the creation of the test model is presented. It is further shown how the generated test cases are automatically executed and evaluated. The paper concludes with the application of the approach to the autonomous off-road robot ravon.},
	Address = {Berlin, Heidelberg},
	Author = {Proetzsch, Martin and Zimmermann, Fabian and Eschbach, Robert and Kloos, Johannes and Berns, Karsten},
	Booktitle = {KI 2010: Advances in Artificial Intelligence},
	Date-Added = {2019-05-12 23:08:18 +0100},
	Date-Modified = {2019-05-12 23:08:18 +0100},
	Doi = {10.1007/978-3-642-16111-7_36},
	Editor = {Dillmann, R{\"u}diger and Beyerer, J{\"u}rgen and Hanebeck, Uwe D. and Schultz, Tanja},
	Isbn = {978-3-642-16111-7},
	Pages = {317-324},
	Publisher = {Springer Berlin Heidelberg},
	Title = {A Systematic Testing Approach for Autonomous Mobile Robots Using Domain-Specific Languages},
	Year = {2010},
	Bdsk-Url-1 = {https://doi.org/10.1007/978-3-642-16111-7_36}}

@inproceedings{Micskei:2012,
	Abstract = {Autonomous systems are used nowadays in more and more sectors from vehicles to domestic robots. They can make decisions on their own or interact with humans, thus their robustness and safety are properties of crucial importance. Due to the adaptive and context-aware nature of these systems, the testing of such properties is especially challenging. In this paper, we propose a model-based testing approach to capture the context and requirements of such systems, to automatically generate test data representing complex situations, and to evaluate test traces and compute test coverage metrics.},
	Address = {Berlin, Heidelberg},
	Author = {Micskei, Zolt{\'a}n and Szatm{\'a}ri, Zolt{\'a}n and Ol{\'a}h, J{\'a}nos and Majzik, Istv{\'a}n},
	Booktitle = {Agent and Multi-Agent Systems. Technologies and Applications},
	Date-Added = {2019-05-12 23:06:13 +0100},
	Date-Modified = {2019-05-12 23:06:13 +0100},
	Doi = {10.1007/978-3-642-30947-2_55},
	Editor = {Jezic, Gordan and Kusek, Mario and Nguyen, Ngoc-Thanh and Howlett, Robert J. and Jain, Lakhmi C.},
	Isbn = {978-3-642-30947-2},
	Pages = {504-513},
	Publisher = {Springer Berlin Heidelberg},
	Title = {A Concept for Testing Robustness and Safety of the Context-Aware Behaviour of Autonomous Systems},
	Year = {2012},
	Bdsk-Url-1 = {https://doi.org/10.1007/978-3-642-30947-2_55}}

@inproceedings{Gargantini:2007,
	Abstract = {We present a technique which generates from Abstract State Machines specifications a set of test sequences capable to uncover specific fault classes. The notion of test goal is introduced as a state predicate denoting the detection condition for a particular fault. Tests are generated by forcing a model checker to produce counter examples which cover the test goals. We introduce a technique for the evaluation of the fault detection capability of a test set. We report some experimental results which validate the method, compare the fault adequacy criteria with some classical structural coverage criteria and show an empirical cross coverage among faults.},
	Address = {Berlin, Heidelberg},
	Author = {Gargantini, Angelo},
	Booktitle = {Tests and Proofs},
	Date-Added = {2019-05-12 23:02:13 +0100},
	Date-Modified = {2019-05-12 23:02:13 +0100},
	Doi = {10.1007/978-3-540-73770-4_11},
	Editor = {Gurevich, Yuri and Meyer, Bertrand},
	Isbn = {978-3-540-73770-4},
	Pages = {189-206},
	Publisher = {Springer Berlin Heidelberg},
	Title = {Using Model Checking to Generate Fault Detecting Tests},
	Year = {2007},
	Bdsk-Url-1 = {https://doi.org/10.1007/978-3-540-73770-4_11}}

@incollection{Cichos:2011,
	Author = {Cichos, Harald and Oster, Sebastian and Lochau, Malte and Sch{\"u}rr, Andy},
	Booktitle = {Model Driven Engineering Languages and Systems},
	Date-Added = {2019-05-12 22:58:05 +0100},
	Date-Modified = {2019-05-12 22:58:31 +0100},
	Doi = {10.1007/978-3-642-24485-8_31},
	Isbn = {9783642244858},
	Issn = {1611-3349},
	Pages = {425--439},
	Publisher = {Springer Berlin Heidelberg},
	Title = {Model-Based Coverage-Driven Test Suite Generation for Software Product Lines},
	Url = {http://dx.doi.org/10.1007/978-3-642-24485-8_31},
	Year = {2011},
	Bdsk-Url-1 = {http://dx.doi.org/10.1007/978-3-642-24485-8_31}}

@article{Auguston:2006,
	Abstract = {This paper presents an approach to automatic scenario generation from environment behavior models for testing of real-time reactive systems. The model of behavior is defined as a set of events (event trace) with two basic relations: precedence and inclusion. The attributed event grammar (AEG) specifies possible event traces and provides a uniform approach for automatically generating and executing test cases. The environment model includes a description of hazardous states in which the system may arrive and makes it possible to gather statistics for system safety assessment. The approach is supported by a generator that creates test cases from the AEG models. We demonstrate the approach with a case study of a software prototype of the computer-assisted resuscitation algorithm for a safety-critical casualty intravenous fluid infusion pump.},
	Author = {Mikhail Auguston and James Bret Michael and Man-Tak Shing},
	Date-Added = {2019-05-12 22:57:16 +0100},
	Date-Modified = {2019-05-12 22:58:56 +0100},
	Doi = {10.1016/j.infsof.2006.03.005},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Model-based testing, Testing automation, Reactive and real-time system testing},
	Note = {Advances in Model-based Testing},
	Number = {10},
	Pages = {971 - 980},
	Title = {Environment behavior models for automation of testing and assessment of system safety},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584906000413},
	Volume = {48},
	Year = {2006},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584906000413},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2006.03.005}}

@article{Tseng:2013,
	Abstract = {Context
The current validation tests for nuclear software are routinely performed by random testing, which leads to uncertain test coverage. Moreover, validation tests should directly verify the system's compliance with the original user's needs. Unlike current model-based testing methods, which are generally based on requirements or design models, the proposed model is derived from the original user's needs in text through domain-specific ontology, and then used to generate validation tests systematically.
Objective
Our first goal is to develop an objective, repeatable, and efficient systematic validation test scheme that is effective for large systems, with analyzable test coverage. Our second goal is to provide a new model-based validation testing method that reflects the user's original safety needs.
Method
A model-based scenario test case generation for nuclear digital safety systems was designed. This was achieved by converting the scenarios described in natural language in a Safety Analysis Report (SAR) prepared by the power company for licensing review, to Unified Modeling Language (UML) sequence diagrams based on a proposed ontology of a related regulatory standard. Next, we extracted the initial environmental parameters and the described operational sequences. We then performed variations on these data to systematically generate a sufficient number of scenario test cases.
Results
Test coverage criteria, which are the equivalence partition coverage of initial environment, the condition coverage, the action coverage and the scenario coverage, were met using our method.
Conclusion
The proposed model-based scenario testing can provide improved testing coverage than random testing. A test suite based on user needs can be provided.},
	Author = {Wan-Hui Tseng and Chin-Feng Fan},
	Date-Added = {2019-05-12 22:56:28 +0100},
	Date-Modified = {2019-05-12 22:59:45 +0100},
	Doi = {10.1016/j.infsof.2012.08.016},
	Issn = {0950-5849},
	Journal = {Information and Software Technology},
	Keywords = {Scenario testing, Sequence diagram, Ontology, Preliminary Safety Analysis Report (PSAR)},
	Note = {Special Section: Component-Based Software Engineering (CBSE), 2011},
	Number = {2},
	Pages = {344 - 356},
	Title = {Systematic scenario test case generation for nuclear safety systems},
	Url = {http://www.sciencedirect.com/science/article/pii/S0950584912001838},
	Volume = {55},
	Year = {2013},
	Bdsk-Url-1 = {http://www.sciencedirect.com/science/article/pii/S0950584912001838},
	Bdsk-Url-2 = {https://doi.org/10.1016/j.infsof.2012.08.016}}

@article{Lochau:2010,
	Author = {Lochau, Malte and Goltz, Ursula},
	Date-Added = {2019-05-12 22:55:40 +0100},
	Date-Modified = {2019-05-12 22:59:04 +0100},
	Doi = {10.1016/j.entcs.2010.12.013},
	Issn = {1571-0661},
	Journal = {Electronic Notes in Theoretical Computer Science},
	Number = {3},
	Pages = {37--52},
	Publisher = {Elsevier BV},
	Title = {Feature Interaction Aware Test Case Generation for Embedded Control Systems},
	Url = {http://dx.doi.org/10.1016/j.entcs.2010.12.013},
	Volume = {264},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.entcs.2010.12.013}}

@article{Kollmann:2007,
	Author = {Kollmann, Maik and Hon, Yuen Man},
	Date-Added = {2019-05-12 22:54:58 +0100},
	Date-Modified = {2019-05-12 22:59:13 +0100},
	Doi = {10.1016/j.entcs.2007.08.006},
	Issn = {1571-0661},
	Journal = {Electronic Notes in Theoretical Computer Science},
	Number = {2},
	Pages = {61--72},
	Publisher = {Elsevier BV},
	Title = {Generating Scenarios by Multi-Object Checking},
	Url = {http://dx.doi.org/10.1016/j.entcs.2007.08.006},
	Volume = {190},
	Year = {2007},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.entcs.2007.08.006}}

@article{Kloos:2010,
	Author = {Kloos, Johannes and Eschbach, Robert},
	Date-Added = {2019-05-12 22:53:53 +0100},
	Date-Modified = {2019-05-12 22:58:38 +0100},
	Doi = {10.1016/j.entcs.2010.05.009},
	Issn = {1571-0661},
	Journal = {Electronic Notes in Theoretical Computer Science},
	Pages = {145--160},
	Publisher = {Elsevier BV},
	Title = {A Systematic Approach to Construct Compositional Behaviour Models for Network-structured Safety-critical Systems},
	Url = {http://dx.doi.org/10.1016/j.entcs.2010.05.009},
	Volume = {263},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1016/j.entcs.2010.05.009}}

@article{Kloos:2011,
	Author = {Kloos, Johannes and Hussain, Tanvir and Eschbach, Robert},
	Date-Added = {2019-05-12 22:52:33 +0100},
	Date-Modified = {2019-05-12 22:59:25 +0100},
	Doi = {10.1109/icstw.2011.90},
	Isbn = {9781457700194},
	Journal = {2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops},
	Publisher = {IEEE},
	Title = {Risk-Based Testing of Safety-Critical Embedded Systems Driven by Fault Tree Analysis},
	Url = {http://dx.doi.org/10.1109/ICSTW.2011.90},
	Year = {2011},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICSTW.2011.90},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/icstw.2011.90}}

@inproceedings{Lv:2013,
	Author = {J. {Lv} and K. {Li} and G. {Wei} and T. {Tang} and C. {Li} and W. {Zhao}},
	Booktitle = {2013 IEEE Eleventh International Symposium on Autonomous Decentralized Systems (ISADS)},
	Date-Added = {2019-05-12 22:50:18 +0100},
	Date-Modified = {2019-05-12 22:50:36 +0100},
	Doi = {10.1109/ISADS.2013.6513433},
	Keywords = {Automata;Testing;Safety;Analytical models;Data models;Observers;Educational institutions;Onboard system;Model-based testing;Test Case;Coverage Criteria},
	Pages = {1-6},
	Title = {Model-based test cases generation for Onboard system},
	Year = {2013},
	Bdsk-Url-1 = {https://doi.org/10.1109/ISADS.2013.6513433}}

@article{Yu:2009,
	Author = {Yu, Gang and Xu, Zhong wei and Du, Jun wei},
	Date-Added = {2019-05-12 22:49:07 +0100},
	Date-Modified = {2019-05-12 22:50:43 +0100},
	Doi = {10.1109/ifita.2009.18},
	Isbn = {9780769536002},
	Journal = {2009 International Forum on Information Technology and Applications},
	Publisher = {IEEE},
	Title = {An Approach for Automated Safety Testing of Safety-Critical Software System Based on Safety Requirements},
	Url = {http://dx.doi.org/10.1109/IFITA.2009.18},
	Year = {2009},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/IFITA.2009.18},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/ifita.2009.18}}

@article{Fang:2012,
	Author = {Fang, Ling and Kitamura, Takashi and Do, Thi Bich Ngoc and Ohsaki, Hitoshi},
	Date-Added = {2019-05-12 22:48:12 +0100},
	Date-Modified = {2019-05-12 22:50:59 +0100},
	Doi = {10.1109/icst.2012.105},
	Isbn = {9781457719066},
	Journal = {2012 IEEE Fifth International Conference on Software Testing, Verification and Validation},
	Publisher = {IEEE},
	Title = {Formal Model-Based Test for AUTOSAR Multicore RTOS},
	Url = {http://dx.doi.org/10.1109/ICST.2012.105},
	Year = {2012},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/ICST.2012.105},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/icst.2012.105}}

@article{Yu:2010,
	Author = {Yu, Gang and Xu, Zhong wei},
	Date-Added = {2019-05-12 22:46:54 +0100},
	Date-Modified = {2019-05-12 22:51:07 +0100},
	Doi = {10.1109/cise.2010.5676883},
	Isbn = {9781424453917},
	Journal = {2010 International Conference on Computational Intelligence and Software Engineering},
	Publisher = {IEEE},
	Title = {Model-Based Safety Test Automation of Safety-Critical Software},
	Url = {http://dx.doi.org/10.1109/CISE.2010.5676883},
	Year = {2010},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/CISE.2010.5676883},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/cise.2010.5676883}}

@article{Kandl:2006,
	Author = {Kandl, Susanne and Kirner, Raimund and Puschner, Peter},
	Date-Added = {2019-05-12 22:45:44 +0100},
	Date-Modified = {2019-05-12 22:50:51 +0100},
	Doi = {10.1109/wises.2006.329116},
	Isbn = {3902463066},
	Journal = {2006 International Workshop on Intelligent Solutions in Embedded Systems},
	Publisher = {IEEE},
	Title = {Development of a Framework for Automated Systematic Testing of Safety-Critical Embedded Systems},
	Url = {http://dx.doi.org/10.1109/WISES.2006.329116},
	Year = {2006},
	Bdsk-Url-1 = {http://dx.doi.org/10.1109/WISES.2006.329116},
	Bdsk-Url-2 = {http://dx.doi.org/10.1109/wises.2006.329116}}
